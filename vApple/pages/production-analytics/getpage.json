{"docs":[{"system_page":0,"parent":null,"creation":"2012-09-21 20:15:16","module":"Manufacturing","standard":"Yes","doctype":"Page","owner":"Administrator","icon":"fa fa-bar-chart","style":null,"modified_by":"Administrator","name":"production-analytics","roles":[{"modified_by":"Administrator","name":null,"parent":"production-analytics","creation":"2012-09-21 20:15:16","modified":"2017-06-09 23:52:02.543427","doctype":"Has Role","idx":1,"parenttype":"Page","role":"Analytics","owner":"Administrator","docstatus":0,"parentfield":"roles"}],"script":"// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// License: GNU General Public License v3. See license.txt\n\nfrappe.pages['production-analytics'].on_page_load = function(wrapper) {\n\tfrappe.ui.make_app_page({\n\t\tparent: wrapper,\n\t\ttitle: __('Production Analytics'),\n\t\tsingle_column: true\n\t});\n\n\tnew erpnext.ProductionAnalytics(wrapper);\n\n\tfrappe.breadcrumbs.add(\"Manufacturing\");\n}\n\nerpnext.ProductionAnalytics = frappe.views.GridReportWithPlot.extend({\n\tinit: function(wrapper) {\n\t\tthis._super({\n\t\t\ttitle: __(\"Production Analytics\"),\n\t\t\tparent: $(wrapper).find('.layout-main'),\n\t\t\tpage: wrapper.page,\n\t\t\tdoctypes: [\"Item\", \"Company\", \"Fiscal Year\", \"Production Order\"]\n\t\t});\n\n\t},\n\tsetup_columns: function() {\n\n\t\tvar std_columns = [\n\t\t\t{id: \"_check\", name: __(\"Plot\"), field: \"_check\", width: 30,\n\t\t\t\tformatter: this.check_formatter},\n\t\t\t{id: \"name\", name: __(\"Status\"), field: \"name\", width: 100},\n\t\t];\n\n\t\tthis.make_date_range_columns();\n\t\tthis.columns = std_columns.concat(this.columns);\n\t},\n\tfilters: [\n\t\t{fieldtype:\"Select\", label: __(\"Company\"), link:\"Company\", fieldname: \"company\",\n\t\t\tdefault_value: __(\"Select Company...\")},\n\t\t{fieldtype:\"Date\", label: __(\"From Date\"), fieldname: \"from_date\"},\n\t\t{fieldtype:\"Date\", label: __(\"To Date\"), fieldname: \"to_date\"},\n\t\t{fieldtype:\"Select\", label: __(\"Range\"), fieldname: \"range\",\n\t\t\toptions:[{label: __(\"Daily\"), value: \"Daily\"}, {label: __(\"Weekly\"), value: \"Weekly\"},\n\t\t\t\t{label: __(\"Monthly\"), value: \"Monthly\"}, {label: __(\"Quarterly\"), value: \"Quarterly\"},\n\t\t\t\t{label: __(\"Yearly\"), value: \"Yearly\"}]}\n\t],\n\tsetup_filters: function() {\n\t\tvar me = this;\n\t\tthis._super();\n\n\t\tthis.trigger_refresh_on_change([\"company\"]);\n\t\tthis.trigger_refresh_on_change([\"range\"]);\n\n\t\tthis.show_zero_check()\n\t\tthis.setup_chart_check();\n\t\t\n\t},\n\tinit_filter_values: function() {\n\t\tthis._super();\n\t\tthis.filter_inputs.range.val('Monthly');\n\t},\n\tsetup_chart: function() {\n\t\tvar me = this;\n\t\t\n\t\tvar chart_data = this.get_chart_data ? this.get_chart_data() : null;\n\n\t\tthis.chart = new frappe.ui.Chart({\n\t\t\twrapper: this.chart_area,\n\t\t\tdata: chart_data\n\t\t});\n\t},\n\tset_default_values: function() {\n\t\tvar values = {\n\t\t\tfrom_date: frappe.datetime.str_to_user(frappe.datetime.add_months(frappe.datetime.now_datetime(),-12) ),\n\t\t\tto_date: frappe.datetime.str_to_user(frappe.datetime.add_months(frappe.datetime.now_datetime(),1))\n\t\t}\n\n\t\tvar me = this;\n\t\t$.each(values, function(i, v) {\n\t\t\tif(me.filter_inputs[i] && !me.filter_inputs[i].val())\n\t\t\t\tme.filter_inputs[i].val(v);\n\t\t})\n\t},\n\n\tprepare_data: function() {\n\t\t// add Opening, Closing, Totals rows\n\t\t// if filtered by account and / or voucher\n\t\tvar me = this;\n\t\tvar all_open_orders = {name:\"All Production Orders\", \"id\": \"all-open-pos\",\n\t\t\tchecked:true};\n\t\tvar not_started = {name:\"Not Started\", \"id\":\"not-started-pos\",\n\t\t\tchecked:true};\n\t\tvar overdue = {name:\"Overdue (Not Started)\", \"id\":\"overdue-pos\",\n\t\t\tchecked:true};\n\t\tvar  pending = {name:\"Pending\", \"id\":\"pending-pos\",\n\t\t\tchecked:true};\n\t\tvar completed = {name:\"Completed\", \"id\":\"completed-pos\",\n\t\t\tchecked:true};\t\n\n\t\t$.each(frappe.report_dump.data[\"Production Order\"], function(i, d) {\n\t\t\tvar dateobj = frappe.datetime.str_to_obj(d.creation);\n\t\t\tvar date = frappe.datetime.str_to_user(d.creation.split(\" \")[0]);\n\n\t\t\t$.each(me.columns, function(i,col) {\n\t\t\t\tif (i > 1){\n\t\t\t\t\tvar start_period = frappe.datetime.user_to_obj(frappe.datetime.str_to_user(col.id));\n\t\t\t\t\tvar end_period = frappe.datetime.user_to_obj(frappe.datetime.str_to_user(col.name));\n\t\t\t\t\tvar astart_date = frappe.datetime.user_to_obj(frappe.datetime.str_to_user(d.actual_start_date));\n\t\t\t\t\tvar planned_start_date = frappe.datetime.user_to_obj(frappe.datetime.str_to_user(d.planned_start_date));\n\t\t\t\t\tvar aend_date = frappe.datetime.user_to_obj(frappe.datetime.str_to_user(d.actual_end_date));\n\t\t\t\t\tvar modified = frappe.datetime.user_to_obj(frappe.datetime.str_to_user(d.modified));\n\t\t\t\t\t\n\t\t\t\t\tif (dateobj <= start_period || dateobj <= end_period) {\n\t\t\t\t\t\tall_open_orders[col.field] = flt(all_open_orders[col.field]) + 1;\n\t\t\t\t\n\t\t\t\t\t\tif(d.status==\"Completed\") {\n\t\t\t\t\t\t\tif(aend_date < start_period || modified < start_period) {\n\t\t\t\t\t\t\t\tcompleted[col.field] = flt(completed[col.field]) + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (astart_date < start_period) {\n\t\t\t\t\t\t\t\tpending[col.field] = flt(pending[col.field]) + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (planned_start_date < start_period) {\n\t\t\t\t\t\t\t\toverdue[col.field] = flt(overdue[col.field]) + 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnot_started[col.field] = flt(not_started[col.field]) + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else if(d.status == \"In Process\")\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (astart_date < start_period || modified < start_period){\n\t\t\t\t\t\t\t\tpending[col.field] = flt(pending[col.field]) + 1;\n\t\t\t\t\t\t\t}else if (planned_start_date < start_period)\t{\n\t\t\t\t\t\t\t\toverdue[col.field] = flt(overdue[col.field]) + 1;\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tnot_started[col.field] = flt(not_started[col.field]) + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else if(d.status == \"Not Started\") {\n\t\t\t\t\t\t\tif (planned_start_date < start_period){\n\t\t\t\t\t\t\t\toverdue[col.field] = flt(overdue[col.field]) + 1;\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tnot_started[col.field] = flt(not_started[col.field]) + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tif(me.columns.length < 30){\n\t\t\tthis.chart_area.toggle(true);\n\t\t}else {\n\t\t\tthis.chart_area.toggle(false);\n\t\t}\n\t\tthis.data = [all_open_orders, not_started, overdue, pending, completed];\n\t\t\n\t}\n});\n","title":"Production Analytics","restrict_to_domain":null,"modified":"2017-02-20 17:33:05.913097","content":null,"idx":1,"parenttype":null,"page_name":"production-analytics","docstatus":0,"parentfield":null}]}