{"docs":[{"system_page":0,"parent":null,"creation":"2013-01-01 11:00:01","_dynamic_page":1,"module":"Core","standard":"Yes","doctype":"Page","owner":"Administrator","icon":"fa fa-lock","style":null,"modified_by":"Administrator","name":"permission-manager","roles":[{"modified_by":"Administrator","name":null,"parent":"permission-manager","creation":"2013-01-01 11:00:01","modified":"2017-06-09 23:47:39.185417","doctype":"Has Role","idx":1,"parenttype":"Page","role":"System Manager","owner":"Administrator","docstatus":0,"parentfield":"roles"}],"script":"frappe.templates[\"permission_manager_help\"] = '<hr> <div style=\"padding: 0px 15px;\"> <h4>{%= __(\"Quick Help for Setting Permissions\") %}:</h4> <ol> <li>{%= __(\"Permissions are set on Roles and Document Types (called DocTypes) by setting rights like Read, Write, Create, Delete, Submit, Cancel, Amend, Report, Import, Export, Print, Email and Set User Permissions.\") %}</li> <li>{%= __(\"Permissions get applied on Users based on what Roles they are assigned.\") %}</li> <li>{%= __(\"Roles can be set for users from their User page.\") %} <a href=\"#List/User\">{%= __(\"Setup > User\") %}</a></li> <li>{%= __(\"The system provides many pre-defined roles. You can add new roles to set finer permissions.\") %}<a href=\"#List/Role\"> {%= __(\"Add a New Role\") %}</a></li> <li>{%= __(\"Permissions are automatically translated to Standard Reports and Searches.\") %}</li> <li>{%= __(\"As a best practice, do not assign the same set of permission rule to different Roles. Instead, set multiple Roles to the same User.\") %}</li> </ol> <hr> <h4>{%= __(\"Meaning of Submit, Cancel, Amend\") %}:</h4> <ol> <li>{%= __(\"Certain documents, like an Invoice, should not be changed once final. The final state for such documents is called Submitted. You can restrict which roles can Submit.\") %}</li> <li>{%= __(\"You can change Submitted documents by cancelling them and then, amending them.\") %}</li> <li>{%= __(\"When you Amend a document after Cancel and save it, it will get a new number that is a version of the old number.\") %}</li> <li>{%= __(\"For example if you cancel and amend INV004 it will become a new document INV004-1. This helps you to keep track of each amendment.\") %}</li> </ol> <hr> <h4>{%= __(\"Permission Levels\") %}:</h4> <ol> <li>{%= __(\"Permissions at level 0 are Document Level permissions, i.e. they are primary for access to the document.\") %}</li> <li>{%= __(\"If a Role does not have access at Level 0, then higher levels are meaningless.\") %}</li> <li>{%= __(\"Permissions at higher levels are Field Level permissions. All Fields have a Permission Level set against them and the rules defined at that permissions apply to the field. This is useful in case you want to hide or make certain field read-only for certain Roles.\") %}</li> <li>{%= __(\"You can use Customize Form to set levels on fields.\") %} <a href=\"#Form/Customize Form\">Setup > Customize Form</a></li> </ol> <hr> <h4>{%= __(\"User Permissions\") %}:</h4> <ol> <li>{%= __(\"To give acess to a role for only specific records, check the Apply User Permissions. User Permissions are used to limit users with such role to specific records.\") %} <a href=\"#user-permissions\">{%= __(\"Setup > User Permissions Manager\") %}</a></li> <li>{%= __(\"Select Document Types to set which User Permissions are used to limit access.\") %}</li> <li>{%= __(\"Once you have set this, the users will only be able access documents (eg. Blog Post) where the link exists (eg. Blogger).\") %}</li> <li>{%= __(\"Apart from System Manager, roles with Set User Permissions right can set permissions for other users for that Document Type.\") %}</li> </ol> <p>{%= __(\"If these instructions where not helpful, please add in your suggestions on GitHub Issues.\") %} <a href=\"https://github.com/frappe/frappe/issues\" target=\"_blank\" rel=\"noopener noreferrer\">{%= __(\"Submit an Issue\") %}</a> </p> </div> ';\nfrappe.pages['permission-manager'].on_page_load = function(wrapper) {\n\tvar page = frappe.ui.make_app_page({\n\t\tparent: wrapper,\n\t\ttitle: __('Role Permissions Manager'),\n\t\ticon: \"fa fa-lock\",\n\t\tsingle_column: true\n\t});\n\n\tfrappe.breadcrumbs.add(\"Setup\");\n\n\t$(\"<div class='perm-engine' style='min-height: 200px; padding: 15px;'></div>\").appendTo(page.main);\n\t$(frappe.render_template(\"permission_manager_help\", {})).appendTo(page.main);\n\twrapper.permission_engine = new frappe.PermissionEngine(wrapper);\n\n}\n\nfrappe.pages['permission-manager'].refresh = function(wrapper) {\n\twrapper.permission_engine.set_from_route();\n}\n\nfrappe.PermissionEngine = Class.extend({\n\tinit: function(wrapper) {\n\t\tthis.wrapper = wrapper;\n\t\tthis.page = wrapper.page;\n\t\tthis.body = $(this.wrapper).find(\".perm-engine\");\n\t\tthis.make();\n\t\tthis.refresh();\n\t\tthis.add_check_events();\n\t},\n\tmake: function() {\n\t\tvar me = this;\n\n\t\tme.make_reset_button();\n\t\treturn frappe.call({\n\t\t\tmodule:\"frappe.core\",\n\t\t\tpage:\"permission_manager\",\n\t\t\tmethod: \"get_roles_and_doctypes\",\n\t\t\tcallback: function(r) {\n\t\t\t\tme.options = r.message;\n\t\t\t\tme.setup_page();\n\t\t\t}\n\t\t});\n\n\t},\n\tsetup_page: function() {\n\t\tvar me = this;\n\t\tthis.doctype_select\n\t\t\t= this.wrapper.page.add_select(__(\"Document Types\"),\n\t\t\t\t[{value: \"\", label: __(\"Select Document Type\")+\"...\"}].concat(this.options.doctypes))\n\t\t\t\t.change(function() {\n\t\t\t\t\tfrappe.set_route(\"permission-manager\", $(this).val());\n\t\t\t\t});\n\t\tthis.role_select\n\t\t\t= this.wrapper.page.add_select(__(\"Roles\"),\n\t\t\t\t[__(\"Select Role\")+\"...\"].concat(this.options.roles))\n\t\t\t\t.change(function() {\n\t\t\t\t\tme.refresh();\n\t\t\t\t});\n\n\t\tthis.page.add_inner_button(__('Set User Permissions'), () => {\n\t\t\treturn frappe.set_route('List', 'User Permission');\n\t\t});\n\t\tthis.set_from_route();\n\t},\n\tset_from_route: function() {\n\t\tvar me = this;\n\t\tif(!this.doctype_select) {\n\t\t\t// selects not yet loaded, call again after a bit\n\t\t\tsetTimeout(function() { me.set_from_route(); }, 500);\n\t\t\treturn;\n\t\t}\n\t\tif(frappe.get_route()[1]) {\n\t\t\tthis.doctype_select.val(frappe.get_route()[1]);\n\t\t} else if(frappe.route_options) {\n\t\t\tif(frappe.route_options.doctype) {\n\t\t\t\tthis.doctype_select.val(frappe.route_options.doctype);\n\t\t\t}\n\t\t\tif(frappe.route_options.role) {\n\t\t\t\tthis.role_select.val(frappe.route_options.role);\n\t\t\t}\n\t\t\tfrappe.route_options = null;\n\t\t}\n\t\tthis.refresh();\n\t},\n\tget_standard_permissions: function(callback) {\n\t\tvar doctype = this.get_doctype();\n\t\tif(doctype) {\n\t\t\treturn frappe.call({\n\t\t\t\tmodule:\"frappe.core\",\n\t\t\t\tpage:\"permission_manager\",\n\t\t\t\tmethod: \"get_standard_permissions\",\n\t\t\t\targs: {doctype: doctype},\n\t\t\t\tcallback: callback\n\t\t\t});\n\t\t}\n\t\treturn false;\n\t},\n\treset_std_permissions: function(data) {\n\t\tvar me = this;\n\t\tvar d = frappe.confirm(__(\"Reset Permissions for {0}?\", [me.get_doctype()]), function() {\n\t\t\treturn frappe.call({\n\t\t\t\tmodule:\"frappe.core\",\n\t\t\t\tpage:\"permission_manager\",\n\t\t\t\tmethod:\"reset\",\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: me.get_doctype(),\n\t\t\t\t},\n\t\t\t\tcallback: function() { me.refresh(); }\n\t\t\t});\n\t\t});\n\n\t\t// show standard permissions\n\t\tvar $d = $(d.wrapper).find(\".frappe-confirm-message\").append(\"<hr><h4>Standard Permissions:</h4><br>\");\n\t\tvar $wrapper = $(\"<p></p>\").appendTo($d);\n\t\t$.each(data.message, function(i, d) {\n\t\t\td.rights = [];\n\t\t\t$.each(me.rights, function(i, r) {\n\t\t\t\tif(d[r]===1) {\n\t\t\t\t\td.rights.push(__(toTitle(r.replace(\"_\", \" \"))));\n\t\t\t\t}\n\t\t\t});\n\t\t\td.rights = d.rights.join(\", \");\n\t\t\t$wrapper.append(repl('<div class=\"row\">\\\n\t\t\t\t<div class=\"col-xs-5\"><b>%(role)s</b>, Level %(permlevel)s</div>\\\n\t\t\t\t<div class=\"col-xs-7\">%(rights)s</div>\\\n\t\t\t</div><br>', d));\n\t\t});\n\n\t},\n\tget_doctype: function() {\n\t\tvar doctype = this.doctype_select.val();\n\t\treturn this.doctype_select.get(0).selectedIndex==0 ? null : doctype;\n\t},\n\tget_role: function() {\n\t\tvar role = this.role_select.val();\n\t\treturn this.role_select.get(0).selectedIndex==0 ? null : role;\n\t},\n\trefresh: function() {\n\t\tvar me = this;\n\t\tif(!me.doctype_select) {\n\t\t\tthis.body.html(\"<p class='text-muted'>\" + __(\"Loading\") + \"...</p>\");\n\t\t\treturn;\n\t\t}\n\t\tif(!me.get_doctype() && !me.get_role()) {\n\t\t\tthis.body.html(\"<p class='text-muted'>\"+__(\"Select Document Type or Role to start.\")+\"</p>\");\n\t\t\treturn;\n\t\t}\n\t\t// get permissions\n\t\tfrappe.call({\n\t\t\tmodule: \"frappe.core\",\n\t\t\tpage: \"permission_manager\",\n\t\t\tmethod: \"get_permissions\",\n\t\t\targs: {\n\t\t\t\tdoctype: me.get_doctype(),\n\t\t\t\trole: me.get_role()\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\tme.render(r.message);\n\t\t\t}\n\t\t});\n\t},\n\trender: function(perm_list) {\n\t\tthis.body.empty();\n\t\tthis.perm_list = perm_list || [];\n\t\tif(!this.perm_list.length) {\n\t\t\tthis.body.html(\"<p class='text-muted'>\"\n\t\t\t\t+__(\"No Permissions set for this criteria.\")+\"</p>\");\n\t\t} else {\n\t\t\tthis.show_permission_table(this.perm_list);\n\t\t}\n\t\tthis.show_add_rule();\n\t\tthis.make_reset_button();\n\t},\n\tshow_permission_table: function(perm_list) {\n\n\t\tvar me = this;\n\t\tthis.table = $(\"<div class='table-responsive'>\\\n\t\t\t<table class='table table-bordered'>\\\n\t\t\t\t<thead><tr></tr></thead>\\\n\t\t\t\t<tbody></tbody>\\\n\t\t\t</table>\\\n\t\t</div>\").appendTo(this.body);\n\n\t\t$.each([[__(\"Document Type\"), 150], [__(\"Role\"), 170], [__(\"Level\"), 40],\n\t\t\t[__(\"Permissions\"), 350], [\"\", 40]], function(i, col) {\n\t\t\t$(\"<th>\").html(col[0]).css(\"width\", col[1]+\"px\")\n\t\t\t\t.appendTo(me.table.find(\"thead tr\"));\n\t\t});\n\n\t\t$.each(perm_list, function(i, d) {\n\t\t\tif(d.parent===\"DocType\") { return; }\n\t\t\tif(!d.permlevel) d.permlevel = 0;\n\t\t\tvar row = $(\"<tr>\").appendTo(me.table.find(\"tbody\"));\n\t\t\tme.add_cell(row, d, \"parent\");\n\t\t\tvar role_cell = me.add_cell(row, d, \"role\");\n\t\t\tme.set_show_users(role_cell, d.role);\n\n\t\t\tif (d.permlevel===0) {\n\t\t\t\tme.setup_user_permissions(d, role_cell);\n\t\t\t\tme.setup_if_owner(d, role_cell);\n\t\t\t}\n\n\t\t\tvar cell = me.add_cell(row, d, \"permlevel\");\n\t\t\tif(d.permlevel==0) {\n\t\t\t\tcell.css(\"font-weight\", \"bold\");\n\t\t\t\trow.addClass(\"warning\");\n\t\t\t}\n\n\t\t\tvar perm_cell = me.add_cell(row, d, \"permissions\").css(\"padding-top\", 0);\n\t\t\tvar perm_container = $(\"<div class='row'></div>\").appendTo(perm_cell);\n\n\t\t\t$.each(me.rights, function(i, r) {\n\t\t\t\tme.add_check(perm_container, d, r);\n\t\t\t});\n\n\t\t\t// buttons\n\t\t\tme.add_delete_button(row, d);\n\t\t});\n\t},\n\n\tadd_cell: function(row, d, fieldname) {\n\t\treturn $(\"<td>\").appendTo(row)\n\t\t\t.attr(\"data-fieldname\", fieldname)\n\t\t\t.html(__(d[fieldname]));\n\t},\n\n\tadd_check: function(cell, d, fieldname, label) {\n\t\tvar me = this;\n\n\t\tif(!label) label = toTitle(fieldname.replace(/_/g, \" \"));\n\t\tif(d.permlevel > 0 && [\"read\", \"write\"].indexOf(fieldname)==-1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar checkbox = $(\"<div class='col-md-4'><div class='checkbox'>\\\n\t\t\t\t<label><input type='checkbox'>\"+__(label)+\"</input></label>\"\n\t\t\t\t+ (d.help || \"\") + \"</div></div>\").appendTo(cell)\n\t\t\t.attr(\"data-fieldname\", fieldname);\n\n\t\tcheckbox.find(\"input\")\n\t\t\t.prop(\"checked\", d[fieldname] ? true: false)\n\t\t\t.attr(\"data-ptype\", fieldname)\n\t\t\t.attr(\"data-role\", d.role)\n\t\t\t.attr(\"data-permlevel\", d.permlevel)\n\t\t\t.attr(\"data-doctype\", d.parent)\n\n\t\tcheckbox.find(\"label\")\n\t\t\t.css(\"text-transform\", \"capitalize\");\n\n\t\treturn checkbox;\n\t},\n\n\tsetup_user_permissions: function(d, role_cell) {\n\t\tvar me = this;\n\t\td.help = `<ul class=\"user-permission-help small hidden\"\n\t\t\t\tstyle=\"margin-left: -10px;\">\n\t\t\t\t<li style=\"margin-top: 7px;\"><a class=\"show-user-permission-doctypes\">\n\t\t\t\t\t${__(\"Select Document Types\")}</a></li>\n\t\t\t\t<li style=\"margin-top: 3px;\"><a class=\"show-user-permissions\">\n\t\t\t\t\t${__(\"Show User Permissions\")}</a></li>\n\t\t\t</ul>`;\n\n\t\tvar checkbox = this.add_check(role_cell, d, \"apply_user_permissions\")\n\t\t\t.removeClass(\"col-md-4\")\n\t\t\t.css({\"margin-top\": \"15px\"});\n\n\t\tcheckbox.find(\".show-user-permission-doctypes\").on(\"click\", function() {\n\t\t\tme.show_user_permission_doctypes(d);\n\t\t});\n\n\t\tvar toggle_user_permissions = function() {\n\t\t\tcheckbox.find(\".user-permission-help\").toggleClass(\"hidden\", !checkbox.find(\"input\").prop(\"checked\"));\n\t\t};\n\n\t\ttoggle_user_permissions();\n\t\tcheckbox.find(\"input\").on('click', function() {\n\t\t\ttoggle_user_permissions();\n\t\t});\n\n\t\td.help = \"\";\n\t},\n\n\tsetup_if_owner: function(d, role_cell) {\n\t\tvar checkbox = this.add_check(role_cell, d, \"if_owner\")\n\t\t\t.removeClass(\"col-md-4\")\n\t\t\t.css({\"margin-top\": \"15px\"});\n\t},\n\n\trights: [\"read\", \"write\", \"create\", \"delete\", \"submit\", \"cancel\", \"amend\",\n\t\t\"print\", \"email\", \"report\", \"import\", \"export\", \"set_user_permissions\", \"share\"],\n\n\tset_show_users: function(cell, role) {\n\t\tcell.html(\"<a class='grey' href='#'>\"+__(role)+\"</a>\")\n\t\t\t.find(\"a\")\n\t\t\t.attr(\"data-role\", role)\n\t\t\t.click(function() {\n\t\t\t\tvar role = $(this).attr(\"data-role\");\n\t\t\t\tfrappe.call({\n\t\t\t\t\tmodule: \"frappe.core\",\n\t\t\t\t\tpage: \"permission_manager\",\n\t\t\t\t\tmethod: \"get_users_with_role\",\n\t\t\t\t\targs: {\n\t\t\t\t\t\trole: role\n\t\t\t\t\t},\n\t\t\t\t\tcallback: function(r) {\n\t\t\t\t\t\tr.message = $.map(r.message, function(p) {\n\t\t\t\t\t\t\treturn $.format('<a href=\"#Form/User/{0}\">{1}</a>', [p, p]);\n\t\t\t\t\t\t})\n\t\t\t\t\t\tfrappe.msgprint(__(\"Users with role {0}:\", [__(role)])\n\t\t\t\t\t\t\t+ \"<br>\" + r.message.join(\"<br>\"));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn false;\n\t\t\t})\n\t},\n\tadd_delete_button: function(row, d) {\n\t\tvar me = this;\n\t\t$(\"<button class='btn btn-default btn-sm'><i class='fa fa-remove'></i></button>\")\n\t\t\t.appendTo($(\"<td>\").appendTo(row))\n\t\t\t.attr(\"data-doctype\", d.parent)\n\t\t\t.attr(\"data-role\", d.role)\n\t\t\t.attr(\"data-permlevel\", d.permlevel)\n\t\t\t.click(function() {\n\t\t\t\treturn frappe.call({\n\t\t\t\t\tmodule: \"frappe.core\",\n\t\t\t\t\tpage: \"permission_manager\",\n\t\t\t\t\tmethod: \"remove\",\n\t\t\t\t\targs: {\n\t\t\t\t\t\tdoctype: $(this).attr(\"data-doctype\"),\n\t\t\t\t\t\trole: $(this).attr(\"data-role\"),\n\t\t\t\t\t\tpermlevel: $(this).attr(\"data-permlevel\")\n\t\t\t\t\t},\n\t\t\t\t\tcallback: function(r) {\n\t\t\t\t\t\tif(r.exc) {\n\t\t\t\t\t\t\tfrappe.msgprint(__(\"Did not remove\"));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tme.refresh();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t});\n\t},\n\tadd_check_events: function() {\n\t\tvar me = this;\n\n\t\tthis.body.on(\"click\", \".show-user-permissions\", function() {\n\t\t\tfrappe.route_options = { allow: me.get_doctype() || \"\" };\n\t\t\tfrappe.set_route('List', 'User Permission');\n\t\t});\n\n\t\tthis.body.on(\"click\", \"input[type='checkbox']\", function() {\n\t\t\tvar chk = $(this);\n\t\t\tvar args = {\n\t\t\t\trole: chk.attr(\"data-role\"),\n\t\t\t\tpermlevel: chk.attr(\"data-permlevel\"),\n\t\t\t\tdoctype: chk.attr(\"data-doctype\"),\n\t\t\t\tptype: chk.attr(\"data-ptype\"),\n\t\t\t\tvalue: chk.prop(\"checked\") ? 1 : 0\n\t\t\t}\n\t\t\treturn frappe.call({\n\t\t\t\tmodule: \"frappe.core\",\n\t\t\t\tpage: \"permission_manager\",\n\t\t\t\tmethod: \"update\",\n\t\t\t\targs: args,\n\t\t\t\tcallback: function(r) {\n\t\t\t\t\tif(r.exc) {\n\t\t\t\t\t\t// exception: reverse\n\t\t\t\t\t\tchk.prop(\"checked\", !chk.prop(\"checked\"));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.get_perm(args.role)[args.ptype]=args.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t},\n\tshow_add_rule: function() {\n\t\tvar me = this;\n\t\t$(\"<button class='btn btn-default btn-primary btn-sm'><i class='fa fa-plus'></i> \"\n\t\t\t+__(\"Add A New Rule\")+\"</button>\")\n\t\t\t.appendTo($(\"<p class='permission-toolbar'>\").appendTo(this.body))\n\t\t\t.click(function() {\n\t\t\t\tvar d = new frappe.ui.Dialog({\n\t\t\t\t\ttitle: __(\"Add New Permission Rule\"),\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{fieldtype:\"Select\", label:__(\"Document Type\"),\n\t\t\t\t\t\t\toptions:me.options.doctypes, reqd:1, fieldname:\"parent\"},\n\t\t\t\t\t\t{fieldtype:\"Select\", label:__(\"Role\"),\n\t\t\t\t\t\t\toptions:me.options.roles, reqd:1,fieldname:\"role\"},\n\t\t\t\t\t\t{fieldtype:\"Select\", label:__(\"Permission Level\"),\n\t\t\t\t\t\t\toptions:[0,1,2,3,4,5,6,7,8,9], reqd:1, fieldname: \"permlevel\",\n\t\t\t\t\t\t\tdescription: __(\"Level 0 is for document level permissions, \\\n\t\t\t\t\t\t\t\thigher levels for field level permissions.\")}\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t\tif(me.get_doctype()) {\n\t\t\t\t\td.set_value(\"parent\", me.get_doctype());\n\t\t\t\t\td.get_input(\"parent\").prop(\"disabled\", true);\n\t\t\t\t}\n\t\t\t\tif(me.get_role()) {\n\t\t\t\t\td.set_value(\"role\", me.get_role());\n\t\t\t\t\td.get_input(\"role\").prop(\"disabled\", true);\n\t\t\t\t}\n\t\t\t\td.set_value(\"permlevel\", \"0\");\n\t\t\t\td.set_primary_action(__('Add'), function() {\n\t\t\t\t\tvar args = d.get_values();\n\t\t\t\t\tif(!args) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\tmodule: \"frappe.core\",\n\t\t\t\t\t\tpage: \"permission_manager\",\n\t\t\t\t\t\tmethod: \"add\",\n\t\t\t\t\t\targs: args,\n\t\t\t\t\t\tcallback: function(r) {\n\t\t\t\t\t\t\tif(r.exc) {\n\t\t\t\t\t\t\t\tfrappe.msgprint(__(\"Did not add\"));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tme.refresh();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\td.hide();\n\t\t\t\t});\n\t\t\t\td.show();\n\t\t\t});\n\t},\n\n\tshow_user_permission_doctypes: function(d) {\n\t\tvar me = this;\n\t\tif (!d.dialog) {\n\t\t\tvar fields = [];\n\t\t\tfor (var i=0, l=d.linked_doctypes.length; i<l; i++) {\n\t\t\t\tfields.push({\n\t\t\t\t\tfieldtype: \"Check\",\n\t\t\t\t\tlabel: __(\"If {0} is permitted\", [\"<b>\" + __(d.linked_doctypes[i]) + \"</b>\"]),\n\t\t\t\t\tfieldname: d.linked_doctypes[i]\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfields.push({\n\t\t\t\tfieldtype: \"Button\",\n\t\t\t\tlabel: __(\"Set\"),\n\t\t\t\tfieldname: \"set_user_permission_doctypes\"\n\t\t\t})\n\n\t\t\tvar dialog = new frappe.ui.Dialog({\n\t\t\t\ttitle: __('Apply Rule'),\n\t\t\t\tfields: fields\n\t\t\t});\n\n\t\t\tvar fields_to_check = d.user_permission_doctypes\n\t\t\t\t? JSON.parse(d.user_permission_doctypes) : [];\n\n\t\t\tfor (var i=0, l=fields_to_check.length; i<l; i++) {\n\t\t\t\tdialog.set_value(fields_to_check[i], 1);\n\t\t\t}\n\n\t\t\tvar btn = dialog.get_input(\"set_user_permission_doctypes\");\n\t\t\tbtn.on(\"click\", function() {\n\t\t\t\tvar values = dialog.get_values();\n\t\t\t\tvar user_permission_doctypes = [];\n\t\t\t\t$.each(values, function(key, val) {\n\t\t\t\t\tif (val) {\n\t\t\t\t\t\tuser_permission_doctypes.push(key);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (!user_permission_doctypes || !user_permission_doctypes.length ||\n\t\t\t\t\tuser_permission_doctypes.length === d.linked_doctypes.length) {\n\t\t\t\t\t// if all checked\n\t\t\t\t\tuser_permission_doctypes = undefined;\n\t\t\t\t} else {\n\t\t\t\t\tuser_permission_doctypes.sort();\n\t\t\t\t\tuser_permission_doctypes = JSON.stringify(user_permission_doctypes);\n\t\t\t\t}\n\n\t\t\t\tfrappe.call({\n\t\t\t\t\tmodule: \"frappe.core\",\n\t\t\t\t\tpage: \"permission_manager\",\n\t\t\t\t\tmethod: \"update\",\n\t\t\t\t\targs: {\n\t\t\t\t\t\tdoctype: d.parent,\n\t\t\t\t\t\trole: d.role,\n\t\t\t\t\t\tpermlevel: d.permlevel,\n\t\t\t\t\t\tptype: \"user_permission_doctypes\",\n\t\t\t\t\t\tvalue: user_permission_doctypes\n\t\t\t\t\t},\n\t\t\t\t\tcallback: function(r) {\n\t\t\t\t\t\tif(r.exc) {\n\t\t\t\t\t\t\tfrappe.msgprint(__(\"Did not set\"));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar msg = frappe.msgprint(__(\"Saved!\"));\n\t\t\t\t\t\t\tsetTimeout(function() { msg.hide(); }, 3000);\n\t\t\t\t\t\t\td.user_permission_doctypes = user_permission_doctypes;\n\t\t\t\t\t\t\tdialog.hide();\n\t\t\t\t\t\t\tif(r.message==='refresh') {\n\t\t\t\t\t\t\t\tme.refresh();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\td.dialog = dialog;\n\t\t}\n\n\t\td.dialog.show();\n\t},\n\n\tmake_reset_button: function() {\n\t\tvar me = this;\n\t\t$('<button class=\"btn btn-default btn-sm\" style=\"margin-left: 10px;\">\\\n\t\t\t<i class=\"fa fa-refresh\"></i> ' + __(\"Restore Original Permissions\") + '</button>')\n\t\t\t.appendTo(this.body.find(\".permission-toolbar\"))\n\t\t\t.on(\"click\", function() {\n\t\t\t\tme.get_standard_permissions(function(data) {\n\t\t\t\t\tme.reset_std_permissions(data);\n\t\t\t\t});\n\t\t\t})\n\t},\n\n\tget_perm: function(role) {\n\t\treturn $.map(this.perm_list, function(d) { if(d.role==role) return d; })[0];\n\t},\n\tget_link_fields: function(doctype) {\n\t\treturn frappe.get_children(\"DocType\", doctype, \"fields\",\n\t\t\t{fieldtype:\"Link\", options:[\"not in\", [\"User\", '[Select]']]});\n\t}\n});\n","title":"Role Permissions Manager","restrict_to_domain":null,"modified":"2013-07-11 14:43:43","content":null,"idx":1,"parenttype":null,"page_name":"permission-manager","docstatus":0,"parentfield":null}]}