{"docs":[{"system_page":0,"parent":null,"creation":"2016-08-18 12:29:52.497819","module":"Healthcare","standard":"Yes","doctype":"Page","owner":"Administrator","icon":null,"style":null,"modified_by":"Administrator","name":"appointment-analytic","roles":[{"modified_by":"Administrator","name":null,"parent":"appointment-analytic","creation":"2016-08-18 12:29:52.497819","modified":"2017-09-29 01:32:53.079254","doctype":"Has Role","idx":1,"parenttype":"Page","role":"Physician","owner":"Administrator","docstatus":0,"parentfield":"roles"}],"script":"frappe.pages['appointment-analytic'].on_page_load = function(wrapper) {\n\tfrappe.ui.make_app_page({\n\t\tparent: wrapper,\n\t\ttitle: 'Appointment Analytics',\n\t\tsingle_column: true\n\t});\n\tnew erpnext.AppointmentAnalytics(wrapper);\n\tfrappe.breadcrumbs.add(\"Medical\");\n};\n\nerpnext.AppointmentAnalytics = frappe.views.TreeGridReport.extend({\n\tinit: function(wrapper) {\n\t\tthis._super({\n\t\t\ttitle: __(\"Appointment Analytics\"),\n\t\t\tparent: $(wrapper).find('.layout-main'),\n\t\t\tpage: wrapper.page,\n\t\t\tdoctypes: [\"Patient Appointment\", \"Physician\", \"Medical Department\", \"Appointment Type\", \"Patient\"],\n\t\t\ttree_grid: { show: true }\n\t\t});\n\n\t\tthis.tree_grids = {\n\t\t\t\"Medical Department\": {\n\t\t\t\tlabel: __(\"Department\"),\n\t\t\t\tshow: true,\n\t\t\t\titem_key: \"physician\",\n\t\t\t\tparent_field: \"department\",\n\t\t\t\tformatter: function(item) {\n\t\t\t\t\treturn item.name;\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"Physician\": {\n\t\t\t\tlabel: __(\"Physician\"),\n\t\t\t\tshow: true,\n\t\t\t\titem_key: \"physician\",\n\t\t\t\tformatter: function(item) {\n\t\t\t\t\treturn item.name;\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t},\n\tsetup_columns: function() {\n\t\tthis.tree_grid = this.tree_grids[this.tree_type];\n\n\t\tvar std_columns = [\n\t\t\t{id: \"_check\", name: __(\"Plot\"), field: \"_check\", width: 40,\n\t\t\t\tformatter: this.check_formatter},\n\t\t\t{id: \"name\", name: this.tree_grid.label, field: \"name\", width: 300,\n\t\t\t\tformatter: this.tree_formatter},\n\t\t\t{id: \"total\", name: \"Total\", field: \"total\", plot: false,\n\t\t\t\tformatter: this.currency_formatter}\n\t\t];\n\n\t\tthis.make_date_range_columns();\n\t\tthis.columns = std_columns.concat(this.columns);\n\t},\n\tfilters: [\n\t\t{fieldtype:\"Select\", label: __(\"Tree Type\"), fieldname: \"tree_type\",\n\t\t\toptions:[\"Physician\", \"Medical Department\"], filter: function(val, item, opts, me) {\n\t\t\t\treturn me.apply_zero_filter(val, item, opts, me);}},\n\t\t{fieldtype:\"Select\", label: __(\"Status\"), fieldname: \"status\",\n\t\t\toptions:[\n\t\t\t\t{label: __(\"Select Status\"), value: \"Select Status...\"},\n\t\t\t\t{label: __(\"Open\"), value: \"Open\"},\n\t\t\t\t{label: __(\"Closed\"), value: \"Closed\"},\n\t\t\t\t{label: __(\"Pending\"), value: \"Pending\"},\n\t\t\t\t{label: __(\"Scheduled\"), value: \"Scheduled\"},\n\t\t\t\t{label: __(\"Cancelled\"), value: \"Cancelled\"}]},\n\t\t{fieldtype:\"Select\", label: __(\"Type\"), link:\"Appointment Type\", fieldname: \"type\",\n\t\t\tdefault_value: __(\"Select Type...\")},\n\t\t{fieldtype:\"Select\", label: __(\"Physician\"), link:\"Physician\", fieldname: \"physician\",\n\t\t\tdefault_value: __(\"Select Physician...\"), filter: function(val, item, opts) {\n\t\t\t\treturn val == opts.default_value || item.name == val || item._show;\n\t\t\t}, link_formatter: {filter_input: \"physician\"}},\n\t\t{fieldtype:\"Select\", label: __(\"Department\"), link:\"Medical Department\", fieldname: \"department\",\n\t\t\tdefault_value: __(\"Select Department...\"), filter: function(val, item, opts) {\n\t\t\t\treturn val == opts.default_value || item.department == val || item._show;\n\t\t\t}, link_formatter: {filter_input: \"department\"}},\n\t\t{fieldtype:\"Date\", label: __(\"From Date\"), fieldname: \"from_date\"},\n\t\t{fieldtype:\"Date\", label: __(\"To Date\"), fieldname: \"to_date\"},\n\t\t{fieldtype:\"Select\", label: __(\"Range\"), fieldname: \"range\",\n\t\t\toptions:[{label: __(\"Daily\"), value: \"Daily\"}, {label: __(\"Weekly\"), value: \"Weekly\"},\n\t\t\t\t{label: __(\"Monthly\"), value: \"Monthly\"}, {label: __(\"Quarterly\"), value: \"Quarterly\"},\n\t\t\t\t{label: __(\"Yearly\"), value: \"Yearly\"}]}\n\t],\n\tsetup_filters: function() {\n\t\tthis._super();\n\t\tthis.trigger_refresh_on_change([\"tree_type\", \"physician\", \"department\", \"status\", \"type\"]);\n\n\t\t//\tthis.show_zero_check()\n\t\tthis.setup_chart_check();\n\t},\n\tinit_filter_values: function() {\n\t\tthis._super();\n\t\tthis.filter_inputs.range.val('Quarterly');\n\t},\n\tprepare_data: function() {\n\t\tvar me = this;\n\t\tif (!this.tl) {\n\t\t\tthis.tl = frappe.report_dump.data[\"Patient Appointment\"];\n\t\t}\n\t\tif(!this.data || me.item_type != me.tree_type) {\n\t\t\tvar items = null;\n\t\t\tif(me.tree_type=='Physician') {\n\t\t\t\titems = frappe.report_dump.data[\"Physician\"];\n\t\t\t} if(me.tree_type=='Medical Department') {\n\t\t\t\titems = this.prepare_tree(\"Physician\", \"Medical Department\");\n\t\t\t}\n\t\t\tme.item_type = me.tree_type;\n\t\t\tme.parent_map = {};\n\t\t\tme.item_by_name = {};\n\t\t\tme.data = [];\n\n\t\t\t$.each(items, function(i, v) {\n\t\t\t\tvar d = copy_dict(v);\n\n\t\t\t\tme.data.push(d);\n\t\t\t\tme.item_by_name[d.name] = d;\n\t\t\t\tif(d[me.tree_grid.parent_field]) {\n\t\t\t\t\tme.parent_map[d.name] = d[me.tree_grid.parent_field];\n\t\t\t\t}\n\t\t\t\tme.reset_item_values(d);\n\t\t\t});\n\n\t\t\tthis.set_indent();\n\n\n\t\t} else {\n\t\t\t// otherwise, only reset values\n\t\t\t$.each(this.data, function(i, d) {\n\t\t\t\tme.reset_item_values(d);\n\t\t\t});\n\t\t}\n\t\tthis.prepare_balances();\n\t\tif(me.tree_grid.show) {\n\t\t\tthis.set_totals(false);\n\t\t\tthis.update_groups();\n\t\t} else {\n\t\t\tthis.set_totals(true);\n\t\t}\n\n\n\t},\n\tprepare_balances: function() {\n\t\tvar me = this;\n\t\tvar from_date = frappe.datetime.str_to_obj(this.from_date);\n\t\tvar status = this.status;\n\t\tvar type = this.type;\n\t\tvar to_date = frappe.datetime.str_to_obj(this.to_date);\n\t\t$.each(this.tl, function(i, tl) {\n\t\t\tif (me.is_default('company') ? true : tl.company === me.company) {\n\n\t\t\t\tvar date = frappe.datetime.str_to_obj(tl.appointment_date);\n\t\t\t\tif (date >= from_date && date <= to_date) {\n\t\t\t\t\tvar item = me.item_by_name[tl[me.tree_grid.item_key]] ||\n\t\t\t\t\t\tme.item_by_name['Not Set'];\n\n\t\t\t\t\tvar d = tl.appointment_date.split(\" \")[0];\n\t\t\t\t\tif(status == \"Select Status...\" && type==\"Select Type...\")\n\t\t\t\t\t{\n\t\t\t\t\t\titem[me.column_map[d].field] += 1;\n\n\t\t\t\t\t}else if (status !== \"Select Status...\" && type == \"Select Type...\"){\n\t\t\t\t\t\tif(status === tl.status){item[me.column_map[d].field] += 1;}\n\t\t\t\t\t}else if (status == \"Select Status...\" && type !== \"Select Type...\"){\n\t\t\t\t\t\tif(type === tl.appointment_type){item[me.column_map[d].field] += 1;}\n\t\t\t\t\t}else {\n\t\t\t\t\t\tif(type === tl.appointment_type && status === tl.status){item[me.column_map[d].field] += 1;}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\tupdate_groups: function() {\n\t\tvar me = this;\n\n\t\t$.each(this.data, function(i, item) {\n\t\t\tvar parent = me.parent_map[item.name];\n\t\t\twhile(parent) {\n\t\t\t\tvar parent_group = me.item_by_name[parent];\n\n\t\t\t\t$.each(me.columns, function(c, col) {\n\t\t\t\t\tif (col.formatter == me.currency_formatter) {\n\t\t\t\t\t\tparent_group[col.field] =\n\t\t\t\t\t\t\tflt(parent_group[col.field])\n\t\t\t\t\t\t\t+ flt(item[col.field]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tparent = me.parent_map[parent];\n\t\t\t}\n\t\t});\n\t},\n\tset_totals: function(sort) {\n\t\tvar me = this;\n\t\t$.each(this.data, function(i, d) {\n\t\t\td.total = 0.0;\n\t\t\t$.each(me.columns, function(i, col) {\n\t\t\t\tif(col.formatter==me.currency_formatter && !col.hidden && col.field!=\"total\")\n\t\t\t\t\td.total += d[col.field];\n\t\t\t});\n\t\t});\n\n\t\tif(sort)this.data = this.data.sort(function(a, b) { return b.total - a.total; });\n\n\t\tif(!this.checked) {\n\t\t\tthis.data[0].checked = true;\n\t\t}\n\t}\n\n});\n","title":"Appointment Analytics","restrict_to_domain":null,"modified":"2016-08-18 12:29:52.497819","content":null,"idx":0,"parenttype":null,"page_name":"Appointment Analytics","docstatus":0,"parentfield":null}]}