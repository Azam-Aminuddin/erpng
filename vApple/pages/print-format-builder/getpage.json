{"docs":[{"system_page":0,"parent":null,"creation":"2015-01-27 04:35:43.872918","_dynamic_page":1,"module":"Printing","standard":"Yes","doctype":"Page","owner":"Administrator","icon":null,"style":".print-format-builder-section, .print-format-builder-add-section {\n\tborder: 1px solid #d1d8dd;\n\tmargin: 0px;\n\tmargin-bottom: 15px;\n}\n.print-format-builder-add-section, .print-format-builder-header {\n\tborder: 1px dashed #d1d8dd;\n\tpadding: 15px;\n\tcursor: pointer;\n}\n\n.print-format-builder-header {\n\tmargin-bottom: 15px;\n}\n\n.print-format-builder-column {\n\tpadding: 15px;\n\tmargin: 0px -15px 0 -16px;\n\tbackground-color: white;\n\tmin-height: 64px;\n\tborder-left: 1px solid #d1d8dd;\n\tborder-right: 1px solid #d1d8dd;\n}\n\n.section-column:last-child .print-format-builder-column {\n\tmargin-right: -16px;\n}\n\n.print-format-builder-field {\n\tpadding: 5px;\n\tborder: 1px solid #d1d8dd;\n\tborder-radius: 3px;\n\tmargin-bottom: 10px;\n\tmin-height: 34px;\n}\n\n.print-format-builder-field:last-child {\n\tmargin-bottom: 0px;\n}\n\n.print-format-builder-field-placeholder {\n\tmargin-bottom: 10px;\n}\n\n.print-format-builder-field-placeholder:last-child {\n\tmargin-bottom: 0px;\n}\n\n.print-format-builder-column .print-format-builder-field {\n\tcursor: move;\n}\n\n\n.print-format-builder-section-head {\n\tcursor: move;\n\tpadding: 10px 15px;\n\tborder-bottom: 1px solid #d1d8dd;\n}\n\n.column-selector-row:hover {\n\tbackground-color: #fafbfc;\n}\n\n.column-selector-row .form-control {\n\tmargin-top: 5px;\n}\n\n.print-format-builder-sidebar {\n\tdisplay: inline-block;\n\twidth: 160px;\n\tvertical-align: top;\n\tposition: fixed;\n\ttop: 110px;\n\tbottom: 0px;\n\toverflow-y: auto;\n}\n\n.print-format-builder-main {\n\tdisplay: inline-block;\n\tvertical-align: top;\n\tborder-top: 0px;\n\tmargin-left: 160px;\n}\n","modified_by":"Administrator","name":"print-format-builder","roles":[{"modified_by":"Administrator","name":null,"parent":"print-format-builder","creation":"2015-01-27 04:35:43.872918","modified":"2017-06-09 23:47:44.794318","doctype":"Has Role","idx":1,"parenttype":"Page","role":"System Manager","owner":"Administrator","docstatus":0,"parentfield":"roles"}],"script":"frappe.templates[\"print_format_builder_layout\"] = '<div class=\"padding\"> <div class=\"text-muted text-center\"> {%= __(\"Drag elements from the sidebar to add. Drag them back to trash.\") %}<br><br> </div> <div class=\"print-format-builder-header\"> <div class=\"text-right\"> <a class=\"edit-heading btn btn-default btn-xs\"> {%= __(\"Edit Heading\") %}</a> </div> <div class=\"print-format-builder-print-heading\"> {{ me.print_heading_template }} </div> </div> <div class=\"print-format-builder-layout\"> {% for(var i=0; i < data.length; i++) { %} {%= frappe.render_template(\"print_format_builder_section\", {section: data[i], me:me}) %} {% } %} </div> <div class=\"print-format-builder-add-section text-muted text-center\"> <span class=\"octicon octicon-plus\"></span> <a class=\"grey\">Add a new section</a> </div> </div> ';\nfrappe.templates[\"print_format_builder_start\"] = '<div class=\"padding\"> <p class=\"text-muted\">{%= __(\"Select an existing format to edit or start a new format.\") %}</p> </div> <div class=\"padding\" style=\"max-width: 300px;\"> <div class=\"print-format-selector\"></div> <p> <button class=\"btn btn-sm btn-default btn-edit-print-format\"> {%= __(\"Edit\") %}</button> </p> </div> <div class=\"padding\" style=\"max-width: 300px;\"> <div class=\"doctype-selector\"></div> <div class=\"name-selector\"></div> <p> <button class=\"btn btn-sm btn-default btn-new-print-format\"> {%= __(\"Create a New Format\") %}</button> </p> </div> ';\nfrappe.templates[\"print_format_builder_sidebar\"] = '<div class=\"panel-bg\" style=\"padding: 10px; margin-bottom: 10px;\"> <input type=\"text\" class=\"form-control input-sm filter-fields\" name=\"filter-fields\" placeholder=\"{%= __(\"Filter...\") %}\"> </div> <div class=\"print-format-builder-fields\"> {% for (var i=0, l=fields.length; i < l; i++) { var f = fields[i]; %} {% if(!in_list([\"Section Break\", \"Column Break\", \"Fold\"], f.fieldtype)) { %} <div class=\"print-format-builder-field-placeholder ellipsis\" data-fieldname=\"{%= f.fieldname %}\"> <span class=\"btn btn-xs field-label {%= (f.fieldtype===\"Custom HTML\") ? \"btn-info\" : \"btn-default\" %}\" style=\"cursor: grab; display: inline-block\"> {%= f.label %} </span> </div> {% } %} {% } %} </div> ';\nfrappe.templates[\"print_format_builder_field\"] = '<div class=\"print-format-builder-field\" {% if(field.print_hide) { %}style=\"background-color: #F7FAFC; color: #8D99A6;\" title=\"{{ __(\"Hidden\") }}\"{% } %} data-fieldname=\"{%= field.fieldname %}\" data-label=\"{{ field.label }}\" {% if field.align %}data-align=\"{{ field.align }}\"{% endif %} data-fieldtype=\"{%= field.fieldtype %}\" {% if(field.fieldtype===\"Table\") { %} data-columns=\"{%= me.get_visible_columns_string(field) %}\" data-doctype=\"{%= field.options %}\" {% } %}> {% if !in_list([\"Table\", \"HTML\", \"Custom HTML\"], field.fieldtype) %} <a class=\"field-settings pull-right btn-default btn-xs\" style=\"padding-top: 3px\"> <span class=\"octicon octicon-gear text-muted\"></span></a> {% endif %} {% if(field.fieldtype===\"Custom HTML\") { %} <div class=\"text-right\"> <a class=\"edit-html btn btn-default btn-xs\"> {%= __(\"Edit HTML\") %}</a> </div> <div class=\"html-content\" {% if field.custom_html_id!==undefined %} data-custom-html-id={{ field.custom_html_id }}{% endif %}> {{ field.options || me.get_no_content() }}</div> {% } else { %} <span class=\"field-label\">{{ field.label }}</span> {% if(field.fieldtype===\"Table\") { %} <span> ({%= __(\"Table\") %})</span> <a class=\"pull-right select-columns btn btn-default btn-xs\"> {%= __(\"Select Columns\") %}</a> {% } %} {% } %} </div> ';\nfrappe.templates[\"print_format_builder_section\"] = '<div class=\"print-format-builder-section row light-bg\" data-label={{ section.label || \"\" }}> <div class=\"print-format-builder-section-head\"> <a class=\"section-settings pull-right btn-default btn-xs\" style=\"padding-top: 3px\"> <span class=\"octicon octicon-gear text-muted\"></span></a> <span class=\"octicon octicon-three-bars drag-handle\"></span> <span class=\"section-label\">{{ section.label || \"\" }}</span> </div> {% for(var j=0; j < section.columns.length; j++) { var column = section.columns[j]; %} <div class=\"col-md-{%= 12 / section.no_of_columns %} section-column\"> <div class=\"print-format-builder-column\"> {% for(var k=0; k < column.fields.length; k++) { var field = column.fields[k]; %} {%= frappe.render_template(\"print_format_builder_field\", {field: field, me:me}) %} {% } %} </div> </div> {% } %} </div> ';\nfrappe.templates[\"print_format_builder_column_selector\"] = '<p class=\"text-muted\">{{ __(\"Check columns to select, drag to set order.\") }} <br>{{ __(\"Widths can be set in px or %.\") }}</p> <div class=\"row\"> <div class=\"col-sm-6\"><h4>{{ __(\"Column\") }}</h4></div> <div class=\"col-sm-6 text-right\"><h4>{{ __(\"Width\") }}</h4></div> </div> <div class=\"column-selector-list\"> {% for (i=0; i < fields.length; i++) { var f = fields[i]; %} {% var selected = in_list(column_names, f.fieldname) %} <div class=\"row column-selector-row\"> <div class=\"col-sm-6\"> <div class=\"checkbox\"> <label> <input type=\"checkbox\" data-fieldname=\"{{ f.fieldname }}\" {{ selected ? \"checked\" : \"\" }}> {{ f.label }} </label> </div> </div> <div class=\"col-sm-6 text-right\"> <input class=\"form-control column-width input-sm text-right\" value=\"{{ (widths[f.fieldname] || \"\") }}\" data-fieldname=\"{{ f.fieldname }}\" style=\"width: 100px; display: inline\" {{ selected ? \"\" : \"disabled\" }}> </div> </div> {% } %} </div> ';\nfrappe.pages['print-format-builder'].on_page_load = function(wrapper) {\n\tfrappe.print_format_builder = new frappe.PrintFormatBuilder(wrapper);\n\tfrappe.breadcrumbs.add(\"Setup\", \"Print Format\");\n}\n\nfrappe.pages['print-format-builder'].on_page_show = function(wrapper) {\n\tvar route = frappe.get_route();\n\tif(route.length>1) {\n\t\tfrappe.model.with_doc('Print Format', route[1], function() {\n\t\t\tfrappe.print_format_builder.print_format = frappe.get_doc('Print Format', route[1]);\n\t\t\tfrappe.print_format_builder.refresh();\n\t\t});\n\t} else if(frappe.route_options) {\n\t\tif(frappe.route_options.make_new) {\n\t\t\tvar doctype = frappe.route_options.doctype;\n\t\t\tvar name = frappe.route_options.name;\n\t\t\tfrappe.route_options = null;\n\t\t\tfrappe.print_format_builder.setup_new_print_format(doctype, name);\n\t\t} else {\n\t\t\tfrappe.print_format_builder.print_format = frappe.route_options.doc;\n\t\t\tfrappe.route_options = null;\n\t\t\tfrappe.print_format_builder.refresh();\n\t\t}\n\t}\n}\n\nfrappe.PrintFormatBuilder = Class.extend({\n\tinit: function(parent) {\n\t\tthis.parent = parent;\n\t\tthis.make();\n\t\tthis.refresh();\n\t},\n\trefresh: function() {\n\t\tthis.custom_html_count = 0;\n\t\tif(!this.print_format) {\n\t\t\tthis.show_start();\n\t\t} else {\n\t\t\tthis.page.set_title(this.print_format.name);\n\t\t\tthis.setup_print_format();\n\t\t}\n\t},\n\tmake: function() {\n\t\tthis.page = frappe.ui.make_app_page({\n\t\t\tparent: this.parent,\n\t\t\ttitle: __(\"Print Format Builder\"),\n\t\t\tsingle_column: true\n\t\t});\n\n\t\tthis.page.main.css({\"border-color\": \"transparent\"});\n\n\t\tthis.page.sidebar = $('<div class=\"print-format-builder-sidebar\"></div>').appendTo(this.page.main);\n\t\tthis.page.main = $('<div class=\"border print-format-builder-main\" \\\n\t\t\tstyle=\"width: calc(100% - 160px);\"></div>').appendTo(this.page.main);\n\n\t\t// future-bindings for buttons on sections / fields\n\t\t// bind only once\n\t\tthis.setup_section_settings();\n\t\tthis.setup_column_selector();\n\t\tthis.setup_edit_custom_html();\n\t\t// $(this.page.sidebar).css({\"position\": 'fixed'});\n\t\t// $(this.page.main).parent().css({\"margin-left\": '16.67%'});\n\t},\n\tshow_start: function() {\n\t\tthis.page.main.html(frappe.render_template(\"print_format_builder_start\", {}));\n\t\tthis.page.sidebar.html(\"\");\n\t\tthis.page.clear_actions();\n\t\tthis.page.set_title(__(\"Print Format Builder\"));\n\t\tthis.start_edit_print_format();\n\t\tthis.start_new_print_format();\n\t},\n\tstart_edit_print_format: function() {\n\t\t// print format control\n\t\tvar me = this;\n\t\tthis.print_format_input = frappe.ui.form.make_control({\n\t\t\tparent: this.page.main.find(\".print-format-selector\"),\n\t\t\tdf: {\n\t\t\t\tfieldtype: \"Link\",\n\t\t\t\toptions: \"Print Format\",\n\t\t\t\tfilters: {\n\t\t\t\t\tprint_format_builder: 1\n\t\t\t\t},\n\t\t\t\tlabel: __(\"Select Print Format to Edit\"),\n\t\t\t\tonly_select: true\n\t\t\t},\n\t\t\trender_input: true\n\t\t});\n\n\t\t// create a new print format.\n\t\tthis.page.main.find(\".btn-edit-print-format\").on(\"click\", function() {\n\t\t\tvar name = me.print_format_input.get_value();\n\t\t\tif(!name) return;\n\t\t\tfrappe.model.with_doc(\"Print Format\", name, function(doc) {\n\t\t\t\tfrappe.set_route('print-format-builder', name);\n\t\t\t});\n\t\t});\n\t},\n\tstart_new_print_format: function() {\n\t\tvar me = this;\n\t\tthis.doctype_input = frappe.ui.form.make_control({\n\t\t\tparent: this.page.main.find(\".doctype-selector\"),\n\t\t\tdf: {\n\t\t\t\tfieldtype: \"Link\",\n\t\t\t\toptions: \"DocType\",\n\t\t\t\tfilters: {\n\t\t\t\t\t\"istable\": 0,\n\t\t\t\t\t\"issingle\": 0\n\t\t\t\t},\n\t\t\t\tlabel: __(\"Select a DocType to make a new format\")\n\t\t\t},\n\t\t\trender_input: true\n\t\t});\n\n\t\tthis.name_input = frappe.ui.form.make_control({\n\t\t\tparent: this.page.main.find(\".name-selector\"),\n\t\t\tdf: {\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t\tlabel: __(\"Name of the new Print Format\"),\n\t\t\t},\n\t\t\trender_input: true\n\t\t});\n\n\t\tthis.page.main.find(\".btn-new-print-format\").on(\"click\", function() {\n\t\t\tvar doctype = me.doctype_input.get_value(),\n\t\t\t\tname = me.name_input.get_value();\n\t\t\tif(!(doctype && name)) {\n\t\t\t\tfrappe.msgprint(__(\"Both DocType and Name required\"));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tme.setup_new_print_format(doctype, name);\n\n\t\t});\n\t},\n\tsetup_new_print_format: function(doctype, name) {\n\t\tvar me = this;\n\t\tfrappe.call({\n\t\t\tmethod: \"frappe.client.insert\",\n\t\t\targs: {\n\t\t\t\tdoc: {\n\t\t\t\t\tdoctype: \"Print Format\",\n\t\t\t\t\tname: name,\n\t\t\t\t\tstandard: \"No\",\n\t\t\t\t\tdoc_type: doctype,\n\t\t\t\t\tprint_format_builder: 1\n\t\t\t\t}\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\tme.print_format = r.message;\n\t\t\t\tme.refresh();\n\t\t\t}\n\t\t});\n\t},\n\tsetup_print_format: function() {\n\t\tvar me = this;\n\t\tfrappe.model.with_doctype(this.print_format.doc_type, function(doctype) {\n\t\t\tme.meta = frappe.get_meta(me.print_format.doc_type);\n\t\t\tme.setup_sidebar();\n\t\t\tme.render_layout();\n\t\t\tme.page.set_primary_action(__(\"Save\"), function() {\n\t\t\t\tme.save_print_format();\n\t\t\t});\n\t\t\tme.page.clear_menu();\n\t\t\tme.page.add_menu_item(__(\"Start new Format\"), function() {\n\t\t\t\tme.print_format = null;\n\t\t\t\tme.refresh();\n\t\t\t}, true);\n\t\t\tme.page.clear_inner_toolbar();\n\t\t\tme.page.add_inner_button(__(\"Edit Properties\"), function() {\n\t\t\t\tfrappe.set_route(\"Form\", \"Print Format\", me.print_format.name);\n\t\t\t});\n\t\t});\n\t},\n\tsetup_sidebar: function() {\n\t\tvar me = this;\n\t\tthis.page.sidebar.empty();\n\n\t\t// prepend custom HTML field\n\t\tvar fields = [this.get_custom_html_field()].concat(this.meta.fields);\n\n\t\t$(frappe.render_template(\"print_format_builder_sidebar\",\n\t\t\t{fields: fields}))\n\t\t\t.appendTo(this.page.sidebar);\n\n\t\tthis.setup_field_filter();\n\t},\n\tget_custom_html_field: function() {\n\t\treturn {\n\t\t\tfieldtype: \"Custom HTML\",\n\t\t\tfieldname: \"_custom_html\",\n\t\t\tlabel: __(\"Custom HTML\")\n\t\t}\n\t},\n\trender_layout: function() {\n\t\tthis.page.main.empty();\n\t\tthis.prepare_data();\n\t\t$(frappe.render_template(\"print_format_builder_layout\", {\n\t\t\tdata: this.layout_data, me: this}))\n\t\t\t.appendTo(this.page.main);\n\t\tthis.setup_sortable();\n\t\tthis.setup_add_section();\n\t\tthis.setup_edit_heading();\n\t\tthis.setup_field_settings();\n\t\tthis.setup_html_data();\n\t},\n\tprepare_data: function() {\n\t\tthis.print_heading_template = null;\n\t\tthis.data = JSON.parse(this.print_format.format_data || \"[]\");\n\t\tif(!this.data.length) {\n\t\t\t// new layout\n\t\t\tthis.data = this.meta.fields;\n\t\t} else {\n\t\t\t// extract print_heading_template if found\n\t\t\tif(this.data[0].fieldname===\"print_heading_template\") {\n\t\t\t\tthis.print_heading_template = this.data[0].options;\n\t\t\t\tthis.data = this.data.splice(1);\n\t\t\t}\n\t\t}\n\n\t\tif(!this.print_heading_template) {\n\t\t\t// default print heading template\n\t\t\tthis.print_heading_template = '<div class=\"print-heading\">\\\n\t\t\t\t<h2>'+__(this.print_format.doc_type)\n\t\t\t\t\t+'<br><small>{{ doc.name }}</small>\\\n\t\t\t\t</h2></div>';\n\t\t}\n\n\t\tthis.layout_data = [];\n\t\tthis.fields_dict = {};\n\t\tthis.custom_html_dict = {};\n\t\tvar section = null, column = null, me = this, custom_html_count = 0;\n\n\t\t// create a new placeholder for column and set\n\t\t// it as \"column\"\n\t\tvar set_column = function() {\n\t\t\tif(!section) set_section();\n\t\t\tcolumn = me.get_new_column();\n\t\t\tsection.columns.push(column);\n\t\t\tsection.no_of_columns += 1;\n\t\t}\n\n\t\tvar set_section = function(label) {\n\t\t\tsection = me.get_new_section();\n\t\t\tif(label) section.label = label;\n\t\t\tcolumn = null;\n\t\t\tme.layout_data.push(section);\n\t\t}\n\n\t\t// break the layout into sections and columns\n\t\t// so that it is easier to render in a template\n\t\t$.each(this.data, function(i, f) {\n\t\t\tme.fields_dict[f.fieldname] = f;\n\t\t\tif(!f.name && f.fieldname) {\n\t\t\t\t// from format_data (designed format)\n\t\t\t\t// print_hide should always be false\n\t\t\t\tif(f.fieldname===\"_custom_html\") {\n\t\t\t\t\tf.label = \"Custom HTML\";\n\t\t\t\t\tf.fieldtype = \"Custom HTML\";\n\n\t\t\t\t\t// set custom html id to map data properties later\n\t\t\t\t\tcustom_html_count++;\n\t\t\t\t\tf.custom_html_id = custom_html_count;\n\t\t\t\t\tme.custom_html_dict[f.custom_html_id] = f\n\t\t\t\t} else {\n\t\t\t\t\tf = $.extend(frappe.meta.get_docfield(me.print_format.doc_type,\n\t\t\t\t\t\tf.fieldname) || {}, f);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(f.fieldtype===\"Section Break\") {\n\t\t\t\tset_section(f.label);\n\n\t\t\t} else if(f.fieldtype===\"Column Break\") {\n\t\t\t\tset_column();\n\n\t\t\t} else if(!in_list([\"Section Break\", \"Column Break\", \"Fold\"], f.fieldtype)\n\t\t\t\t&& f.label) {\n\t\t\t\tif(!column) set_column();\n\n\t\t\t\tif(f.fieldtype===\"Table\") {\n\t\t\t\t\tme.add_table_properties(f);\n\t\t\t\t}\n\n\t\t\t\tif(!f.print_hide) {\n\t\t\t\t\tcolumn.fields.push(f);\n\t\t\t\t\tsection.has_fields = true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// strip out empty sections\n\t\tthis.layout_data = $.map(this.layout_data, function(s) {\n\t\t\treturn s.has_fields ? s : null\n\t\t});\n\t},\n\tget_new_section: function() {\n\t\treturn {columns: [], no_of_columns: 0, label:''};\n\t},\n\tget_new_column: function() {\n\t\treturn {fields: []}\n\t},\n\tadd_table_properties: function(f) {\n\t\t// build table columns and widths in a dict\n\t\t// visible_columns\n\t\tvar me = this;\n\t\tif(!f.visible_columns) {\n\t\t\tme.init_visible_columns(f);\n\t\t}\n\t},\n\tinit_visible_columns: function(f) {\n\t\tf.visible_columns = []\n\t\t$.each(frappe.get_meta(f.options).fields, function(i, _f) {\n\t\t\tif(!in_list([\"Section Break\", \"Column Break\"], _f.fieldtype) &&\n\t\t\t\t!_f.print_hide && f.label) {\n\n\t\t\t\t// column names set as fieldname|width\n\t\t\t\tf.visible_columns.push({fieldname: _f.fieldname,\n\t\t\t\t\tprint_width: (_f.width || \"\"), print_hide:0});\n\t\t\t}\n\t\t});\n\t},\n\tsetup_sortable: function() {\n\t\tvar me = this;\n\n\t\t// drag from fields library\n\t\tSortable.create(this.page.sidebar.find(\".print-format-builder-fields\").get(0),\n\t\t\t{\n\t\t\t\tgroup: {\n\t\t\t\t\tname:'field', put: true, pull:\"clone\"\n\t\t\t\t},\n\t\t\t\tsort: false,\n\t\t\t\tonAdd: function(evt) {\n\t\t\t\t\t// on drop, trash!\n\t\t\t\t\t$(evt.item).fadeOut();\n\t\t\t\t}\n\t\t\t});\n\n\t\t// sort, drag and drop between columns\n\t\tthis.page.main.find(\".print-format-builder-column\").each(function() {\n\t\t\tme.setup_sortable_for_column(this);\n\t\t});\n\n\t\t// section sorting\n\t\tSortable.create(this.page.main.find(\".print-format-builder-layout\").get(0),\n\t\t\t{ handle: \".print-format-builder-section-head\" }\n\t\t);\n\t},\n\tsetup_sortable_for_column: function(col) {\n\t\tvar me = this;\n\t\tSortable.create(col, {\n\t\t\tgroup: {\n\t\t\t\tname: 'field',\n\t\t\t\tput: true,\n\t\t\t\tpull: true\n\t\t\t},\n\t\t\tonAdd: function(evt) {\n\t\t\t\t// on drop, change the HTML\n\n\t\t\t\tvar $item = $(evt.item);\n\t\t\t\tif(!$item.hasClass(\"print-format-builder-field\")) {\n\t\t\t\t\tvar fieldname = $item.attr(\"data-fieldname\");\n\n\t\t\t\t\tif(fieldname===\"_custom_html\") {\n\t\t\t\t\t\tvar field = me.get_custom_html_field();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar field = frappe.meta.get_docfield(me.print_format.doc_type,\n\t\t\t\t\t\t\tfieldname);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar html = frappe.render_template(\"print_format_builder_field\",\n\t\t\t\t\t\t{field: field, me:me});\n\n\t\t\t\t\t$item.replaceWith(html);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t},\n\tsetup_field_filter: function() {\n\t\tvar me = this;\n\t\tthis.page.sidebar.find(\".filter-fields\").on(\"keyup\", function() {\n\t\t\tvar text = $(this).val();\n\t\t\tme.page.sidebar.find(\".field-label\").each(function() {\n\t\t\t\tvar show = !text || $(this).text().toLowerCase().indexOf(text.toLowerCase())!==-1;\n\t\t\t\t$(this).parent().toggle(show);\n\t\t\t})\n\t\t});\n\t},\n\tsetup_section_settings: function() {\n\t\tvar me = this;\n\t\tthis.page.main.on(\"click\", \".section-settings\", function() {\n\t\t\tvar section = $(this).parent().parent();\n\t\t\tvar no_of_columns = section.find(\".section-column\").length;\n\t\t\tvar label = section.attr('data-label');\n\n\t\t\t// new dialog\n\t\t\tvar d = new frappe.ui.Dialog({\n\t\t\t\ttitle: \"Edit Section\",\n\t\t\t\tfields: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel:__(\"No of Columns\"),\n\t\t\t\t\t\tfieldname:\"no_of_columns\",\n\t\t\t\t\t\tfieldtype:\"Select\",\n\t\t\t\t\t\toptions: [\"1\", \"2\", \"3\", \"4\"],\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel:__(\"Section Heading\"),\n\t\t\t\t\t\tfieldname:\"label\",\n\t\t\t\t\t\tfieldtype:\"Data\",\n\t\t\t\t\t\tdescription: __('Will only be shown if section headings are enabled')\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: __(\"Remove Section\"),\n\t\t\t\t\t\tfieldname: \"remove_section\",\n\t\t\t\t\t\tfieldtype: \"Button\",\n\t\t\t\t\t\tclick: function() {\n\t\t\t\t\t\t\td.hide();\n\t\t\t\t\t\t\tsection.fadeOut(function() {section.remove()});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tinput_class: \"btn-danger\",\n\t\t\t\t\t\tinput_css: {\n\t\t\t\t\t\t\t\"margin-top\": \"20px\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t});\n\n\t\t\td.set_input(\"no_of_columns\", no_of_columns + \"\");\n\t\t\td.set_input(\"label\", label || \"\");\n\n\t\t\td.set_primary_action(__(\"Update\"), function() {\n\t\t\t\t// resize number of columns\n\t\t\t\tme.update_columns_in_section(section, no_of_columns,\n\t\t\t\t\tcint(d.get_value(\"no_of_columns\")));\n\n\t\t\t\tsection.attr('data-label', d.get_value('label') || '');\n\t\t\t\tsection.find('.section-label').html(d.get_value('label') || '');\n\n\t\t\t\td.hide();\n\t\t\t});\n\n\t\t\td.show();\n\n\t\t\treturn false;\n\t\t});\n\t},\n\tsetup_field_settings: function() {\n\t\tvar me = this;\n\t\tthis.page.main.on(\"click\", \".field-settings\", function() {\n\t\t\tvar field = $(this).parent();\n\n\t\t\t// new dialog\n\t\t\tvar d = new frappe.ui.Dialog({\n\t\t\t\ttitle: \"Set Properties\",\n\t\t\t\tfields: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel:__(\"Label\"),\n\t\t\t\t\t\tfieldname:\"label\",\n\t\t\t\t\t\tfieldtype:\"Data\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: __(\"Align Value\"),\n\t\t\t\t\t\tfieldname: \"align\",\n\t\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\t\toptions: [{'label': __('Left'), 'value': 'left'}, {'label': __('Right'), 'value': 'right'}]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: __(\"Remove Field\"),\n\t\t\t\t\t\tfieldtype: \"Button\",\n\t\t\t\t\t\tclick: function() {\n\t\t\t\t\t\t\td.hide();\n\t\t\t\t\t\t\tfield.remove();\n\t\t\t\t\t\t},\n\t\t\t\t\t\tinput_class: \"btn-danger\",\n\t\t\t\t\t\tinput_css: {\n\t\t\t\t\t\t\t\"margin-top\": \"10px\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t});\n\n\t\t\td.set_value('label', field.attr(\"data-label\"));\n\n\t\t\td.set_primary_action(__(\"Update\"), function() {\n\t\t\t\tfield.attr('data-align', d.get_value('align'));\n\t\t\t\tfield.attr('data-label', d.get_value('label'));\n\t\t\t\tfield.find('.field-label').html(d.get_value('label'));\n\t\t\t\td.hide();\n\t\t\t});\n\n\t\t\t// set current value\n\t\t\tif(field.attr('data-align')) {\n\t\t\t\td.set_value('align', field.attr('data-align'));\n\t\t\t} else {\n\t\t\t\td.set_value('align', 'left');\n\t\t\t}\n\n\t\t\td.show();\n\n\t\t\treturn false;\n\t\t});\n\t},\n\tsetup_html_data: function() {\n\t\t// set JQuery `data` for Custom HTML fields, since editing the HTML\n\t\t// directly causes problem becuase of HTML reformatting\n\t\t//\n\t\t// this is based on a dummy attribute custom_html_id, since all custom html\n\t\t// fields have the same fieldname `_custom_html`\n\t\tvar me = this;\n\t\tthis.page.main.find('[data-fieldtype=\"Custom HTML\"]').each(function() {\n\t\t\tvar fieldname = $(this).attr('data-fieldname');\n\t\t\tvar content = $($(this).find('.html-content')[0]);\n\t\t\tvar html = me.custom_html_dict[parseInt(content.attr('data-custom-html-id'))].options;\n\t\t\tcontent.data('content', html);\n\t\t})\n\t},\n\tupdate_columns_in_section: function(section, no_of_columns, new_no_of_columns) {\n\t\tvar col_size = 12 / new_no_of_columns,\n\t\t\tme = this,\n\t\t\tresize = function() {\n\t\t\t\tsection.find(\".section-column\")\n\t\t\t\t\t.removeClass()\n\t\t\t\t\t.addClass(\"section-column\")\n\t\t\t\t\t.addClass(\"col-md-\" + col_size)\n\t\t\t};\n\n\t\tif(new_no_of_columns < no_of_columns) {\n\t\t\t// move contents of last n columns to previous column\n\t\t\tfor(var i=no_of_columns; i > new_no_of_columns; i--) {\n\t\t\t\tvar $col = $(section.find(\".print-format-builder-column\").get(i-1));\n\t\t\t\tvar prev = section.find(\".print-format-builder-column\").get(i-2);\n\n\t\t\t\t// append each field to prev\n\t\t\t\t$col.parent().addClass(\"to-drop\");\n\t\t\t\t$col.find(\".print-format-builder-field\").each(function() {\n\t\t\t\t\t$(this).appendTo(prev);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// drop columns\n\t\t\tsection.find(\".to-drop\").remove();\n\n\t\t\t// resize\n\t\t\tresize();\n\n\t\t} else if(new_no_of_columns > no_of_columns) {\n\t\t\t// add empty column and resize old columns\n\t\t\tfor(var i=no_of_columns; i < new_no_of_columns; i++) {\n\t\t\t\tvar col = $('<div class=\"section-column\">\\\n\t\t\t\t\t<div class=\"print-format-builder-column\"></div></div>')\n\t\t\t\t.appendTo(section);\n\t\t\t\tme.setup_sortable_for_column(col\n\t\t\t\t\t.find(\".print-format-builder-column\").get(0));\n\t\t\t}\n\t\t\t// resize\n\t\t\tresize();\n\t\t}\n\n\t},\n\tsetup_add_section: function() {\n\t\tvar me = this;\n\t\tthis.page.main.find(\".print-format-builder-add-section\").on(\"click\", function() {\n\t\t\t// boostrap new section info\n\t\t\tvar section = me.get_new_section();\n\t\t\tsection.columns.push(me.get_new_column());\n\t\t\tsection.no_of_columns = 1;\n\n\t\t\tvar $section = $(frappe.render_template(\"print_format_builder_section\",\n\t\t\t\t{section: section, me: me}))\n\t\t\t\t.appendTo(me.page.main.find(\".print-format-builder-layout\"))\n\n\t\t\tme.setup_sortable_for_column($section.find(\".print-format-builder-column\").get(0));\n\t\t});\n\t},\n\tsetup_edit_heading: function() {\n\t\tvar me = this;\n\t\tvar $heading = this.page.main.find(\".print-format-builder-print-heading\");\n\n\t\t// set content property\n\t\t$heading.data('content', this.print_heading_template);\n\n\t\tthis.page.main.find(\".edit-heading\").on(\"click\", function() {\n\t\t\tvar d = me.get_edit_html_dialog(__(\"Edit Heading\"), __(\"Heading\"), $heading);\n\t\t})\n\t},\n\tsetup_column_selector: function() {\n\t\tvar me = this;\n\t\tthis.page.main.on(\"click\", \".select-columns\", function() {\n\t\t\tvar parent = $(this).parents(\".print-format-builder-field:first\"),\n\t\t\t\tdoctype = parent.attr(\"data-doctype\"),\n\t\t\t\tlabel = parent.attr(\"data-label\"),\n\t\t\t\tcolumns = parent.attr(\"data-columns\").split(\",\"),\n\t\t\t\tcolumn_names = $.map(columns, function(v) { return v.split(\"|\")[0]; }),\n\t\t\t\twidths = {};\n\n\t\t\t$.each(columns, function(i, v) {\n\t\t\t\tvar parts = v.split(\"|\");\n\t\t\t\twidths[parts[0]] = parts[1] || \"\";\n\t\t\t});\n\n\t\t\tvar d = new frappe.ui.Dialog({\n\t\t\t\ttitle: __(\"Select Table Columns for {0}\", [label]),\n\t\t\t});\n\n\t\t\tvar $body = $(d.body);\n\n\n\t\t\tvar doc_fields = frappe.get_meta(doctype).fields;\n\t\t\tvar docfields_by_name = {};\n\n\t\t\t// docfields by fieldname\n\t\t\t$.each(doc_fields, function(j, f) {\n\t\t\t\tif(f) docfields_by_name[f.fieldname] = f;\n\t\t\t})\n\n\t\t\t// add field which are in column_names first to preserve order\n\t\t\tvar fields = [];\n\t\t\t$.each(column_names, function(i, v) {\n\t\t\t\tif(in_list(Object.keys(docfields_by_name), v)) {\n\t\t\t\t\tfields.push(docfields_by_name[v]);\n\t\t\t\t}\n\t\t\t})\n\t\t\t// add remaining fields\n\t\t\t$.each(doc_fields, function(j, f) {\n\t\t\t\tif (f && !in_list(column_names, f.fieldname)\n\t\t\t\t\t&& !in_list([\"Section Break\", \"Column Break\"], f.fieldtype) && f.label) {\n\t\t\t\t\tfields.push(f);\n\t\t\t\t}\n\t\t\t})\n\t\t\t// render checkboxes\n\t\t\t$(frappe.render_template(\"print_format_builder_column_selector\", {\n\t\t\t\tfields: fields,\n\t\t\t\tcolumn_names: column_names,\n\t\t\t\twidths: widths\n\t\t\t})).appendTo(d.body);\n\n\t\t\tSortable.create($body.find(\".column-selector-list\").get(0));\n\n\t\t\tvar get_width_input = function(fieldname) {\n\t\t\t\treturn $body.find(\".column-width[data-fieldname='\"+ fieldname +\"']\")\n\t\t\t}\n\n\t\t\t// update data-columns property on update\n\t\t\td.set_primary_action(__(\"Update\"), function() {\n\t\t\t\tvar visible_columns = [];\n\t\t\t\t$body.find(\"input:checked\").each(function() {\n\t\t\t\t\tvar fieldname = $(this).attr(\"data-fieldname\"),\n\t\t\t\t\t\twidth = get_width_input(fieldname).val() || \"\";\n\t\t\t\t\tvisible_columns.push(fieldname + \"|\" + width);\n\t\t\t\t});\n\t\t\t\tparent.attr(\"data-columns\", visible_columns.join(\",\"));\n\t\t\t\td.hide();\n\t\t\t});\n\n\t\t\t// enable / disable input based on selection\n\t\t\t$body.on(\"click\", \"input[type='checkbox']\", function() {\n\t\t\t\tvar disabled = !$(this).prop(\"checked\"),\n\t\t\t\t\tinput = get_width_input($(this).attr(\"data-fieldname\"));\n\n\t\t\t\tinput.prop(\"disabled\", disabled);\n\t\t\t\tif(disabled) input.val(\"\");\n\t\t\t});\n\n\t\t\td.show();\n\n\t\t\treturn false;\n\t\t});\n\t},\n\tget_visible_columns_string: function(f) {\n\t\tif(!f.visible_columns) {\n\t\t\tthis.init_visible_columns(f);\n\t\t}\n\t\treturn $.map(f.visible_columns, function(v) { return v.fieldname + \"|\" + (v.print_width || \"\") }).join(\",\");\n\t},\n\tget_no_content: function() {\n\t\treturn __(\"Edit to add content\")\n\t},\n\tsetup_edit_custom_html: function() {\n\t\tvar me = this;\n\t\tthis.page.main.on(\"click\", \".edit-html\", function() {\n\t\t\tme.get_edit_html_dialog(__(\"Edit Custom HTML\"), __(\"Custom HTML\"),\n\t\t\t\t$(this).parents(\".print-format-builder-field:first\").find(\".html-content\"));\n\t\t});\n\t},\n\tget_edit_html_dialog: function(title, label, $content) {\n\t\tvar me = this;\n\t\tvar d = new frappe.ui.Dialog({\n\t\t\ttitle: title,\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"content\",\n\t\t\t\t\tfieldtype: \"Code\",\n\t\t\t\t\tlabel: label\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"help\",\n\t\t\t\t\tfieldtype: \"HTML\",\n\t\t\t\t\toptions: '<p>'\n\t\t\t\t\t\t+ __(\"You can add dynamic properties from the document by using Jinja templating.\")\n\t\t\t\t\t\t+ __(\"For example: If you want to include the document ID, use {0}\", [\"<code>{{ doc.name }}</code>\"])\n\t\t\t\t\t+ '</p>'\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\n\t\t// set existing content in input\n\t\tvar content = $content.data('content') || \"\";\n\t\tif(content.indexOf(me.get_no_content())!==-1) content = \"\";\n\t\td.set_input(\"content\", content);\n\n\t\td.set_primary_action(__(\"Update\"), function() {\n\t\t\t$($content[0]).data('content', d.get_value(\"content\"));\n\t\t\t$content.html(d.get_value(\"content\"));\n\t\t\td.hide();\n\t\t});\n\n\t\td.show();\n\n\t\treturn d;\n\t},\n\tsave_print_format: function() {\n\t\tvar data = [],\n\t\t\tme = this;\n\n\t\t// add print heading as the first field\n\t\t// this will be removed and set as a doc property\n\t\t// before rendering\n\t\tdata.push({\n\t\t\tfieldname: \"print_heading_template\",\n\t\t\tfieldtype:\"Custom HTML\",\n\t\t\toptions: this.page.main.find(\".print-format-builder-print-heading\").data('content')\n\t\t});\n\n\t\t// add pages\n\t\tthis.page.main.find(\".print-format-builder-section\").each(function() {\n\t\t\tvar section = {\"fieldtype\": \"Section Break\", 'label': $(this).attr('data-label') || '' };\n\t\t\tdata.push(section);\n\t\t\t$(this).find(\".print-format-builder-column\").each(function() {\n\t\t\t\tdata.push({\"fieldtype\": \"Column Break\"});\n\t\t\t\t$(this).find(\".print-format-builder-field\").each(function() {\n\t\t\t\t\tvar $this = $(this),\n\t\t\t\t\t\tfieldtype = $this.attr(\"data-fieldtype\"),\n\t\t\t\t\t\talign = $this.attr('data-align'),\n\t\t\t\t\t\tlabel = $this.attr('data-label'),\n\t\t\t\t\t\tdf = {\n\t\t\t\t\t\t\tfieldname: $this.attr(\"data-fieldname\"),\n\t\t\t\t\t\t\tprint_hide: 0\n\t\t\t\t\t\t};\n\n\t\t\t\t\tif(align) {\n\t\t\t\t\t\tdf.align = align;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(label) {\n\t\t\t\t\t\tdf.label = label;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(fieldtype===\"Table\") {\n\t\t\t\t\t\t// append the user selected columns to visible_columns\n\t\t\t\t\t\tvar columns = $this.attr(\"data-columns\").split(\",\");\n\t\t\t\t\t\tdf.visible_columns = [];\n\t\t\t\t\t\t$.each(columns, function(i, c) {\n\t\t\t\t\t\t\tvar parts = c.split(\"|\");\n\t\t\t\t\t\t\tdf.visible_columns.push({\n\t\t\t\t\t\t\t\tfieldname:parts[0],\n\t\t\t\t\t\t\t\tprint_width:parts[1],\n\t\t\t\t\t\t\t\tprint_hide:0\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif(fieldtype===\"Custom HTML\") {\n\t\t\t\t\t\t// custom html as HTML field\n\t\t\t\t\t\tdf.fieldtype = \"HTML\";\n\t\t\t\t\t\tdf.options = $($this.find(\".html-content\")[0]).data('content');\n\t\t\t\t\t}\n\t\t\t\t\tdata.push(df);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\t// save format_data\n\t\tfrappe.call({\n\t\t\tmethod: \"frappe.client.set_value\",\n\t\t\targs: {\n\t\t\t\tdoctype: \"Print Format\",\n\t\t\t\tname: this.print_format.name,\n\t\t\t\tfieldname: \"format_data\",\n\t\t\t\tvalue: JSON.stringify(data),\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\tme.print_format = r.message;\n\t\t\t\tfrappe.show_alert({message: __(\"Saved\"), indicator: 'green'});\n\t\t\t}\n\t\t});\n\t}\n});\n","title":"Print Format Builder","restrict_to_domain":null,"modified":"2017-05-03 05:59:33.702308","content":null,"idx":0,"parenttype":null,"page_name":"print-format-builder","docstatus":0,"parentfield":null}]}