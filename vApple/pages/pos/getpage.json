{"docs":[{"system_page":0,"parent":null,"creation":"2014-08-08 02:45:55.931022","module":"Accounts","standard":"Yes","doctype":"Page","owner":"Administrator","icon":"fa fa-th","style":null,"modified_by":"Administrator","name":"pos","roles":[{"modified_by":"Administrator","name":null,"parent":"pos","creation":"2014-08-08 02:45:55.931022","modified":"2017-06-09 23:51:43.274018","doctype":"Has Role","idx":1,"parenttype":"Page","role":"Sales User","owner":"Administrator","docstatus":0,"parentfield":"roles"},{"modified_by":"Administrator","name":null,"parent":"pos","creation":"2014-08-08 02:45:55.931022","modified":"2017-06-09 23:51:43.274018","doctype":"Has Role","idx":2,"parenttype":"Page","role":"Purchase User","owner":"Administrator","docstatus":0,"parentfield":"roles"},{"modified_by":"Administrator","name":null,"parent":"pos","creation":"2014-08-08 02:45:55.931022","modified":"2017-06-09 23:51:43.274018","doctype":"Has Role","idx":3,"parenttype":"Page","role":"Accounts User","owner":"Administrator","docstatus":0,"parentfield":"roles"}],"script":"frappe.provide(\"erpnext.pos\");\n// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// License: GNU General Public License v3. See license.txt\n\nerpnext.taxes_and_totals = erpnext.payments.extend({\n\tsetup: function() {},\n\tapply_pricing_rule_on_item: function(item){\n\t\tif(item.margin_type == \"Percentage\"){\n\t\t\titem.rate_with_margin = flt(item.price_list_rate)\n\t\t\t\t+ flt(item.price_list_rate) * ( flt(item.margin_rate_or_amount) / 100);\n\t\t} else {\n\t\t\titem.rate_with_margin = flt(item.price_list_rate) + flt(item.margin_rate_or_amount);\n\t\t}\n\n\t\titem.rate = flt(item.rate_with_margin , precision(\"rate\", item));\n\n\t\tif(item.discount_percentage){\n\t\t\tvar discount_value = flt(item.rate_with_margin) * flt(item.discount_percentage) / 100;\n\t\t\titem.rate = flt((item.rate_with_margin) - (discount_value), precision('rate', item));\n\t\t}\n\t},\n\n\tcalculate_taxes_and_totals: function(update_paid_amount) {\n\t\tthis.discount_amount_applied = false;\n\t\tthis._calculate_taxes_and_totals();\n\t\tthis.calculate_discount_amount();\n\n\t\t// Advance calculation applicable to Sales /Purchase Invoice\n\t\tif(in_list([\"Sales Invoice\", \"Purchase Invoice\"], this.frm.doc.doctype)\n\t\t\t&& this.frm.doc.docstatus < 2 && !this.frm.doc.is_return) {\n\t\t\tthis.calculate_total_advance(update_paid_amount);\n\t\t}\n\n\t\t// Sales person's commission\n\t\tif(in_list([\"Quotation\", \"Sales Order\", \"Delivery Note\", \"Sales Invoice\"], this.frm.doc.doctype)) {\n\t\t\tthis.calculate_commission();\n\t\t\tthis.calculate_contribution();\n\t\t}\n\n\t\tthis.frm.refresh_fields();\n\t},\n\n\tcalculate_discount_amount: function(){\n\t\tif (frappe.meta.get_docfield(this.frm.doc.doctype, \"discount_amount\")) {\n\t\t\tthis.set_discount_amount();\n\t\t\tthis.apply_discount_amount();\n\t\t}\n\t},\n\n\t_calculate_taxes_and_totals: function() {\n\t\tthis.validate_conversion_rate();\n\t\tthis.calculate_item_values();\n\t\tthis.initialize_taxes();\n\t\tthis.determine_exclusive_rate();\n\t\tthis.calculate_net_total();\n\t\tthis.calculate_taxes();\n\t\tthis.manipulate_grand_total_for_inclusive_tax();\n\t\tthis.calculate_totals();\n\t\tthis._cleanup();\n\t},\n\n\tvalidate_conversion_rate: function() {\n\t\tthis.frm.doc.conversion_rate = flt(this.frm.doc.conversion_rate, (cur_frm) ? precision(\"conversion_rate\") : 9);\n\t\tvar conversion_rate_label = frappe.meta.get_label(this.frm.doc.doctype, \"conversion_rate\",\n\t\t\tthis.frm.doc.name);\n\t\tvar company_currency = this.get_company_currency();\n\n\t\tif(!this.frm.doc.conversion_rate) {\n\t\t\tif(this.frm.doc.currency == company_currency) {\n\t\t\t\tthis.frm.set_value(\"conversion_rate\", 1);\n\t\t\t} else {\n\t\t\t\tfrappe.throw(repl('%(conversion_rate_label)s' +\n\t\t\t\t\t__(' is mandatory. Maybe Currency Exchange record is not created for ') +\n\t\t\t\t'%(from_currency)s' + __(\" to \") + '%(to_currency)s', {\n\t\t\t\t\t\"conversion_rate_label\": conversion_rate_label,\n\t\t\t\t\t\"from_currency\": this.frm.doc.currency,\n\t\t\t\t\t\"to_currency\": company_currency\n\t\t\t\t}));\n\t\t\t}\n\n\t\t}\n\t},\n\n\tcalculate_item_values: function() {\n\t\tvar me = this;\n\n\t\tif (!this.discount_amount_applied) {\n\t\t\t$.each(this.frm.doc[\"items\"] || [], function(i, item) {\n\t\t\t\tfrappe.model.round_floats_in(item);\n\t\t\t\titem.net_rate = item.rate;\n\t\t\t\titem.amount = flt(item.rate * item.qty, precision(\"amount\", item));\n\t\t\t\titem.net_amount = item.amount;\n\t\t\t\titem.item_tax_amount = 0.0;\n\n\t\t\t\tme.set_in_company_currency(item, [\"price_list_rate\", \"rate\", \"amount\", \"net_rate\", \"net_amount\"]);\n\t\t\t});\n\t\t}\n\t},\n\n\tset_in_company_currency: function(doc, fields) {\n\t\tvar me = this;\n\t\t$.each(fields, function(i, f) {\n\t\t\tdoc[\"base_\"+f] = flt(flt(doc[f], precision(f, doc)) * me.frm.doc.conversion_rate, precision(\"base_\" + f, doc));\n\t\t});\n\t},\n\n\tinitialize_taxes: function() {\n\t\tvar me = this;\n\n\t\t$.each(this.frm.doc[\"taxes\"] || [], function(i, tax) {\n\t\t\ttax.item_wise_tax_detail = {};\n\t\t\tvar tax_fields = [\"total\", \"tax_amount_after_discount_amount\",\n\t\t\t\t\"tax_amount_for_current_item\", \"grand_total_for_current_item\",\n\t\t\t\t\"tax_fraction_for_current_item\", \"grand_total_fraction_for_current_item\"];\n\n\t\t\tif (cstr(tax.charge_type) != \"Actual\" &&\n\t\t\t\t!(me.discount_amount_applied && me.frm.doc.apply_discount_on==\"Grand Total\")) {\n\t\t\t\ttax_fields.push(\"tax_amount\");\n\t\t\t}\n\n\t\t\t$.each(tax_fields, function(i, fieldname) { tax[fieldname] = 0.0; });\n\n\t\t\tif (!this.discount_amount_applied && cur_frm) {\n\t\t\t\tcur_frm.cscript.validate_taxes_and_charges(tax.doctype, tax.name);\n\t\t\t\tme.validate_inclusive_tax(tax);\n\t\t\t}\n\t\t\tfrappe.model.round_floats_in(tax);\n\t\t});\n\t},\n\n\tdetermine_exclusive_rate: function() {\n\t\tvar me = this;\n\n\t\tvar has_inclusive_tax = false;\n\t\t$.each(me.frm.doc[\"taxes\"] || [], function(i, row) {\n\t\t\tif(cint(row.included_in_print_rate)) has_inclusive_tax = true;\n\t\t});\n\t\tif(has_inclusive_tax==false) return;\n\n\t\t$.each(me.frm.doc[\"items\"] || [], function(n, item) {\n\t\t\tvar item_tax_map = me._load_item_tax_rate(item.item_tax_rate);\n\t\t\tvar cumulated_tax_fraction = 0.0;\n\n\t\t\t$.each(me.frm.doc[\"taxes\"] || [], function(i, tax) {\n\t\t\t\ttax.tax_fraction_for_current_item = me.get_current_tax_fraction(tax, item_tax_map);\n\n\t\t\t\tif(i==0) {\n\t\t\t\t\ttax.grand_total_fraction_for_current_item = 1 + tax.tax_fraction_for_current_item;\n\t\t\t\t} else {\n\t\t\t\t\ttax.grand_total_fraction_for_current_item =\n\t\t\t\t\t\tme.frm.doc[\"taxes\"][i-1].grand_total_fraction_for_current_item +\n\t\t\t\t\t\ttax.tax_fraction_for_current_item;\n\t\t\t\t}\n\n\t\t\t\tcumulated_tax_fraction += tax.tax_fraction_for_current_item;\n\t\t\t});\n\n\t\t\tif(cumulated_tax_fraction && !me.discount_amount_applied) {\n\t\t\t\titem.net_amount = flt(item.amount / (1 + cumulated_tax_fraction));\n\t\t\t\titem.net_rate = flt(item.net_amount / item.qty, precision(\"net_rate\", item));\n\n\t\t\t\tme.set_in_company_currency(item, [\"net_rate\", \"net_amount\"]);\n\t\t\t}\n\t\t});\n\t},\n\n\tget_current_tax_fraction: function(tax, item_tax_map) {\n\t\t// Get tax fraction for calculating tax exclusive amount\n\t\t// from tax inclusive amount\n\t\tvar current_tax_fraction = 0.0;\n\n\t\tif(cint(tax.included_in_print_rate)) {\n\t\t\tvar tax_rate = this._get_tax_rate(tax, item_tax_map);\n\n\t\t\tif(tax.charge_type == \"On Net Total\") {\n\t\t\t\tcurrent_tax_fraction = (tax_rate / 100.0);\n\n\t\t\t} else if(tax.charge_type == \"On Previous Row Amount\") {\n\t\t\t\tcurrent_tax_fraction = (tax_rate / 100.0) *\n\t\t\t\t\tthis.frm.doc[\"taxes\"][cint(tax.row_id) - 1].tax_fraction_for_current_item;\n\n\t\t\t} else if(tax.charge_type == \"On Previous Row Total\") {\n\t\t\t\tcurrent_tax_fraction = (tax_rate / 100.0) *\n\t\t\t\t\tthis.frm.doc[\"taxes\"][cint(tax.row_id) - 1].grand_total_fraction_for_current_item;\n\t\t\t}\n\t\t}\n\n\t\tif(tax.add_deduct_tax) {\n\t\t\tcurrent_tax_fraction *= (tax.add_deduct_tax == \"Deduct\") ? -1.0 : 1.0;\n\t\t}\n\t\treturn current_tax_fraction;\n\t},\n\n\t_get_tax_rate: function(tax, item_tax_map) {\n\t\treturn (Object.keys(item_tax_map).indexOf(tax.account_head) != -1) ?\n\t\t\tflt(item_tax_map[tax.account_head], precision(\"rate\", tax)) : tax.rate;\n\t},\n\n\tcalculate_net_total: function() {\n\t\tvar me = this;\n\t\tthis.frm.doc.total = this.frm.doc.base_total = this.frm.doc.net_total = this.frm.doc.base_net_total = 0.0;\n\n\t\t$.each(this.frm.doc[\"items\"] || [], function(i, item) {\n\t\t\tme.frm.doc.total += item.amount;\n\t\t\tme.frm.doc.base_total += item.base_amount;\n\t\t\tme.frm.doc.net_total += item.net_amount;\n\t\t\tme.frm.doc.base_net_total += item.base_net_amount;\n\t\t});\n\n\t\tfrappe.model.round_floats_in(this.frm.doc, [\"total\", \"base_total\", \"net_total\", \"base_net_total\"]);\n\t},\n\n\tcalculate_taxes: function() {\n\t\tvar me = this;\n\t\tthis.frm.doc.rounding_adjustment = 0;\n\t\tvar actual_tax_dict = {};\n\n\t\t// maintain actual tax rate based on idx\n\t\t$.each(this.frm.doc[\"taxes\"] || [], function(i, tax) {\n\t\t\tif (tax.charge_type == \"Actual\") {\n\t\t\t\tactual_tax_dict[tax.idx] = flt(tax.tax_amount, precision(\"tax_amount\", tax));\n\t\t\t}\n\t\t});\n\n\t\t$.each(this.frm.doc[\"items\"] || [], function(n, item) {\n\t\t\tvar item_tax_map = me._load_item_tax_rate(item.item_tax_rate);\n\t\t\t$.each(me.frm.doc[\"taxes\"] || [], function(i, tax) {\n\t\t\t\t// tax_amount represents the amount of tax for the current step\n\t\t\t\tvar current_tax_amount = me.get_current_tax_amount(item, tax, item_tax_map);\n\n\t\t\t\t// Adjust divisional loss to the last item\n\t\t\t\tif (tax.charge_type == \"Actual\") {\n\t\t\t\t\tactual_tax_dict[tax.idx] -= current_tax_amount;\n\t\t\t\t\tif (n == me.frm.doc[\"items\"].length - 1) {\n\t\t\t\t\t\tcurrent_tax_amount += actual_tax_dict[tax.idx];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// accumulate tax amount into tax.tax_amount\n\t\t\t\tif (tax.charge_type != \"Actual\" &&\n\t\t\t\t\t!(me.discount_amount_applied && me.frm.doc.apply_discount_on==\"Grand Total\")) {\n\t\t\t\t\ttax.tax_amount += current_tax_amount;\n\t\t\t\t}\n\n\t\t\t\t// store tax_amount for current item as it will be used for\n\t\t\t\t// charge type = 'On Previous Row Amount'\n\t\t\t\ttax.tax_amount_for_current_item = current_tax_amount;\n\n\t\t\t\t// tax amount after discount amount\n\t\t\t\ttax.tax_amount_after_discount_amount += current_tax_amount;\n\n\t\t\t\t// for buying\n\t\t\t\tif(tax.category) {\n\t\t\t\t\t// if just for valuation, do not add the tax amount in total\n\t\t\t\t\t// hence, setting it as 0 for further steps\n\t\t\t\t\tcurrent_tax_amount = (tax.category == \"Valuation\") ? 0.0 : current_tax_amount;\n\n\t\t\t\t\tcurrent_tax_amount *= (tax.add_deduct_tax == \"Deduct\") ? -1.0 : 1.0;\n\t\t\t\t}\n\n\t\t\t\t// note: grand_total_for_current_item contains the contribution of\n\t\t\t\t// item's amount, previously applied tax and the current tax on that item\n\t\t\t\tif(i==0) {\n\t\t\t\t\ttax.grand_total_for_current_item = flt(item.net_amount + current_tax_amount);\n\t\t\t\t} else {\n\t\t\t\t\ttax.grand_total_for_current_item =\n\t\t\t\t\t\tflt(me.frm.doc[\"taxes\"][i-1].grand_total_for_current_item + current_tax_amount);\n\t\t\t\t}\n\n\t\t\t\t// set precision in the last item iteration\n\t\t\t\tif (n == me.frm.doc[\"items\"].length - 1) {\n\t\t\t\t\tme.round_off_totals(tax);\n\n\t\t\t\t\t// in tax.total, accumulate grand total for each item\n\t\t\t\t\tme.set_cumulative_total(i, tax);\n\n\t\t\t\t\tme.set_in_company_currency(tax,\n\t\t\t\t\t\t[\"total\", \"tax_amount\", \"tax_amount_after_discount_amount\"]);\n\n\t\t\t\t\t// adjust Discount Amount loss in last tax iteration\n\t\t\t\t\tif ((i == me.frm.doc[\"taxes\"].length - 1) && me.discount_amount_applied\n\t\t\t\t\t\t&& me.frm.doc.apply_discount_on == \"Grand Total\" && me.frm.doc.discount_amount) {\n\t\t\t\t\t\tme.frm.doc.rounding_adjustment = flt(me.frm.doc.grand_total -\n\t\t\t\t\t\t\tflt(me.frm.doc.discount_amount) - tax.total, precision(\"rounding_adjustment\"));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\n\tset_cumulative_total: function(row_idx, tax) {\n\t\tvar tax_amount = tax.tax_amount_after_discount_amount;\n\t\tif (tax.category == 'Valuation') {\n\t\t\ttax_amount = 0;\n\t\t}\n\n\t\tif (tax.add_deduct_tax == \"Deduct\") { tax_amount = -1*tax_amount; }\n\n\t\tif(row_idx==0) {\n\t\t\ttax.total = flt(this.frm.doc.net_total + tax_amount, precision(\"total\", tax));\n\t\t} else {\n\t\t\ttax.total = flt(this.frm.doc[\"taxes\"][row_idx-1].total + tax_amount, precision(\"total\", tax));\n\t\t}\n\t},\n\n\t_load_item_tax_rate: function(item_tax_rate) {\n\t\treturn item_tax_rate ? JSON.parse(item_tax_rate) : {};\n\t},\n\n\tget_current_tax_amount: function(item, tax, item_tax_map) {\n\t\tvar tax_rate = this._get_tax_rate(tax, item_tax_map);\n\t\tvar current_tax_amount = 0.0;\n\n\t\tif(tax.charge_type == \"Actual\") {\n\t\t\t// distribute the tax amount proportionally to each item row\n\t\t\tvar actual = flt(tax.tax_amount, precision(\"tax_amount\", tax));\n\t\t\tcurrent_tax_amount = this.frm.doc.net_total ?\n\t\t\t\t((item.net_amount / this.frm.doc.net_total) * actual) : 0.0;\n\n\t\t} else if(tax.charge_type == \"On Net Total\") {\n\t\t\tcurrent_tax_amount = (tax_rate / 100.0) * item.net_amount;\n\t\t} else if(tax.charge_type == \"On Previous Row Amount\") {\n\t\t\tcurrent_tax_amount = (tax_rate / 100.0) *\n\t\t\t\tthis.frm.doc[\"taxes\"][cint(tax.row_id) - 1].tax_amount_for_current_item;\n\n\t\t} else if(tax.charge_type == \"On Previous Row Total\") {\n\t\t\tcurrent_tax_amount = (tax_rate / 100.0) *\n\t\t\t\tthis.frm.doc[\"taxes\"][cint(tax.row_id) - 1].grand_total_for_current_item;\n\t\t}\n\n\t\tthis.set_item_wise_tax(item, tax, tax_rate, current_tax_amount);\n\n\t\treturn current_tax_amount;\n\t},\n\n\tset_item_wise_tax: function(item, tax, tax_rate, current_tax_amount) {\n\t\t// store tax breakup for each item\n\t\tvar key = item.item_code || item.item_name;\n\t\tvar item_wise_tax_amount = current_tax_amount * this.frm.doc.conversion_rate;\n\t\tif (tax.item_wise_tax_detail && tax.item_wise_tax_detail[key])\n\t\t\titem_wise_tax_amount += tax.item_wise_tax_detail[key][1];\n\n\t\ttax.item_wise_tax_detail[key] = [tax_rate, flt(item_wise_tax_amount, precision(\"base_tax_amount\", tax))];\n\t},\n\n\tround_off_totals: function(tax) {\n\t\ttax.tax_amount = flt(tax.tax_amount, precision(\"tax_amount\", tax));\n\t\ttax.tax_amount_after_discount_amount = flt(tax.tax_amount_after_discount_amount, precision(\"tax_amount\", tax));\n\t},\n\n\tmanipulate_grand_total_for_inclusive_tax: function() {\n\t\tvar me = this;\n\t\t// if fully inclusive taxes and diff\n\t\tif (this.frm.doc[\"taxes\"] && this.frm.doc[\"taxes\"].length) {\n\t\t\tvar any_inclusive_tax = false;\n\t\t\t$.each(this.frm.doc.taxes || [], function(i, d) {\n\t\t\t\tif(cint(d.included_in_print_rate)) any_inclusive_tax = true;\n\t\t\t});\n\t\t\tif (any_inclusive_tax) {\n\t\t\t\tvar last_tax = me.frm.doc[\"taxes\"].slice(-1)[0];\n\t\t\t\tvar non_inclusive_tax_amount = frappe.utils.sum($.map(this.frm.doc.taxes || [],\n\t\t\t\t\tfunction(d) {\n\t\t\t\t\t\tif(!d.included_in_print_rate) {\n\t\t\t\t\t\t\treturn flt(d.tax_amount_after_discount_amount);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t));\n\t\t\t\tvar diff = me.frm.doc.total + non_inclusive_tax_amount\n\t\t\t\t\t- flt(last_tax.total, precision(\"grand_total\"));\n\n\t\t\t\tif ( diff && Math.abs(diff) <= (5.0 / Math.pow(10, precision(\"tax_amount\", last_tax))) ) {\n\t\t\t\t\tthis.frm.doc.rounding_adjustment = flt(flt(this.frm.doc.rounding_adjustment) + diff,\n\t\t\t\t\t\tprecision(\"rounding_adjustment\"));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tcalculate_totals: function() {\n\t\t// Changing sequence can cause rounding_adjustmentng issue and on-screen discrepency\n\t\tvar me = this;\n\t\tvar tax_count = this.frm.doc[\"taxes\"] ? this.frm.doc[\"taxes\"].length : 0;\n\t\tthis.frm.doc.grand_total = flt(tax_count\n\t\t\t? this.frm.doc[\"taxes\"][tax_count - 1].total + flt(this.frm.doc.rounding_adjustment)\n\t\t\t: this.frm.doc.net_total);\n\n\t\tif(in_list([\"Quotation\", \"Sales Order\", \"Delivery Note\", \"Sales Invoice\"], this.frm.doc.doctype)) {\n\t\t\tthis.frm.doc.base_grand_total = (this.frm.doc.total_taxes_and_charges) ?\n\t\t\t\tflt(this.frm.doc.grand_total * this.frm.doc.conversion_rate) : this.frm.doc.base_net_total;\n\t\t} else {\n\t\t\t// other charges added/deducted\n\t\t\tthis.frm.doc.taxes_and_charges_added = this.frm.doc.taxes_and_charges_deducted = 0.0;\n\t\t\tif(tax_count) {\n\t\t\t\t$.each(this.frm.doc[\"taxes\"] || [], function(i, tax) {\n\t\t\t\t\tif (in_list([\"Valuation and Total\", \"Total\"], tax.category)) {\n\t\t\t\t\t\tif(tax.add_deduct_tax == \"Add\") {\n\t\t\t\t\t\t\tme.frm.doc.taxes_and_charges_added += flt(tax.tax_amount_after_discount_amount);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tme.frm.doc.taxes_and_charges_deducted += flt(tax.tax_amount_after_discount_amount);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tfrappe.model.round_floats_in(this.frm.doc,\n\t\t\t\t\t[\"taxes_and_charges_added\", \"taxes_and_charges_deducted\"]);\n\t\t\t}\n\n\t\t\tthis.frm.doc.base_grand_total = flt((this.frm.doc.taxes_and_charges_added || this.frm.doc.taxes_and_charges_deducted) ?\n\t\t\t\tflt(this.frm.doc.grand_total * this.frm.doc.conversion_rate) : this.frm.doc.base_net_total);\n\n\t\t\tthis.set_in_company_currency(this.frm.doc,\n\t\t\t\t[\"taxes_and_charges_added\", \"taxes_and_charges_deducted\"]);\n\t\t}\n\n\t\tthis.frm.doc.total_taxes_and_charges = flt(this.frm.doc.grand_total - this.frm.doc.net_total\n\t\t\t- flt(this.frm.doc.rounding_adjustment), precision(\"total_taxes_and_charges\"));\n\n\t\tthis.set_in_company_currency(this.frm.doc, [\"total_taxes_and_charges\", \"rounding_adjustment\"]);\n\n\t\t// Round grand total as per precision\n\t\tfrappe.model.round_floats_in(this.frm.doc, [\"grand_total\", \"base_grand_total\"]);\n\n\t\t// rounded totals\n\t\tthis.set_rounded_total()\n\t},\n\n\tset_rounded_total: function() {\n\t\tif(frappe.meta.get_docfield(this.frm.doc.doctype, \"rounded_total\", this.frm.doc.name)) {\n\t\t\tthis.frm.doc.rounded_total = round_based_on_smallest_currency_fraction(this.frm.doc.grand_total,\n\t\t\t\tthis.frm.doc.currency, precision(\"rounded_total\"));\n\t\t}\n\t\tif(frappe.meta.get_docfield(this.frm.doc.doctype, \"base_rounded_total\", this.frm.doc.name)) {\n\t\t\tvar company_currency = this.get_company_currency();\n\n\t\t\tthis.frm.doc.base_rounded_total =\n\t\t\t\tround_based_on_smallest_currency_fraction(this.frm.doc.base_grand_total,\n\t\t\t\t\tcompany_currency, precision(\"base_rounded_total\"));\n\t\t}\n\t},\n\n\t_cleanup: function() {\n\t\tthis.frm.doc.base_in_words = this.frm.doc.in_words = \"\";\n\n\t\tif(this.frm.doc[\"items\"] && this.frm.doc[\"items\"].length) {\n\t\t\tif(!frappe.meta.get_docfield(this.frm.doc[\"items\"][0].doctype, \"item_tax_amount\", this.frm.doctype)) {\n\t\t\t\t$.each(this.frm.doc[\"items\"] || [], function(i, item) {\n\t\t\t\t\tdelete item[\"item_tax_amount\"];\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif(this.frm.doc[\"taxes\"] && this.frm.doc[\"taxes\"].length) {\n\t\t\tvar temporary_fields = [\"tax_amount_for_current_item\", \"grand_total_for_current_item\",\n\t\t\t\t\"tax_fraction_for_current_item\", \"grand_total_fraction_for_current_item\"];\n\n\t\t\tif(!frappe.meta.get_docfield(this.frm.doc[\"taxes\"][0].doctype, \"tax_amount_after_discount_amount\", this.frm.doctype)) {\n\t\t\t\ttemporary_fields.push(\"tax_amount_after_discount_amount\");\n\t\t\t}\n\n\t\t\t$.each(this.frm.doc[\"taxes\"] || [], function(i, tax) {\n\t\t\t\t$.each(temporary_fields, function(i, fieldname) {\n\t\t\t\t\tdelete tax[fieldname];\n\t\t\t\t});\n\n\t\t\t\ttax.item_wise_tax_detail = JSON.stringify(tax.item_wise_tax_detail);\n\t\t\t});\n\t\t}\n\t},\n\n\tset_discount_amount: function() {\n\t\tif(this.frm.doc.additional_discount_percentage) {\n\t\t\tthis.frm.doc.discount_amount = flt(flt(this.frm.doc[frappe.scrub(this.frm.doc.apply_discount_on)])\n\t\t\t\t* this.frm.doc.additional_discount_percentage / 100, precision(\"discount_amount\"));\n\t\t}\n\t},\n\n\tapply_discount_amount: function() {\n\t\tvar me = this;\n\t\tvar distributed_amount = 0.0;\n\t\tthis.frm.doc.base_discount_amount = 0.0;\n\n\t\tif (this.frm.doc.discount_amount) {\n\t\t\tif(!this.frm.doc.apply_discount_on)\n\t\t\t\tfrappe.throw(__(\"Please select Apply Discount On\"));\n\n\t\t\tthis.frm.doc.base_discount_amount = flt(this.frm.doc.discount_amount * this.frm.doc.conversion_rate,\n\t\t\t\tprecision(\"base_discount_amount\"));\n\n\t\t\tvar total_for_discount_amount = this.get_total_for_discount_amount();\n\t\t\tvar net_total = 0;\n\t\t\t// calculate item amount after Discount Amount\n\t\t\tif (total_for_discount_amount) {\n\t\t\t\t$.each(this.frm.doc[\"items\"] || [], function(i, item) {\n\t\t\t\t\tdistributed_amount = flt(me.frm.doc.discount_amount) * item.net_amount / total_for_discount_amount;\n\t\t\t\t\titem.net_amount = flt(item.net_amount - distributed_amount,\n\t\t\t\t\t\tprecision(\"base_amount\", item));\n\t\t\t\t\tnet_total += item.net_amount;\n\n\t\t\t\t\t// discount amount rounding loss adjustment if no taxes\n\t\t\t\t\tif ((!(me.frm.doc.taxes || []).length || (me.frm.doc.apply_discount_on == \"Net Total\"))\n\t\t\t\t\t\t\t&& i == (me.frm.doc.items || []).length - 1) {\n\t\t\t\t\t\tvar discount_amount_loss = flt(me.frm.doc.net_total - net_total\n\t\t\t\t\t\t\t- me.frm.doc.discount_amount, precision(\"net_total\"));\n\t\t\t\t\t\titem.net_amount = flt(item.net_amount + discount_amount_loss,\n\t\t\t\t\t\t\tprecision(\"net_amount\", item));\n\t\t\t\t\t}\n\t\t\t\t\titem.net_rate = flt(item.net_amount / item.qty, precision(\"net_rate\", item));\n\t\t\t\t\tme.set_in_company_currency(item, [\"net_rate\", \"net_amount\"]);\n\t\t\t\t});\n\n\t\t\t\tthis.discount_amount_applied = true;\n\t\t\t\tthis._calculate_taxes_and_totals();\n\t\t\t}\n\t\t}\n\t},\n\n\tget_total_for_discount_amount: function() {\n\t\tif(this.frm.doc.apply_discount_on == \"Net Total\") {\n\t\t\treturn this.frm.doc.net_total;\n\t\t} else {\n\t\t\tvar total_actual_tax = 0.0;\n\t\t\tvar actual_taxes_dict = {};\n\n\t\t\t$.each(this.frm.doc[\"taxes\"] || [], function(i, tax) {\n\t\t\t\tif (tax.charge_type == \"Actual\")\n\t\t\t\t\tactual_taxes_dict[tax.idx] = tax.tax_amount;\n\t\t\t\telse if (actual_taxes_dict[tax.row_id] !== null) {\n\t\t\t\t\tvar actual_tax_amount = flt(actual_taxes_dict[tax.row_id]) * flt(tax.rate) / 100;\n\t\t\t\t\tactual_taxes_dict[tax.idx] = actual_tax_amount;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$.each(actual_taxes_dict, function(key, value) {\n\t\t\t\tif (value) total_actual_tax += value;\n\t\t\t});\n\n\t\t\treturn flt(this.frm.doc.grand_total - total_actual_tax, precision(\"grand_total\"));\n\t\t}\n\t},\n\n\tcalculate_total_advance: function(update_paid_amount) {\n\t\tvar total_allocated_amount = frappe.utils.sum($.map(this.frm.doc[\"advances\"] || [], function(adv) {\n\t\t\treturn flt(adv.allocated_amount, precision(\"allocated_amount\", adv));\n\t\t}));\n\t\tthis.frm.doc.total_advance = flt(total_allocated_amount, precision(\"total_advance\"));\n\n\t\tthis.calculate_outstanding_amount(update_paid_amount);\n\t},\n\n\tcalculate_outstanding_amount: function(update_paid_amount) {\n\t\t// NOTE:\n\t\t// paid_amount and write_off_amount is only for POS Invoice\n\t\t// total_advance is only for non POS Invoice\n\n\t\tif(this.frm.doc.doctype == \"Sales Invoice\" && this.frm.doc.is_return){\n\t\t\tthis.calculate_paid_amount();\n\t\t}\n\n\t\tif(this.frm.doc.is_return || this.frm.doc.docstatus > 0) return;\n\n\t\tfrappe.model.round_floats_in(this.frm.doc, [\"grand_total\", \"total_advance\", \"write_off_amount\"]);\n\t\tif(this.frm.doc.party_account_currency == this.frm.doc.currency) {\n\t\t\tvar total_amount_to_pay = flt((this.frm.doc.grand_total - this.frm.doc.total_advance\n\t\t\t\t- this.frm.doc.write_off_amount), precision(\"grand_total\"));\n\t\t} else {\n\t\t\tvar total_amount_to_pay = flt(\n\t\t\t\t(flt(this.frm.doc.grand_total*this.frm.doc.conversion_rate, precision(\"grand_total\"))\n\t\t\t\t\t- this.frm.doc.total_advance - this.frm.doc.base_write_off_amount),\n\t\t\t\tprecision(\"base_grand_total\")\n\t\t\t);\n\t\t}\n\n\t\tif(this.frm.doc.doctype == \"Sales Invoice\" || this.frm.doc.doctype == \"Purchase Invoice\") {\n\t\t\tfrappe.model.round_floats_in(this.frm.doc, [\"paid_amount\"]);\n\n\t\t\tthis.set_in_company_currency(this.frm.doc, [\"paid_amount\"]);\n\n\t\t\tif(this.frm.refresh_field){\n\t\t\t\tthis.frm.refresh_field(\"paid_amount\");\n\t\t\t\tthis.frm.refresh_field(\"base_paid_amount\");\n\t\t\t}\n\n\t\t\tif(this.frm.doc.doctype == \"Sales Invoice\"){\n\t\t\t\tthis.set_default_payment(total_amount_to_pay, update_paid_amount);\n\t\t\t\tthis.calculate_paid_amount();\n\t\t\t}\n\n\t\t\tthis.calculate_change_amount();\n\n\t\t\tvar paid_amount = (this.frm.doc.party_account_currency == this.frm.doc.currency) ?\n\t\t\t\tthis.frm.doc.paid_amount : this.frm.doc.base_paid_amount;\n\n\t\t\tthis.frm.doc.outstanding_amount =  flt(total_amount_to_pay - flt(paid_amount) +\n\t\t\t\tflt(this.frm.doc.change_amount * this.frm.doc.conversion_rate), precision(\"outstanding_amount\"));\n\n\t\t} else if(this.frm.doc.doctype == \"Purchase Invoice\") {\n\t\t\tthis.frm.doc.outstanding_amount = flt(total_amount_to_pay, precision(\"outstanding_amount\"));\n\t\t}\n\t},\n\n\tset_default_payment: function(total_amount_to_pay, update_paid_amount){\n\t\tvar me = this;\n\t\tvar payment_status = true;\n\t\tif(this.frm.doc.is_pos && (update_paid_amount===undefined || update_paid_amount)){\n\t\t\t$.each(this.frm.doc['payments'] || [], function(index, data){\n\t\t\t\tif(data.default && payment_status && total_amount_to_pay > 0) {\n\t\t\t\t\tdata.base_amount = flt(total_amount_to_pay, precision(\"base_amount\"));\n\t\t\t\t\tdata.amount = flt(total_amount_to_pay / me.frm.doc.conversion_rate, precision(\"amount\"));\n\t\t\t\t\tpayment_status = false;\n\t\t\t\t}else if(me.frm.doc.paid_amount){\n\t\t\t\t\tdata.amount = 0.0;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\tcalculate_paid_amount: function(){\n\t\tvar me = this;\n\t\tvar paid_amount = 0.0;\n\t\tvar base_paid_amount = 0.0;\n\t\tif(this.frm.doc.is_pos) {\n\t\t\t$.each(this.frm.doc['payments'] || [], function(index, data){\n\t\t\t\tdata.base_amount = flt(data.amount * me.frm.doc.conversion_rate, precision(\"base_amount\"));\n\t\t\t\tpaid_amount += data.amount;\n\t\t\t\tbase_paid_amount += data.base_amount;\n\t\t\t});\n\t\t} else if(!this.frm.doc.is_return){\n\t\t\tthis.frm.doc.payments = [];\n\t\t}\n\n\t\tthis.frm.doc.paid_amount = flt(paid_amount, precision(\"paid_amount\"));\n\t\tthis.frm.doc.base_paid_amount = flt(base_paid_amount, precision(\"base_paid_amount\"));\n\t},\n\n\tcalculate_change_amount: function(){\n\t\tthis.frm.doc.change_amount = 0.0;\n\t\tthis.frm.doc.base_change_amount = 0.0;\n\t\tif(this.frm.doc.paid_amount > this.frm.doc.grand_total && !this.frm.doc.is_return) {\n\t\t\tvar payment_types = $.map(this.frm.doc.payments, function(d) { return d.type; });\n\t\t\tif (in_list(payment_types, 'Cash')) {\n\t\t\t\tthis.frm.doc.change_amount = flt(this.frm.doc.paid_amount - this.frm.doc.grand_total +\n\t\t\t\t\tthis.frm.doc.write_off_amount, precision(\"change_amount\"));\n\n\t\t\t\tthis.frm.doc.base_change_amount = flt(this.frm.doc.base_paid_amount -\n\t\t\t\t\tthis.frm.doc.base_grand_total + this.frm.doc.base_write_off_amount,\n\t\t\t\t\tprecision(\"base_change_amount\"));\n\t\t\t}\n\t\t}\n\t},\n\n\tcalculate_write_off_amount: function(){\n\t\tif(this.frm.doc.paid_amount > this.frm.doc.grand_total){\n\t\t\tthis.frm.doc.write_off_amount = flt(this.frm.doc.grand_total - this.frm.doc.paid_amount\n\t\t\t\t+ this.frm.doc.change_amount, precision(\"write_off_amount\"));\n\n\t\t\tthis.frm.doc.base_write_off_amount = flt(this.frm.doc.write_off_amount * this.frm.doc.conversion_rate,\n\t\t\t\tprecision(\"base_write_off_amount\"));\n\t\t}else{\n\t\t\tthis.frm.doc.paid_amount = 0.0;\n\t\t}\n\t\tthis.calculate_outstanding_amount(false);\n\t}\n});\n\n\nfrappe.pages['pos'].on_page_load = function (wrapper) {\n\tvar page = frappe.ui.make_app_page({\n\t\tparent: wrapper,\n\t\ttitle: __('Point of Sale'),\n\t\tsingle_column: true\n\t});\n\n\tfrappe.db.get_value('POS Settings', {name: 'POS Settings'}, 'is_online', (r) => {\n\t\tif (r && r.use_pos_in_offline_mode && cint(r.use_pos_in_offline_mode)) {\n\t\t\t// offline\n\t\t\twrapper.pos = new erpnext.pos.PointOfSale(wrapper);\n\t\t\tcur_pos = wrapper.pos;\n\t\t} else {\n\t\t\t// online\n\t\t\tfrappe.set_route('point-of-sale');\n\t\t}\n\t});\n}\n\nfrappe.pages['pos'].refresh = function (wrapper) {\n\twindow.onbeforeunload = function () {\n\t\treturn wrapper.pos.beforeunload()\n\t}\n}\n\nerpnext.pos.PointOfSale = erpnext.taxes_and_totals.extend({\n\tinit: function (wrapper) {\n\t\tthis.page_len = 20;\n\t\tthis.freeze = false;\n\t\tthis.page = wrapper.page;\n\t\tthis.wrapper = $(wrapper).find('.page-content');\n\t\tthis.set_indicator();\n\t\tthis.onload();\n\t\tthis.make_menu_list();\n\t\tthis.bind_events();\n\t\tthis.bind_items_event();\n\t\tthis.si_docs = this.get_doc_from_localstorage();\n\t},\n\n\tbeforeunload: function (e) {\n\t\tif (this.connection_status == false && frappe.get_route()[0] == \"pos\") {\n\t\t\te = e || window.event;\n\n\t\t\t// For IE and Firefox prior to version 4\n\t\t\tif (e) {\n\t\t\t\te.returnValue = __(\"You are in offline mode. You will not be able to reload until you have network.\");\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// For Safari\n\t\t\treturn __(\"You are in offline mode. You will not be able to reload until you have network.\");\n\t\t}\n\t},\n\n\tcheck_internet_connection: function () {\n\t\tvar me = this;\n\t\t//Check Internet connection after every 30 seconds\n\t\tsetInterval(function () {\n\t\t\tme.set_indicator();\n\t\t}, 5000)\n\t},\n\n\tset_indicator: function () {\n\t\tvar me = this;\n\t\t// navigator.onLine\n\t\tthis.connection_status = false;\n\t\tthis.page.set_indicator(__(\"Offline\"), \"grey\")\n\t\tfrappe.call({\n\t\t\tmethod: \"frappe.handler.ping\",\n\t\t\tcallback: function (r) {\n\t\t\t\tif (r.message) {\n\t\t\t\t\tme.connection_status = true;\n\t\t\t\t\tme.page.set_indicator(__(\"Online\"), \"green\")\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t},\n\n\tonload: function () {\n\t\tvar me = this;\n\t\tthis.get_data_from_server(function () {\n\t\t\tme.make_control();\n\t\t\tme.create_new();\n\t\t});\n\t},\n\n\tmake_menu_list: function () {\n\t\tvar me = this;\n\t\tthis.page.clear_menu();\n\n\t\t// for mobile\n\t\tthis.page.add_menu_item(__(\"Pay\"), function () {\n\t\t\tme.validate();\n\t\t\tme.update_paid_amount_status(true);\n\t\t\tme.create_invoice();\n\t\t\tme.make_payment();\n\t\t}).addClass('visible-xs');\n\n\t\tthis.page.add_menu_item(__(\"New Sales Invoice\"), function () {\n\t\t\tme.save_previous_entry();\n\t\t\tme.create_new();\n\t\t})\n\n\t\tthis.page.add_menu_item(__(\"Sync Master Data\"), function () {\n\t\t\tme.get_data_from_server(function () {\n\t\t\t\tme.load_data(false);\n\t\t\t\tme.make_item_list();\n\t\t\t\tme.set_missing_values();\n\t\t\t})\n\t\t});\n\n\t\tthis.page.add_menu_item(__(\"Sync Offline Invoices\"), function () {\n\t\t\tme.sync_sales_invoice()\n\t\t});\n\n\t\tthis.page.add_menu_item(__(\"POS Profile\"), function () {\n\t\t\tfrappe.set_route('List', 'POS Profile');\n\t\t});\n\t},\n\n\temail_prompt: function() {\n\t\tvar me = this;\n\t\tvar fields = [{label:__(\"To\"), fieldtype:\"Data\", reqd: 0, fieldname:\"recipients\",length:524288},\n\t\t\t{fieldtype: \"Section Break\", collapsible: 1, label: \"CC & Standard Reply\"},\n\t\t\t{fieldtype: \"Section Break\"},\n\t\t\t{label:__(\"Subject\"), fieldtype:\"Data\", reqd: 1,\n\t\t\t\tfieldname:\"subject\",length:524288},\n\t\t\t{fieldtype: \"Section Break\"},\n\t\t\t{label:__(\"Message\"), fieldtype:\"Text Editor\", reqd: 1,\n\t\t\t\tfieldname:\"content\"},\n\t\t\t{fieldtype: \"Section Break\"},\n\t\t\t{fieldtype: \"Column Break\"}];\n\n\t\tthis.email_dialog = new frappe.ui.Dialog({\n\t\t\ttitle: \"Email\",\n\t\t\tfields: fields,\n\t\t\tprimary_action_label: __(\"Send\"),\n\t\t\tprimary_action: function() {\n\t\t\t\tme.send_action();\n\t\t\t}\n\t\t});\n\n\t\tthis.email_dialog.show()\n\t},\n\n\tsend_action: function() {\n\t\tthis.email_queue = this.get_email_queue()\n\t\tthis.email_queue[this.frm.doc.offline_pos_name] = JSON.stringify(this.email_dialog.get_values())\n\t\tthis.update_email_queue()\n\t\tthis.email_dialog.hide()\n\t},\n\n\tupdate_email_queue: function () {\n\t\ttry {\n\t\t\tlocalStorage.setItem('email_queue', JSON.stringify(this.email_queue));\n\t\t} catch (e) {\n\t\t\tfrappe.throw(__(\"LocalStorage is full, did not save\"))\n\t\t}\n\t},\n\n\tget_email_queue: function () {\n\t\ttry {\n\t\t\treturn JSON.parse(localStorage.getItem('email_queue')) || {};\n\t\t} catch (e) {\n\t\t\treturn {}\n\t\t}\n\t},\n\n\tget_customers_details: function () {\n\t\ttry {\n\t\t\treturn JSON.parse(localStorage.getItem('customer_details')) || {};\n\t\t} catch (e) {\n\t\t\treturn {}\n\t\t}\n\t},\n\n\tdialog_actions: function () {\n\t\tvar me = this;\n\n\t\t$(this.list_body).find('.list-select-all').click(function () {\n\t\t\tme.removed_items = [];\n\t\t\t$(me.list_body).find('.list-delete').prop(\"checked\", $(this).is(\":checked\"))\n\t\t\tif ($(this).is(\":checked\")) {\n\t\t\t\t$.each(me.si_docs, function (index, data) {\n\t\t\t\t\tfor (key in data) {\n\t\t\t\t\t\tme.removed_items.push(key)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tme.toggle_delete_button();\n\t\t})\n\n\t\t$(this.list_body).find('.list-delete').click(function () {\n\t\t\tme.name = $(this).parent().parent().attr('invoice-name');\n\t\t\tif ($(this).is(\":checked\")) {\n\t\t\t\tme.removed_items.push(me.name);\n\t\t\t} else {\n\t\t\t\tme.removed_items.pop(me.name)\n\t\t\t}\n\n\t\t\tme.toggle_delete_button();\n\t\t})\n\t},\n\n\tedit_record: function () {\n\t\tvar me = this;\n\n\t\tdoc_data = this.get_invoice_doc(this.si_docs);\n\t\tif (doc_data) {\n\t\t\tthis.frm.doc = doc_data[0][this.name];\n\t\t\tthis.set_missing_values();\n\t\t\tthis.refresh(false);\n\t\t\tthis.toggle_input_field();\n\t\t\tthis.list_dialog && this.list_dialog.hide();\n\t\t}\n\t},\n\n\tdelete_records: function () {\n\t\tvar me = this;\n\t\tthis.validate_list()\n\t\tthis.remove_doc_from_localstorage()\n\t\tthis.update_localstorage();\n\t\t// this.dialog_actions();\n\t\tthis.toggle_delete_button();\n\t},\n\n\tvalidate_list: function() {\n\t\tvar me = this;\n\t\tthis.si_docs = this.get_submitted_invoice()\n\t\t$.each(this.removed_items, function(index, name){\n\t\t\t$.each(me.si_docs, function(key, data){\n\t\t\t\tif(me.si_docs[key][name] && me.si_docs[key][name].offline_pos_name == name ){\n\t\t\t\t\tfrappe.throw(__(\"Submitted orders can not be deleted\"))\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t},\n\n\ttoggle_delete_button: function () {\n\t\tvar me = this;\n\t\tif(this.pos_profile_data[\"allow_delete\"]) {\n\t\t\tif (this.removed_items && this.removed_items.length > 0) {\n\t\t\t\t$(this.page.wrapper).find('.btn-danger').show();\n\t\t\t} else {\n\t\t\t\t$(this.page.wrapper).find('.btn-danger').hide();\n\t\t\t}\n\t\t}\n\t},\n\n\tget_doctype_status: function (doc) {\n\t\tif (doc.docstatus == 0) {\n\t\t\treturn { status: \"Draft\", indicator: \"red\" }\n\t\t} else if (doc.outstanding_amount == 0) {\n\t\t\treturn { status: \"Paid\", indicator: \"green\" }\n\t\t} else {\n\t\t\treturn { status: \"Submitted\", indicator: \"blue\" }\n\t\t}\n\t},\n\n\tset_missing_values: function () {\n\t\tvar me = this;\n\t\tdoc = JSON.parse(localStorage.getItem('doc'))\n\t\tif (this.frm.doc.payments.length == 0) {\n\t\t\tthis.frm.doc.payments = doc.payments;\n\t\t\tthis.calculate_outstanding_amount();\n\t\t}\n\n\t\tthis.set_customer_value_in_party_field();\n\n\t\tif (!this.frm.doc.write_off_account) {\n\t\t\tthis.frm.doc.write_off_account = doc.write_off_account\n\t\t}\n\n\t\tif (!this.frm.doc.account_for_change_amount) {\n\t\t\tthis.frm.doc.account_for_change_amount = doc.account_for_change_amount\n\t\t}\n\t},\n\n\tset_customer_value_in_party_field: function() {\n\t\tif (this.frm.doc.customer) {\n\t\t\tthis.party_field.$input.val(this.frm.doc.customer);\n\t\t}\n\t},\n\n\tget_invoice_doc: function (si_docs) {\n\t\tvar me = this;\n\t\tthis.si_docs = this.get_doc_from_localstorage();\n\n\t\treturn $.grep(this.si_docs, function (data) {\n\t\t\tfor (key in data) {\n\t\t\t\treturn key == me.name\n\t\t\t}\n\t\t})\n\t},\n\n\tget_data_from_server: function (callback) {\n\t\tvar me = this;\n\t\tfrappe.call({\n\t\t\tmethod: \"erpnext.accounts.doctype.sales_invoice.pos.get_pos_data\",\n\t\t\tfreeze: true,\n\t\t\tfreeze_message: __(\"Master data syncing, it might take some time\"),\n\t\t\tcallback: function (r) {\n\t\t\t\tlocalStorage.setItem('doc', JSON.stringify(r.message.doc));\n\t\t\t\tme.init_master_data(r)\n\t\t\t\tme.set_interval_for_si_sync();\n\t\t\t\tme.check_internet_connection();\n\t\t\t\tif (callback) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t},\n\n\tinit_master_data: function (r) {\n\t\tvar me = this;\n\t\tthis.doc = JSON.parse(localStorage.getItem('doc'));\n\t\tthis.meta = r.message.meta;\n\t\tthis.item_data = r.message.items;\n\t\tthis.item_groups = r.message.item_groups;\n\t\tthis.customers = r.message.customers;\n\t\tthis.serial_no_data = r.message.serial_no_data;\n\t\tthis.batch_no_data = r.message.batch_no_data;\n\t\tthis.tax_data = r.message.tax_data;\n\t\tthis.contacts = r.message.contacts;\n\t\tthis.address = r.message.address || {};\n\t\tthis.price_list_data = r.message.price_list_data;\n\t\tthis.bin_data = r.message.bin_data;\n\t\tthis.pricing_rules = r.message.pricing_rules;\n\t\tthis.print_template = r.message.print_template;\n\t\tthis.pos_profile_data = r.message.pos_profile;\n\t\tthis.default_customer = r.message.default_customer || null;\n\t\tthis.print_settings = locals[\":Print Settings\"][\"Print Settings\"];\n\t\tthis.letter_head = (this.pos_profile_data.length > 0) ? frappe.boot.letter_heads[this.pos_profile_data[letter_head]] : {};\n\t},\n\n\tsave_previous_entry: function () {\n\t\tif (this.frm.doc.docstatus < 1 && this.frm.doc.items.length > 0) {\n\t\t\tthis.create_invoice();\n\t\t}\n\t},\n\n\tcreate_new: function () {\n\t\tvar me = this;\n\t\tthis.frm = {}\n\t\tthis.name = null;\n\t\tthis.load_data(true);\n\t\tthis.setup();\n\t\tthis.set_default_customer()\n\t},\n\n\tload_data: function (load_doc) {\n\t\tvar me = this;\n\n\t\tthis.items = this.item_data;\n\t\tthis.actual_qty_dict = {};\n\n\t\tif (load_doc) {\n\t\t\tthis.frm.doc = JSON.parse(localStorage.getItem('doc'));\n\t\t}\n\n\t\t$.each(this.meta, function (i, data) {\n\t\t\tfrappe.meta.sync(data)\n\t\t\tlocals[\"DocType\"][data.name] = data;\n\t\t})\n\n\t\tthis.print_template_data = frappe.render_template(\"print_template\", {\n\t\t\tcontent: this.print_template,\n\t\t\ttitle: \"POS\",\n\t\t\tbase_url: frappe.urllib.get_base_url(),\n\t\t\tprint_css: frappe.boot.print_css,\n\t\t\tprint_settings: this.print_settings,\n\t\t\theader: this.letter_head.header,\n\t\t\tfooter: this.letter_head.footer,\n\t\t\tlandscape: false,\n\t\t\tcolumns: []\n\t\t})\n\t},\n\n\tsetup: function () {\n\t\tthis.make();\n\t\tthis.set_primary_action();\n\t\tthis.party_field.$input.attr('disabled', false);\n\t\tif(this.selected_row) {\n\t\t\tthis.selected_row.hide()\n\t\t}\n\t},\n\n\tset_default_customer: function() {\n\t\tif (this.default_customer && !this.frm.doc.customer) {\n\t\t\tthis.party_field.$input.val(this.default_customer);\n\t\t\tthis.frm.doc.customer = this.default_customer;\n\t\t\tthis.numeric_keypad.show();\n\t\t\tthis.toggle_list_customer(false)\n\t\t\tthis.toggle_item_cart(true)\n\t\t}\n\t},\n\n\tset_transaction_defaults: function (party) {\n\t\tvar me = this;\n\t\tthis.party = party;\n\t\tthis.price_list = (party == \"Customer\" ?\n\t\t\tthis.frm.doc.selling_price_list : this.frm.doc.buying_price_list);\n\t\tthis.price_list_field = (party == \"Customer\" ? \"selling_price_list\" : \"buying_price_list\");\n\t\tthis.sales_or_purchase = (party == \"Customer\" ? \"Sales\" : \"Purchase\");\n\t},\n\n\tmake: function () {\n\t\tthis.make_item_list();\n\t\tthis.make_discount_field()\n\t},\n\n\tmake_control: function() {\n\t\tthis.frm = {}\n\t\tthis.frm.doc = this.doc\n\t\tthis.set_transaction_defaults(\"Customer\");\n\t\tthis.frm.doc[\"allow_user_to_edit_rate\"] = this.pos_profile_data[\"allow_user_to_edit_rate\"] ? true : false,\n\t\tthis.wrapper.html(frappe.render_template(\"pos\", this.frm.doc));\n\t\tthis.make_search();\n\t\tthis.make_customer();\n\t\tthis.make_list_customers();\n\t\tthis.bind_numeric_keypad();\n\t},\n\n\tmake_search: function () {\n\t\tvar me = this;\n\t\tthis.serach_item = frappe.ui.form.make_control({\n\t\t\tdf: {\n\t\t\t\t\"fieldtype\": \"Data\",\n\t\t\t\t\"label\": \"Item\",\n\t\t\t\t\"fieldname\": \"pos_item\",\n\t\t\t\t\"placeholder\": __(\"Search Item\")\n\t\t\t},\n\t\t\tparent: this.wrapper.find(\".search-item\"),\n\t\t\tonly_input: true,\n\t\t});\n\n\t\tthis.serach_item.make_input();\n\t\t\n\t\tthis.serach_item.$input.on(\"keypress\", function (event) {\n\n\t\t\tclearTimeout(me.last_search_timeout);\n\t\t\tme.last_search_timeout = setTimeout(() => {\n\t\t\t\tif((me.serach_item.$input.val() != \"\") || (event.which == 13)) {\n\t\t\t\t\tme.items = me.get_items();\n\t\t\t\t\tme.make_item_list();\n\t\t\t\t}\t\t\t\t\n\t\t\t}, 400);\n\t\t});\n\n\t\tthis.search_item_group = this.wrapper.find('.search-item-group');\n\t\tsorted_item_groups = this.get_sorted_item_groups()\n\t\tvar dropdown_html = sorted_item_groups.map(function(item_group) {\n\t\t\treturn \"<li><a class='option' data-value='\"+item_group+\"'>\"+item_group+\"</a></li>\";\n\t\t}).join(\"\");\n\n\t\tthis.search_item_group.find('.dropdown-menu').html(dropdown_html);\n\n\t\tthis.search_item_group.on('click', '.dropdown-menu a', function() {\n\t\t\tme.selected_item_group = $(this).attr('data-value');\n\t\t\tme.search_item_group.find('.dropdown-text').text(me.selected_item_group);\n\n\t\t\tme.page_len = 20;\n\t\t\tme.items = me.get_items();\n\t\t\tme.make_item_list();\n\t\t})\n\n\t\tme.toggle_more_btn();\n\n\t\tthis.wrapper.on(\"click\", \".btn-more\", function() {\n\t\t\tme.page_len += 20;\n\t\t\tme.items = me.get_items();\n\t\t\tme.make_item_list();\n\t\t\tme.toggle_more_btn();\n\t\t});\n\n\t\tthis.page.wrapper.on(\"click\", \".edit-customer-btn\", function() {\n\t\t\tme.update_customer()\n\t\t})\n\t},\n\n\tget_sorted_item_groups: function() {\n\t\tlist = {}\n\t\t$.each(this.item_groups, function(i, data) {\n\t\t\tlist[i] = data[0]\n\t\t})\n\n\t\treturn Object.keys(list).sort(function(a,b){return list[a]-list[b]})\n\t},\n\n\ttoggle_more_btn: function() {\n\t\tif(!this.items || this.items.length <= this.page_len) {\n\t\t\tthis.wrapper.find(\".btn-more\").hide();\n\t\t} else {\n\t\t\tthis.wrapper.find(\".btn-more\").show();\n\t\t}\n\t},\n\n\ttoggle_totals_area: function(show) {\n\n\t\tif(show === undefined) {\n\t\t\tshow = this.is_totals_area_collapsed;\n\t\t}\n\n\t\tvar totals_area = this.wrapper.find('.totals-area');\n\t\ttotals_area.find('.net-total-area, .tax-area, .discount-amount-area')\n\t\t\t.toggle(show);\n\n\t\tif(show) {\n\t\t\ttotals_area.find('.collapse-btn i')\n\t\t\t\t.removeClass('octicon-chevron-down')\n\t\t\t\t.addClass('octicon-chevron-up');\n\t\t} else {\n\t\t\ttotals_area.find('.collapse-btn i')\n\t\t\t\t.removeClass('octicon-chevron-up')\n\t\t\t\t.addClass('octicon-chevron-down');\n\t\t}\n\n\t\tthis.is_totals_area_collapsed = !show;\n\t},\n\n\tmake_list_customers: function () {\n\t\tvar me = this;\n\t\tthis.list_customers_btn = this.page.wrapper.find('.list-customers-btn');\n\t\tthis.add_customer_btn = this.wrapper.find('.add-customer-btn');\n\t\tthis.pos_bill = this.wrapper.find('.pos-bill-wrapper').hide();\n\t\tthis.list_customers = this.wrapper.find('.list-customers');\n\t\tthis.numeric_keypad = this.wrapper.find('.numeric_keypad');\n\t\tthis.list_customers_btn.addClass(\"view_customer\")\n\n\t\tme.render_list_customers();\n\t\tme.toggle_totals_area(false);\n\n\t\tthis.page.wrapper.on('click', '.list-customers-btn', function() {\n\t\t\t$(this).toggleClass(\"view_customer\");\n\t\t\tif($(this).hasClass(\"view_customer\")) {\n\t\t\t\tme.render_list_customers();\n\t\t\t\tme.list_customers.show();\n\t\t\t\tme.pos_bill.hide();\n\t\t\t\tme.numeric_keypad.hide();\n\t\t\t\tme.toggle_delete_button()\n\t\t\t} else {\n\t\t\t\tif(me.frm.doc.docstatus == 0) {\n\t\t\t\t\tme.party_field.$input.attr('disabled', false);\n\t\t\t\t}\n\t\t\t\tme.pos_bill.show();\n\t\t\t\tme.toggle_totals_area(false);\n\t\t\t\tme.toggle_delete_button()\n\t\t\t\tme.list_customers.hide();\n\t\t\t\tme.numeric_keypad.show();\n\t\t\t}\n\t\t});\n\t\tthis.add_customer_btn.on('click', function() {\n\t\t\tme.save_previous_entry();\n\t\t\tme.create_new();\n\t\t\tme.refresh();\n\t\t\tme.set_focus();\n\t\t});\n\t\tthis.pos_bill.on('click', '.collapse-btn', function() {\n\t\t\tme.toggle_totals_area();\n\t\t});\n\t},\n\n\tbind_numeric_keypad: function() {\n\t\tvar me = this;\n\t\t$(this.numeric_keypad).find('.pos-operation').on('click', function(){\n\t\t\tme.numeric_val = '';\n\t\t})\n\n\t\t$(this.numeric_keypad).find('.numeric-keypad').on('click', function(){\n\t\t\tme.numeric_id = $(this).attr(\"id\") || me.numeric_id;\n\t\t\tme.val = $(this).attr(\"val\")\n\t\t\tif(me.numeric_id) {\n\t\t\t\tme.selected_field = $(me.wrapper).find('.selected-item').find('.' + me.numeric_id)\n\t\t\t}\n\n\t\t\tif(me.val && me.numeric_id) {\n\t\t\t\tme.numeric_val += me.val;\n\t\t\t\tme.selected_field.val(flt(me.numeric_val))\n\t\t\t\tme.selected_field.trigger(\"change\")\n\t\t\t\t// me.render_selected_item()\n\t\t\t}\n\n\t\t\tif(me.numeric_id && $(this).hasClass('pos-operation')) {\n\t\t\t\tme.numeric_keypad.find('button.pos-operation').removeClass('active');\n\t\t\t\t$(this).addClass('active');\n\n\t\t\t\tme.selected_row.find('.pos-list-row').removeClass('active');\n\t\t\t\tme.selected_field.closest('.pos-list-row').addClass('active');\n\t\t\t}\n\t\t})\n\n\t\t$(this.numeric_keypad).find('.numeric-del').click(function(){\n\t\t\tif(me.numeric_id) {\n\t\t\t\tme.selected_field = $(me.wrapper).find('.selected-item').find('.' + me.numeric_id)\n\t\t\t\tme.numeric_val = cstr(flt(me.selected_field.val())).slice(0, -1);\n\t\t\t\tme.selected_field.val(me.numeric_val);\n\t\t\t\tme.selected_field.trigger(\"change\")\n\t\t\t} else {\n\t\t\t\t//Remove an item from the cart, if focus is at selected item\n\t\t\t\tme.remove_selected_item()\n\t\t\t}\n\t\t})\n\n\t\t$(this.numeric_keypad).find('.pos-pay').click(function(){\n\t\t\tme.validate();\n\t\t\tme.update_paid_amount_status(true);\n\t\t\tme.create_invoice();\n\t\t\tme.make_payment();\n\t\t})\n\t},\n\n\tremove_selected_item: function() {\n\t\tthis.remove_item = []\n\t\tidx = $(this.wrapper).find(\".pos-selected-item-action\").attr(\"data-idx\")\n\t\tthis.remove_item.push(idx)\n\t\tthis.remove_zero_qty_item()\n\t\tthis.update_paid_amount_status(false)\n\t},\n\n\trender_list_customers: function () {\n\t\tvar me = this;\n\n\t\tthis.removed_items = [];\n\t\t// this.list_customers.empty();\n\t\tthis.si_docs = this.get_doc_from_localstorage();\n\t\tif (!this.si_docs.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar html = \"\";\n\t\tif(this.si_docs.length) {\n\t\t\tthis.si_docs.forEach(function (data, i) {\n\t\t\t\tfor (var key in data) {\n\t\t\t\t\thtml += frappe.render_template(\"pos_invoice_list\", {\n\t\t\t\t\t\tsr: i + 1,\n\t\t\t\t\t\tname: key,\n\t\t\t\t\t\tcustomer: data[key].customer,\n\t\t\t\t\t\tpaid_amount: format_currency(data[key].paid_amount, me.frm.doc.currency),\n\t\t\t\t\t\tgrand_total: format_currency(data[key].grand_total, me.frm.doc.currency),\n\t\t\t\t\t\tdata: me.get_doctype_status(data[key])\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.list_customers.find('.list-customers-table').html(html);\n\n\t\tthis.list_customers.on('click', '.customer-row', function () {\n\t\t\tme.list_customers.hide();\n\t\t\tme.numeric_keypad.show();\n\t\t\tme.list_customers_btn.toggleClass(\"view_customer\");\n\t\t\tme.pos_bill.show();\n\t\t\tme.list_customers_btn.show();\n\t\t\tme.name = $(this).parents().attr('invoice-name')\n\t\t\tme.edit_record();\n\t\t})\n\n\t\t//actions\n\t\t$(this.wrapper).find('.list-select-all').click(function () {\n\t\t\tme.list_customers.find('.list-delete').prop(\"checked\", $(this).is(\":checked\"))\n\t\t\tme.removed_items = [];\n\t\t\tif ($(this).is(\":checked\")) {\n\t\t\t\t$.each(me.si_docs, function (index, data) {\n\t\t\t\t\tfor (key in data) {\n\t\t\t\t\t\tme.removed_items.push(key)\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.toggle_delete_button();\n\t\t});\n\n\t\t$(this.wrapper).find('.list-delete').click(function () {\n\t\t\tme.name = $(this).parent().parent().attr('invoice-name');\n\t\t\tif ($(this).is(\":checked\")) {\n\t\t\t\tme.removed_items.push(me.name);\n\t\t\t} else {\n\t\t\t\tme.removed_items.pop(me.name)\n\t\t\t}\n\n\t\t\tme.toggle_delete_button();\n\t\t});\n\t},\n\n\tbind_delete_event: function() {\n\t\tvar me = this;\n\n\t\t$(this.page.wrapper).on('click', '.btn-danger', function(){\n\t\t\tfrappe.confirm(__(\"Delete permanently?\"), function () {\n\t\t\t\tme.delete_records();\n\t\t\t\tme.list_customers.find('.list-customers-table').html(\"\");\n\t\t\t\tme.render_list_customers();\n\t\t\t})\n\t\t})\n\t},\n\n\tset_focus: function () {\n\t\tif (this.default_customer || this.frm.doc.customer) {\n\t\t\tthis.set_customer_value_in_party_field();\n\t\t\tthis.serach_item.$input.focus();\n\t\t} else {\n\t\t\tthis.party_field.$input.focus();\n\t\t}\n\t},\n\n\tmake_customer: function () {\n\t\tvar me = this;\n\n\t\tif(!this.party_field) {\n\t\t\tif(this.page.wrapper.find('.pos-bill-toolbar').length === 0) {\n\t\t\t\t$(frappe.render_template('customer_toolbar', {\n\t\t\t\t\tallow_delete: this.pos_profile_data[\"allow_delete\"]\n\t\t\t\t})).insertAfter(this.page.$title_area.hide());\n\t\t\t}\n\n\t\t\tthis.party_field = frappe.ui.form.make_control({\n\t\t\t\tdf: {\n\t\t\t\t\t\"fieldtype\": \"Data\",\n\t\t\t\t\t\"options\": this.party,\n\t\t\t\t\t\"label\": this.party,\n\t\t\t\t\t\"fieldname\": this.party.toLowerCase(),\n\t\t\t\t\t\"placeholder\": __(\"Select or add new customer\")\n\t\t\t\t},\n\t\t\t\tparent: this.page.wrapper.find(\".party-area\"),\n\t\t\t\tonly_input: true,\n\t\t\t});\n\n\t\t\tthis.party_field.make_input();\n\t\t\tsetTimeout(this.set_focus.bind(this), 500);\n\t\t\tme.toggle_delete_button();\n\t\t}\n\n\t\tthis.party_field.awesomeplete =\n\t\t\tnew Awesomplete(this.party_field.$input.get(0), {\n\t\t\t\tminChars: 0,\n\t\t\t\tmaxItems: 99,\n\t\t\t\tautoFirst: true,\n\t\t\t\tlist: [],\n\t\t\t\tfilter: function (item, input) {\n\t\t\t\t\tif (item.value.includes('is_action')) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tinput = input.toLowerCase();\n\t\t\t\t\titem = this.get_item(item.value);\n\t\t\t\t\tresult = item ? item.searchtext.includes(input) : '';\n\t\t\t\t\tif(!result) {\n\t\t\t\t\t\tme.prepare_customer_mapper(input);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\titem: function (item, input) {\n\t\t\t\t\tvar d = this.get_item(item.value);\n\t\t\t\t\tvar html = \"<span>\" + __(d.label || d.value) + \"</span>\";\n\t\t\t\t\tif(d.customer_name) {\n\t\t\t\t\t\thtml += '<br><span class=\"text-muted ellipsis\">' + __(d.customer_name) + '</span>';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn $('<li></li>')\n\t\t\t\t\t\t.data('item.autocomplete', d)\n\t\t\t\t\t\t.html('<a><p>' + html + '</p></a>')\n\t\t\t\t\t\t.get(0);\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.prepare_customer_mapper()\n\t\tthis.autocomplete_customers();\n\n\t\tthis.party_field.$input\n\t\t\t.on('input', function (e) {\n\t\t\t\tif(me.customers_mapper.length <= 1) {\n\t\t\t\t\tme.prepare_customer_mapper(e.target.value);\n\t\t\t\t}\n\t\t\t\tme.party_field.awesomeplete.list = me.customers_mapper;\n\t\t\t})\n\t\t\t.on('awesomplete-select', function (e) {\n\t\t\t\tvar customer = me.party_field.awesomeplete\n\t\t\t\t\t.get_item(e.originalEvent.text.value);\n\t\t\t\tif (!customer) return;\n\t\t\t\t// create customer link\n\t\t\t\tif (customer.action) {\n\t\t\t\t\tcustomer.action.apply(me);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tme.toggle_list_customer(false);\n\t\t\t\tme.toggle_edit_button(true);\n\t\t\t\tme.update_customer_data(customer);\n\t\t\t\tme.refresh();\n\t\t\t\tme.set_focus();\n\t\t\t\tme.list_customers_btn.removeClass(\"view_customer\");\n\t\t\t})\n\t\t\t.on('focus', function (e) {\n\t\t\t\t$(e.target).val('').trigger('input');\n\t\t\t\tme.toggle_edit_button(false);\n\n\t\t\t\tif(me.frm.doc.items.length) {\n\t\t\t\t\tme.toggle_list_customer(false)\n\t\t\t\t\tme.toggle_item_cart(true)\n\t\t\t\t} else {\n\t\t\t\t\tme.toggle_list_customer(true)\n\t\t\t\t\tme.toggle_item_cart(false)\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on(\"awesomplete-selectcomplete\", function (e) {\n\t\t\t\tvar item = me.party_field.awesomeplete\n\t\t\t\t\t.get_item(e.originalEvent.text.value);\n\t\t\t\t// clear text input if item is action\n\t\t\t\tif (item.action) {\n\t\t\t\t\t$(this).val(\"\");\n\t\t\t\t}\n\t\t\t});\n\t},\n\n\tprepare_customer_mapper: function(key) {\n\t\tvar me = this;\n\t\tvar customer_data = '';\n\n\t\tif (key) {\n\t\t\tkey = key.toLowerCase().trim();\n\t\t\tvar re = new RegExp('%', 'g');\n\t\t\tvar reg = new RegExp(key.replace(re, '\\\\w*\\\\s*[a-zA-Z0-9]*'));\n\n\t\t\tcustomer_data =  $.grep(this.customers, function(data) {\n\t\t\t\tcontact = me.contacts[data.name];\n\t\t\t\tif(reg.test(data.name.toLowerCase())\n\t\t\t\t\t|| reg.test(data.customer_name.toLowerCase())\n\t\t\t\t\t|| (contact && reg.test(contact[\"mobile_no\"]))\n\t\t\t\t\t|| (contact && reg.test(contact[\"phone\"]))\n\t\t\t\t\t|| (data.customer_group && reg.test(data.customer_group.toLowerCase()))){\n\t\t\t\t\t\treturn data;\n\t\t\t\t}\n\t\t\t})\n\t\t} else {\n\t\t\tcustomer_data = this.customers;\n\t\t}\n\n\t\tthis.customers_mapper = [];\n\n\t\tcustomer_data.forEach(function (c, index) {\n\t\t\tif(index < 30) {\n\t\t\t\tcontact = me.contacts[c.name];\n\t\t\t\tif(contact && !c['phone']) {\n\t\t\t\t\tc[\"phone\"] = contact[\"phone\"];\n\t\t\t\t\tc[\"email_id\"] = contact[\"email_id\"];\n\t\t\t\t\tc[\"mobile_no\"] = contact[\"mobile_no\"];\n\t\t\t\t}\n\n\t\t\t\tme.customers_mapper.push({\n\t\t\t\t\tlabel: c.name,\n\t\t\t\t\tvalue: c.name,\n\t\t\t\t\tcustomer_name: c.customer_name,\n\t\t\t\t\tcustomer_group: c.customer_group,\n\t\t\t\t\tterritory: c.territory,\n\t\t\t\t\tphone: contact ? contact[\"phone\"] : '',\n\t\t\t\t\tmobile_no: contact ? contact[\"mobile_no\"] : '',\n\t\t\t\t\temail_id: contact ? contact[\"email_id\"] : '',\n\t\t\t\t\tsearchtext: ['customer_name', 'customer_group', 'name', 'value',\n\t\t\t\t\t\t'label', 'email_id', 'phone', 'mobile_no']\n\t\t\t\t\t\t.map(key => c[key]).join(' ')\n\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\n\t\tthis.customers_mapper.push({\n\t\t\tlabel: \"<span class='text-primary link-option'>\"\n\t\t\t+ \"<i class='fa fa-plus' style='margin-right: 5px;'></i> \"\n\t\t\t+ __(\"Create a new Customer\")\n\t\t\t+ \"</span>\",\n\t\t\tvalue: 'is_action',\n\t\t\taction: me.add_customer\n\t\t});\n\t},\n\n\tautocomplete_customers: function() {\n\t\tthis.party_field.awesomeplete.list = this.customers_mapper;\n\t},\n\n\ttoggle_edit_button: function(flag) {\n\t\tthis.page.wrapper.find('.edit-customer-btn').toggle(flag);\n\t},\n\n\ttoggle_list_customer: function(flag) {\n\t\tthis.list_customers.toggle(flag);\n\t},\n\n\ttoggle_item_cart: function(flag) {\n\t\tthis.wrapper.find('.pos-bill-wrapper').toggle(flag);\n\t},\n\n\tadd_customer: function() {\n\t\tthis.frm.doc.customer = \"\";\n\t\tthis.update_customer(true);\n\t\tthis.numeric_keypad.show();\n\t},\n\n\tupdate_customer: function (new_customer) {\n\t\tvar me = this;\n\n\t\tthis.customer_doc = new frappe.ui.Dialog({\n\t\t\t'title': 'Customer',\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\t\"label\": __(\"Full Name\"),\n\t\t\t\t\t\"fieldname\": \"full_name\",\n\t\t\t\t\t\"fieldtype\": \"Data\",\n\t\t\t\t\t\"reqd\": 1\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"fieldtype\": \"Section Break\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"label\": __(\"Email Id\"),\n\t\t\t\t\t\"fieldname\": \"email_id\",\n\t\t\t\t\t\"fieldtype\": \"Data\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"fieldtype\": \"Column Break\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"label\": __(\"Contact Number\"),\n\t\t\t\t\t\"fieldname\": \"phone\",\n\t\t\t\t\t\"fieldtype\": \"Data\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"fieldtype\": \"Section Break\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"label\": __(\"Address Name\"),\n\t\t\t\t\t\"read_only\": 1,\n\t\t\t\t\t\"fieldname\": \"name\",\n\t\t\t\t\t\"fieldtype\": \"Data\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"label\": __(\"Address Line 1\"),\n\t\t\t\t\t\"fieldname\": \"address_line1\",\n\t\t\t\t\t\"fieldtype\": \"Data\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"label\": __(\"Address Line 2\"),\n\t\t\t\t\t\"fieldname\": \"address_line2\",\n\t\t\t\t\t\"fieldtype\": \"Data\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"fieldtype\": \"Column Break\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"label\": __(\"City\"),\n\t\t\t\t\t\"fieldname\": \"city\",\n\t\t\t\t\t\"fieldtype\": \"Data\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"label\": __(\"State\"),\n\t\t\t\t\t\"fieldname\": \"state\",\n\t\t\t\t\t\"fieldtype\": \"Data\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"label\": __(\"ZIP Code\"),\n\t\t\t\t\t\"fieldname\": \"pincode\",\n\t\t\t\t\t\"fieldtype\": \"Data\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"label\": __(\"Customer POS Id\"),\n\t\t\t\t\t\"fieldname\": \"customer_pos_id\",\n\t\t\t\t\t\"fieldtype\": \"Data\",\n\t\t\t\t\t\"hidden\": 1\n\t\t\t\t}\n\t\t\t]\n\t\t})\n\t\tthis.customer_doc.show()\n\t\tthis.render_address_data()\n\n\t\tthis.customer_doc.set_primary_action(__(\"Save\"), function () {\n\t\t\tme.make_offline_customer(new_customer);\n\t\t\tme.pos_bill.show();\n\t\t\tme.list_customers.hide();\n\t\t});\n\t},\n\n\trender_address_data: function() {\n\t\tvar me = this;\n\t\tthis.address_data = this.address[this.frm.doc.customer] || {};\n\t\tif(!this.address_data.email_id || !this.address_data.phone) {\n\t\t\tthis.address_data = this.contacts[this.frm.doc.customer];\n\t\t}\n\n\t\tthis.customer_doc.set_values(this.address_data)\n\t\tif(!this.customer_doc.fields_dict.full_name.$input.val()) {\n\t\t\tthis.customer_doc.set_value(\"full_name\", this.frm.doc.customer)\n\t\t}\n\n\t\tif(!this.customer_doc.fields_dict.customer_pos_id.value) {\n\t\t\tthis.customer_doc.set_value(\"customer_pos_id\", $.now())\n\t\t}\n\t},\n\n\tget_address_from_localstorage: function() {\n\t\tthis.address_details = this.get_customers_details()\n\t\treturn this.address_details[this.frm.doc.customer]\n\t},\n\n\tmake_offline_customer: function(new_customer) {\n\t\tthis.frm.doc.customer = this.frm.doc.customer || this.customer_doc.get_values().full_name;\n\t\tthis.frm.doc.customer_pos_id = this.customer_doc.fields_dict.customer_pos_id.value;\n\t\tthis.customer_details = this.get_customers_details();\n\t\tthis.customer_details[this.frm.doc.customer] = this.get_prompt_details();\n\t\tthis.party_field.$input.val(this.frm.doc.customer);\n\t\tthis.update_address_and_customer_list(new_customer)\n\t\tthis.autocomplete_customers();\n\t\tthis.update_customer_in_localstorage()\n\t\tthis.update_customer_in_localstorage()\n\t\tthis.customer_doc.hide()\n\t},\n\n\tupdate_address_and_customer_list: function(new_customer) {\n\t\tvar me = this;\n\t\tif(new_customer) {\n\t\t\tthis.customers_mapper.push({\n\t\t\t\tlabel: this.frm.doc.customer,\n\t\t\t\tvalue: this.frm.doc.customer,\n\t\t\t\tcustomer_group: \"\",\n\t\t\t\tterritory: \"\"\n\t\t\t});\n\t\t}\n\n\t\tthis.address[this.frm.doc.customer] = JSON.parse(this.get_prompt_details())\n\t},\n\n\tget_prompt_details: function() {\n\t\tthis.prompt_details = this.customer_doc.get_values();\n\t\tthis.prompt_details['country'] = this.pos_profile_data.country;\n\t\tthis.prompt_details['territory'] = this.pos_profile_data[\"territory\"];\n\t\tthis.prompt_details['customer_group'] = this.pos_profile_data[\"customer_group\"];\n\t\tthis.prompt_details['customer_pos_id'] = this.customer_doc.fields_dict.customer_pos_id.value;\n\t\treturn JSON.stringify(this.prompt_details)\n\t},\n\n\tupdate_customer_data: function (doc) {\n\t\tvar me = this;\n\t\tthis.frm.doc.customer = doc.label || doc.name;\n\t\tthis.frm.doc.customer_name = doc.customer_name;\n\t\tthis.frm.doc.customer_group = doc.customer_group;\n\t\tthis.frm.doc.territory = doc.territory;\n\t\tthis.pos_bill.show();\n\t\tthis.numeric_keypad.show();\n\t},\n\n\tmake_item_list: function () {\n\t\tvar me = this;\n\t\tif (!this.price_list) {\n\t\t\tfrappe.msgprint(__(\"Price List not found or disabled\"));\n\t\t\treturn;\n\t\t}\n\n\t\tme.item_timeout = null;\n\n\t\tvar $wrap = me.wrapper.find(\".item-list\");\n\t\tme.wrapper.find(\".item-list\").empty();\n\n\t\tif (this.items.length > 0) {\n\t\t\t$.each(this.items, function(index, obj) {\n\t\t\t\tif(index < me.page_len) {\n\t\t\t\t\t$(frappe.render_template(\"pos_item\", {\n\t\t\t\t\t\titem_code: obj.name,\n\t\t\t\t\t\titem_price: format_currency(me.price_list_data[obj.name], me.frm.doc.currency),\n\t\t\t\t\t\titem_name: obj.name === obj.item_name ? \"\" : obj.item_name,\n\t\t\t\t\t\titem_image: obj.image,\n\t\t\t\t\t\titem_stock: __('Stock Qty') + \": \" + me.get_actual_qty(obj),\n\t\t\t\t\t\tcolor: frappe.get_palette(obj.item_name),\n\t\t\t\t\t\tabbr: frappe.get_abbr(obj.item_name)\n\t\t\t\t\t})).tooltip().appendTo($wrap);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$wrap.append(`\n\t\t\t\t<div class=\"image-view-item btn-more text-muted text-center\">\n\t\t\t\t\t<div class=\"image-view-body\">\n\t\t\t\t\t\t<i class=\"mega-octicon octicon-package\"></i>\n\t\t\t\t\t\t<div>Load more items</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`);\n\n\t\t\tme.toggle_more_btn();\n\t\t} else {\n\t\t\t$(\"<p class='text-muted small' style='padding-left: 10px'>\"\n\t\t\t\t+__(\"Not items found\")+\"</p>\").appendTo($wrap)\n\t\t}\n\n\t\tif (this.items.length == 1\n\t\t\t&& this.serach_item.$input.val()) {\n\t\t\tthis.serach_item.$input.val(\"\");\n\t\t\tthis.add_to_cart();\n\t\t}\n\t},\n\n\tget_items: function (item_code) {\n\t\t// To search item as per the key enter\n\n\t\tvar me = this;\n\t\tthis.item_serial_no = {};\n\t\tthis.item_batch_no = {};\n\n\t\tif (item_code) {\n\t\t\treturn $.grep(this.item_data, function (item) {\n\t\t\t\tif (item.item_code == item_code) {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis.items_list = this.apply_category();\n\n\t\tkey = this.serach_item.$input.val().toLowerCase().replace(/[&\\/\\\\#,+()\\[\\]$~.'\":*?<>{}]/g, '\\\\$&');\n\t\tvar re = new RegExp('%', 'g');\n\t\tvar reg = new RegExp(key.replace(re, '[\\\\w*\\\\s*[a-zA-Z0-9]*]*'))\n\t\tsearch_status = true\n\n\t\tif (key) {\n\t\t\treturn $.grep(this.items_list, function (item) {\n\t\t\t\tif (search_status) {\n\t\t\t\t\tif (in_list(me.batch_no_data[item.item_code], me.serach_item.$input.val())) {\n\t\t\t\t\t\tsearch_status = false;\n\t\t\t\t\t\treturn me.item_batch_no[item.item_code] = me.serach_item.$input.val()\n\t\t\t\t\t} else if (me.serial_no_data[item.item_code]\n\t\t\t\t\t\t&& in_list(Object.keys(me.serial_no_data[item.item_code]), me.serach_item.$input.val())) {\n\t\t\t\t\t\tsearch_status = false;\n\t\t\t\t\t\tme.item_serial_no[item.item_code] = [me.serach_item.$input.val(), me.serial_no_data[item.item_code][me.serach_item.$input.val()]]\n\t\t\t\t\t\treturn true\n\t\t\t\t\t} else if (item.barcode == me.serach_item.$input.val()) {\n\t\t\t\t\t\tsearch_status = false;\n\t\t\t\t\t\treturn item.barcode == me.serach_item.$input.val();\n\t\t\t\t\t} else if (reg.test(item.item_code.toLowerCase()) || (item.description && reg.test(item.description.toLowerCase())) ||\n\t\t\t\t\t\treg.test(item.item_name.toLowerCase()) || reg.test(item.item_group.toLowerCase())) {\n\t\t\t\t\t\treturn true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t} else {\n\t\t\treturn this.items_list;\n\t\t}\n\t},\n\n\tapply_category: function() {\n\t\tvar me = this;\n\t\tcategory = this.selected_item_group || \"All Item Groups\";\n\n\t\tif(category == 'All Item Groups') {\n\t\t\treturn this.item_data\n\t\t} else {\n\t\t\treturn this.item_data.filter(function(element, index, array){\n\t\t\t\treturn element.item_group == category;\n\t\t\t});\n\t\t}\n\t},\n\n\tbind_items_event: function() {\n\t\tvar me = this;\n\t\t$(this.wrapper).on('click', '.pos-bill-item', function() {\n\t\t\t$(me.wrapper).find('.pos-bill-item').removeClass('active');\n\t\t\t$(this).addClass('active');\n\t\t\tme.numeric_val = \"\";\n\t\t\tme.numeric_id = \"\"\n\t\t\tme.item_code = $(this).attr(\"data-item-code\");\n\t\t\tme.render_selected_item()\n\t\t\tme.bind_qty_event()\n\t\t\tme.update_rate()\n\t\t\t$(me.wrapper).find(\".selected-item\").scrollTop(1000);\n\t\t})\n\t},\n\n\tbind_qty_event: function () {\n\t\tvar me = this;\n\n\t\t$(this.wrapper).on(\"change\", \".pos-item-qty\", function () {\n\t\t\tvar item_code = $(this).parents(\".pos-selected-item-action\").attr(\"data-item-code\");\n\t\t\tvar qty = $(this).val();\n\t\t\tme.update_qty(item_code, qty)\n\t\t\tme.update_value()\n\t\t})\n\n\t\t$(this.wrapper).find(\"[data-action='increase-qty']\").on(\"click\", function () {\n\t\t\tvar item_code = $(this).parents(\".pos-bill-item\").attr(\"data-item-code\");\n\t\t\tvar qty = flt($(this).parents(\".pos-bill-item\").find('.pos-item-qty').val()) + 1;\n\t\t\tme.update_qty(item_code, qty)\n\t\t})\n\n\t\t$(this.wrapper).find(\"[data-action='decrease-qty']\").on(\"click\", function () {\n\t\t\tvar item_code = $(this).parents(\".pos-bill-item\").attr(\"data-item-code\");\n\t\t\tvar qty = flt($(this).parents(\".pos-bill-item\").find('.pos-item-qty').val()) - 1;\n\t\t\tme.update_qty(item_code, qty)\n\t\t})\n\n\t\t$(this.wrapper).on(\"change\", \".pos-item-disc\", function () {\n\t\t\tvar item_code = $(this).parents(\".pos-selected-item-action\").attr(\"data-item-code\");\n\t\t\tvar discount = $(this).val();\n\t\t\tme.update_discount(item_code, discount)\n\t\t\tme.update_value()\n\t\t})\n\t},\n\n\tbind_events: function() {\n\t\tvar me = this;\n\t\t// if form is local then allow this function\n\t\t// $(me.wrapper).find(\".pos-item-wrapper\").on(\"click\", function () {\n\t\t$(this.wrapper).on(\"click\", \".pos-item-wrapper\", function () {\n\t\t\tme.item_code = '';\n\t\t\tme.customer_validate();\n\t\t\tif($(me.pos_bill).is(\":hidden\")) return;\n\n\t\t\tif (me.frm.doc.docstatus == 0) {\n\t\t\t\tme.items = me.get_items($(this).attr(\"data-item-code\"))\n\t\t\t\tme.add_to_cart();\n\t\t\t\tme.clear_selected_row();\n\t\t\t}\n\t\t});\n\n\t\tme.bind_delete_event()\n\t},\n\n\tupdate_qty: function (item_code, qty) {\n\t\tvar me = this;\n\t\tthis.items = this.get_items(item_code);\n\t\tthis.validate_serial_no()\n\t\tthis.set_item_details(item_code, \"qty\", qty);\n\t},\n\n\tupdate_discount: function(item_code, discount) {\n\t\tvar me = this;\n\t\tthis.items = this.get_items(item_code);\n\t\tthis.set_item_details(item_code, \"discount_percentage\", discount);\n\t},\n\n\tupdate_rate: function () {\n\t\tvar me = this;\n\t\t$(this.wrapper).on(\"change\", \".pos-item-price\", function () {\n\t\t\tvar item_code = $(this).parents(\".pos-selected-item-action\").attr(\"data-item-code\");\n\t\t\tme.set_item_details(item_code, \"rate\", $(this).val());\n\t\t\tme.update_value()\n\t\t})\n\t},\n\n\tupdate_value: function() {\n\t\tvar me = this;\n\t\tvar fields = {qty: \".pos-item-qty\", \"discount_percentage\": \".pos-item-disc\",\n\t\t\t\"rate\": \".pos-item-price\", \"amount\": \".pos-amount\"}\n\t\tthis.child_doc = this.get_child_item(this.item_code);\n\n\t\tif(me.child_doc.length) {\n\t\t\t$.each(fields, function(key, field) {\n\t\t\t\t$(me.selected_row).find(field).val(me.child_doc[0][key])\n\t\t\t})\n\t\t} else {\n\t\t\tthis.clear_selected_row();\n\t\t}\n\t},\n\n\tclear_selected_row: function() {\n\t\t$(this.wrapper).find('.selected-item').empty();\n\t},\n\n\trender_selected_item: function() {\n\t\tthis.child_doc = this.get_child_item(this.item_code);\n\t\t$(this.wrapper).find('.selected-item').empty();\n\t\tif(this.child_doc.length) {\n\t\t\tthis.child_doc[0][\"allow_user_to_edit_rate\"] = this.pos_profile_data[\"allow_user_to_edit_rate\"] ? true : false,\n\t\t\tthis.selected_row = $(frappe.render_template(\"pos_selected_item\", this.child_doc[0]))\n\t\t\t$(this.wrapper).find('.selected-item').html(this.selected_row)\n\t\t}\n\n\t\t$(this.selected_row).find('.form-control').click(function(){\n\t\t\t$(this).select();\n\t\t})\n\t},\n\n\tget_child_item: function(item_code) {\n\t\tvar me = this;\n\t\treturn $.map(me.frm.doc.items, function(doc){\n\t\t\tif(doc.item_code == item_code) {\n\t\t\t\treturn doc\n\t\t\t}\n\t\t})\n\t},\n\n\tset_item_details: function (item_code, field, value) {\n\t\tvar me = this;\n\t\tif (value < 0) {\n\t\t\tfrappe.throw(__(\"Enter value must be positive\"));\n\t\t}\n\n\t\tthis.remove_item = []\n\t\t$.each(this.frm.doc[\"items\"] || [], function (i, d) {\n\t\t\tif (d.item_code == item_code) {\n\t\t\t\tif (d.serial_no && field == 'qty') {\n\t\t\t\t\tme.validate_serial_no_qty(d, item_code, field, value)\n\t\t\t\t}\n\n\t\t\t\td[field] = flt(value);\n\t\t\t\td.amount = flt(d.rate) * flt(d.qty);\n\t\t\t\tif (d.qty == 0) {\n\t\t\t\t\tme.remove_item.push(d.idx)\n\t\t\t\t}\n\n\t\t\t\tif(field==\"discount_percentage\" && value == 0) {\n\t\t\t\t\td.rate = d.price_list_rate;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (field == 'qty') {\n\t\t\tthis.remove_zero_qty_item();\n\t\t}\n\n\t\tthis.update_paid_amount_status(false)\n\t},\n\n\tremove_zero_qty_item: function () {\n\t\tvar me = this;\n\t\tvar idx = 0;\n\t\tthis.items = []\n\t\t$.each(this.frm.doc[\"items\"] || [], function (i, d) {\n\t\t\tif (!in_list(me.remove_item, d.idx)) {\n\t\t\t\td.idx = idx;\n\t\t\t\tme.items.push(d);\n\t\t\t\tidx++;\n\t\t\t}\n\t\t});\n\n\t\tthis.frm.doc[\"items\"] = this.items;\n\t},\n\n\tmake_discount_field: function () {\n\t\tvar me = this;\n\n\t\tthis.wrapper.find('input.discount-percentage').on(\"change\", function () {\n\t\t\tme.frm.doc.additional_discount_percentage = flt($(this).val(), precision(\"additional_discount_percentage\"));\n\t\t\tvar total = me.frm.doc.grand_total\n\n\t\t\tif (me.frm.doc.apply_discount_on == 'Net Total') {\n\t\t\t\ttotal = me.frm.doc.net_total\n\t\t\t}\n\n\t\t\tme.frm.doc.discount_amount = flt(total * flt(me.frm.doc.additional_discount_percentage) / 100, precision(\"discount_amount\"));\n\t\t\tme.wrapper.find('input.discount-amount').val(me.frm.doc.discount_amount)\n\t\t\tme.refresh();\n\t\t});\n\n\t\tthis.wrapper.find('input.discount-amount').on(\"change\", function () {\n\t\t\tme.frm.doc.discount_amount = flt($(this).val(), precision(\"discount_amount\"));\n\t\t\tme.frm.doc.additional_discount_percentage = 0.0;\n\t\t\tme.wrapper.find('input.discount-percentage').val(0);\n\t\t\tme.refresh();\n\t\t});\n\t},\n\n\tcustomer_validate: function () {\n\t\tvar me = this;\n\t\tif (!this.frm.doc.customer || this.party_field.get_value() == \"\") {\n\t\t\tfrappe.throw(__(\"Please select customer\"))\n\t\t}\n\t},\n\n\tadd_to_cart: function () {\n\t\tvar me = this;\n\t\tvar caught = false;\n\t\tvar no_of_items = me.wrapper.find(\".pos-bill-item\").length;\n\n\t\tthis.customer_validate();\n\t\tthis.mandatory_batch_no();\n\t\tthis.validate_serial_no();\n\t\tthis.validate_warehouse();\n\n\t\tif (no_of_items != 0) {\n\t\t\t$.each(this.frm.doc[\"items\"] || [], function (i, d) {\n\t\t\t\tif (d.item_code == me.items[0].item_code) {\n\t\t\t\t\tcaught = true;\n\t\t\t\t\td.qty += 1;\n\t\t\t\t\td.amount = flt(d.rate) * flt(d.qty);\n\t\t\t\t\tif (me.item_serial_no[d.item_code]) {\n\t\t\t\t\t\td.serial_no += '\\n' + me.item_serial_no[d.item_code][0]\n\t\t\t\t\t\td.warehouse = me.item_serial_no[d.item_code][1]\n\t\t\t\t\t}\n\n\t\t\t\t\tif (me.item_batch_no.length) {\n\t\t\t\t\t\td.batch_no = me.item_batch_no[d.item_code]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// if item not found then add new item\n\t\tif (!caught)\n\t\t\tthis.add_new_item_to_grid();\n\n\t\tthis.update_paid_amount_status(false)\n\t\tthis.wrapper.find(\".item-cart-items\").scrollTop(1000);\n\t},\n\n\tadd_new_item_to_grid: function () {\n\t\tvar me = this;\n\t\tthis.child = frappe.model.add_child(this.frm.doc, this.frm.doc.doctype + \" Item\", \"items\");\n\t\tthis.child.item_code = this.items[0].item_code;\n\t\tthis.child.item_name = this.items[0].item_name;\n\t\tthis.child.stock_uom = this.items[0].stock_uom;\n\t\tthis.child.brand = this.items[0].brand;\n\t\tthis.child.description = this.items[0].description || this.items[0].item_name;\n\t\tthis.child.discount_percentage = 0.0;\n\t\tthis.child.qty = 1;\n\t\tthis.child.item_group = this.items[0].item_group;\n\t\tthis.child.cost_center = this.pos_profile_data['cost_center'] || this.items[0].cost_center;\n\t\tthis.child.income_account = this.pos_profile_data['income_account'] || this.items[0].income_account;\n\t\tthis.child.warehouse = (this.item_serial_no[this.child.item_code]\n\t\t\t? this.item_serial_no[this.child.item_code][1] : (this.pos_profile_data['warehouse'] || this.items[0].default_warehouse));\n\t\tthis.child.price_list_rate = flt(this.price_list_data[this.child.item_code], 9) / flt(this.frm.doc.conversion_rate, 9);\n\t\tthis.child.rate = flt(this.price_list_data[this.child.item_code], 9) / flt(this.frm.doc.conversion_rate, 9);\n\t\tthis.child.actual_qty = me.get_actual_qty(this.items[0]);\n\t\tthis.child.amount = flt(this.child.qty) * flt(this.child.rate);\n\t\tthis.child.batch_no = this.item_batch_no[this.child.item_code];\n\t\tthis.child.serial_no = (this.item_serial_no[this.child.item_code]\n\t\t\t? this.item_serial_no[this.child.item_code][0] : '');\n\t\tthis.child.item_tax_rate = JSON.stringify(this.tax_data[this.child.item_code]);\n\t},\n\n\tupdate_paid_amount_status: function (update_paid_amount) {\n\t\tif (this.name) {\n\t\t\tupdate_paid_amount = update_paid_amount ? false : true;\n\t\t}\n\n\t\tthis.refresh(update_paid_amount);\n\t},\n\n\trefresh: function (update_paid_amount) {\n\t\tvar me = this;\n\t\tthis.refresh_fields(update_paid_amount);\n\t\tthis.set_primary_action();\n\t},\n\n\trefresh_fields: function (update_paid_amount) {\n\t\tthis.apply_pricing_rule();\n\t\tthis.discount_amount_applied = false;\n\t\tthis._calculate_taxes_and_totals();\n\t\tthis.calculate_discount_amount();\n\t\tthis.show_items_in_item_cart();\n\t\tthis.set_taxes();\n\t\tthis.calculate_outstanding_amount(update_paid_amount);\n\t\tthis.set_totals();\n\t},\n\n\tget_company_currency: function () {\n\t\treturn erpnext.get_currency(this.frm.doc.company);\n\t},\n\n\tshow_items_in_item_cart: function () {\n\t\tvar me = this;\n\t\tvar $items = this.wrapper.find(\".items\").empty();\n\t\tvar $no_items_message = this.wrapper.find(\".no-items-message\");\n\t\t$no_items_message.toggle(this.frm.doc.items.length === 0);\n\n\t\tvar $totals_area = this.wrapper.find('.totals-area');\n\t\t$totals_area.toggle(this.frm.doc.items.length > 0);\n\n\t\t$.each(this.frm.doc.items || [], function (i, d) {\n\t\t\t$(frappe.render_template(\"pos_bill_item_new\", {\n\t\t\t\titem_code: d.item_code,\n\t\t\t\titem_name: (d.item_name === d.item_code || !d.item_name) ? \"\" : (\"<br>\" + d.item_name),\n\t\t\t\tqty: d.qty,\n\t\t\t\tdiscount_percentage: d.discount_percentage || 0.0,\n\t\t\t\tactual_qty: me.actual_qty_dict[d.item_code] || 0.0,\n\t\t\t\tprojected_qty: d.projected_qty,\n\t\t\t\trate: format_currency(d.rate, me.frm.doc.currency),\n\t\t\t\tamount: format_currency(d.amount, me.frm.doc.currency),\n\t\t\t\tselected_class: (me.item_code == d.item_code) ? \"active\" : \"\"\n\t\t\t})).appendTo($items);\n\t\t});\n\n\t\tthis.wrapper.find(\"input.pos-item-qty\").on(\"focus\", function () {\n\t\t\t$(this).select();\n\t\t});\n\n\t\tthis.wrapper.find(\"input.pos-item-disc\").on(\"focus\", function () {\n\t\t\t$(this).select();\n\t\t});\n\n\t\tthis.wrapper.find(\"input.pos-item-price\").on(\"focus\", function () {\n\t\t\t$(this).select();\n\t\t});\n\t},\n\n\tset_taxes: function () {\n\t\tvar me = this;\n\t\tme.frm.doc.total_taxes_and_charges = 0.0\n\n\t\tvar taxes = this.frm.doc.taxes || [];\n\t\t$(this.wrapper)\n\t\t\t.find(\".tax-area\").toggleClass(\"hide\", (taxes && taxes.length) ? false : true)\n\t\t\t.find(\".tax-table\").empty();\n\n\t\t$.each(taxes, function (i, d) {\n\t\t\tif (d.tax_amount && cint(d.included_in_print_rate) == 0) {\n\t\t\t\t$(frappe.render_template(\"pos_tax_row\", {\n\t\t\t\t\tdescription: d.description,\n\t\t\t\t\ttax_amount: format_currency(flt(d.tax_amount_after_discount_amount),\n\t\t\t\t\t\tme.frm.doc.currency)\n\t\t\t\t})).appendTo(me.wrapper.find(\".tax-table\"));\n\t\t\t}\n\t\t});\n\t},\n\n\tset_totals: function () {\n\t\tvar me = this;\n\t\tthis.wrapper.find(\".net-total\").text(format_currency(me.frm.doc.total, me.frm.doc.currency));\n\t\tthis.wrapper.find(\".grand-total\").text(format_currency(me.frm.doc.grand_total, me.frm.doc.currency));\n\t},\n\n\tset_primary_action: function () {\n\t\tvar me = this;\n\t\tthis.page.set_primary_action(__(\"New Cart\"), function () {\n\t\t\tme.make_new_cart()\n\t\t\tme.make_menu_list()\n\t\t}, \"fa fa-plus\")\n\n\t\tif (this.frm.doc.docstatus == 1) {\n\t\t\tthis.page.set_secondary_action(__(\"Print\"), function () {\n\t\t\t\tvar html = frappe.render(me.print_template_data, me.frm.doc)\n\t\t\t\tme.print_document(html)\n\t\t\t})\n\t\t\tthis.page.add_menu_item(__(\"Email\"), function () {\n\t\t\t\tme.email_prompt()\n\t\t\t})\n\t\t}\n\t},\n\n\tmake_new_cart: function (){\n\t\tthis.item_code = '';\n\t\tthis.page.clear_secondary_action();\n\t\tthis.save_previous_entry();\n\t\tthis.create_new();\n\t\tthis.refresh();\n\t\tthis.toggle_input_field();\n\t\tthis.render_list_customers();\n\t\tthis.set_focus();\n\t},\n\n\tprint_dialog: function () {\n\t\tvar me = this;\n\n\t\tthis.msgprint = frappe.msgprint(\n\t\t\t`<a class=\"btn btn-primary print_doc\"\n\t\t\t\tstyle=\"margin-right: 5px;\">${__('Print')}</a>\n\t\t\t<a class=\"btn btn-default new_doc\">${__('New')}</a>`);\n\n\t\t$('.print_doc').click(function () {\n\t\t\tvar html = frappe.render(me.print_template_data, me.frm.doc)\n\t\t\tme.print_document(html)\n\t\t})\n\n\t\t$('.new_doc').click(function () {\n\t\t\tme.msgprint.hide()\n\t\t\tme.make_new_cart()\n\t\t})\n\t},\n\n\tprint_document: function (html) {\n\t\tvar w = window.open();\n\t\tw.document.write(html);\n\t\tw.document.close();\n\t\tsetTimeout(function () {\n\t\t\tw.print();\n\t\t\tw.close();\n\t\t}, 1000)\n\t},\n\n\tsubmit_invoice: function () {\n\t\tvar me = this;\n\t\tthis.change_status();\n\t\tthis.update_serial_no()\n\t\tif (this.frm.doc.docstatus == 1) {\n\t\t\tthis.print_dialog()\n\t\t}\n\t},\n\n\tupdate_serial_no: function() {\n\t\tvar me = this;\n\n\t\t//Remove the sold serial no from the cache\n\t\t$.each(this.frm.doc.items, function(index, data) {\n\t\t\tvar sn = data.serial_no.split('\\n')\n\t\t\tif(sn.length) {\n\t\t\t\tvar serial_no_list = me.serial_no_data[data.item_code]\n\t\t\t\tif(serial_no_list) {\n\t\t\t\t\t$.each(sn, function(i, serial_no) {\n\t\t\t\t\t\tif(in_list(Object.keys(serial_no_list), serial_no)) {\n\t\t\t\t\t\t\tdelete serial_no_list[serial_no]\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tme.serial_no_data[data.item_code] = serial_no_list;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t},\n\n\tchange_status: function () {\n\t\tif (this.frm.doc.docstatus == 0) {\n\t\t\tthis.frm.doc.docstatus = 1;\n\t\t\tthis.update_invoice();\n\t\t\tthis.toggle_input_field();\n\t\t}\n\t},\n\n\ttoggle_input_field: function () {\n\t\tvar pointer_events = 'inherit'\n\t\tvar disabled = this.frm.doc.docstatus == 1 ? true: false;\n\t\t$(this.wrapper).find('input').attr(\"disabled\", disabled);\n\t\t$(this.wrapper).find('select').attr(\"disabled\", disabled);\n\t\t$(this.wrapper).find('input').attr(\"disabled\", disabled);\n\t\t$(this.wrapper).find('select').attr(\"disabled\", disabled);\n\t\t$(this.wrapper).find('button').attr(\"disabled\", disabled);\n\t\tthis.party_field.$input.attr('disabled', disabled);\n\n\t\tif (this.frm.doc.docstatus == 1) {\n\t\t\tpointer_events = 'none';\n\t\t}\n\n\t\t$(this.wrapper).find('.pos-bill').css('pointer-events', pointer_events);\n\t\t$(this.wrapper).find('.pos-items-section').css('pointer-events', pointer_events);\n\t\tthis.set_primary_action();\n\t},\n\n\tcreate_invoice: function () {\n\t\tvar me = this;\n\t\tvar invoice_data = {}\n\t\tthis.si_docs = this.get_doc_from_localstorage();\n\t\tif (this.name) {\n\t\t\tthis.update_invoice()\n\t\t} else {\n\t\t\tthis.name = $.now();\n\t\t\tthis.frm.doc.offline_pos_name = this.name;\n\t\t\tthis.frm.doc.posting_date = frappe.datetime.get_today();\n\t\t\tthis.frm.doc.posting_time = frappe.datetime.now_time();\n\t\t\tthis.frm.doc.pos_profile = this.pos_profile_data['name'];\n\t\t\tinvoice_data[this.name] = this.frm.doc\n\t\t\tthis.si_docs.push(invoice_data)\n\t\t\tthis.update_localstorage();\n\t\t\tthis.set_primary_action();\n\t\t}\n\t\treturn invoice_data;\n\t},\n\n\tupdate_invoice: function () {\n\t\tvar me = this;\n\t\tthis.si_docs = this.get_doc_from_localstorage();\n\t\t$.each(this.si_docs, function (index, data) {\n\t\t\tfor (var key in data) {\n\t\t\t\tif (key == me.name) {\n\t\t\t\t\tme.si_docs[index][key] = me.frm.doc;\n\t\t\t\t\tme.update_localstorage();\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t},\n\n\tupdate_localstorage: function () {\n\t\ttry {\n\t\t\tlocalStorage.setItem('sales_invoice_doc', JSON.stringify(this.si_docs));\n\t\t} catch (e) {\n\t\t\tfrappe.throw(__(\"LocalStorage is full , did not save\"))\n\t\t}\n\t},\n\n\tget_doc_from_localstorage: function () {\n\t\ttry {\n\t\t\treturn JSON.parse(localStorage.getItem('sales_invoice_doc')) || [];\n\t\t} catch (e) {\n\t\t\treturn []\n\t\t}\n\t},\n\n\tset_interval_for_si_sync: function () {\n\t\tvar me = this;\n\t\tsetInterval(function () {\n\t\t\tme.sync_sales_invoice()\n\t\t}, 60000)\n\t},\n\n\tsync_sales_invoice: function () {\n\t\tvar me = this;\n\t\tthis.si_docs = this.get_submitted_invoice() || [];\n\t\tthis.email_queue_list = this.get_email_queue() || {};\n\t\tthis.customers_list = this.get_customers_details() || {};\n\t\tif(this.customer_doc) {\n\t\t\tthis.freeze = this.customer_doc.display\n\t\t}\n\n\t\tif ((this.si_docs.length || this.email_queue_list || this.customers_list) && !this.freeze) {\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"erpnext.accounts.doctype.sales_invoice.pos.make_invoice\",\n\t\t\t\targs: {\n\t\t\t\t\tdoc_list: me.si_docs,\n\t\t\t\t\temail_queue_list: me.email_queue_list,\n\t\t\t\t\tcustomers_list: me.customers_list\n\t\t\t\t},\n\t\t\t\tcallback: function (r) {\n\t\t\t\t\tif (r.message) {\n\t\t\t\t\t\tme.customers = r.message.synced_customers_list;\n\t\t\t\t\t\tme.address = r.message.synced_address;\n\t\t\t\t\t\tme.contacts = r.message.synced_contacts;\n\t\t\t\t\t\tme.removed_items = r.message.invoice;\n\t\t\t\t\t\tme.removed_email = r.message.email_queue\n\t\t\t\t\t\tme.removed_customers = r.message.customers\n\t\t\t\t\t\tme.remove_doc_from_localstorage();\n\t\t\t\t\t\tme.remove_email_queue_from_localstorage();\n\t\t\t\t\t\tme.remove_customer_from_localstorage();\n\t\t\t\t\t\tme.prepare_customer_mapper()\n\t\t\t\t\t\tme.autocomplete_customers()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t},\n\n\tget_submitted_invoice: function () {\n\t\tvar invoices = [];\n\t\tvar index = 1;\n\t\tvar docs = this.get_doc_from_localstorage();\n\t\tif (docs) {\n\t\t\tinvoices = $.map(docs, function (data) {\n\t\t\t\tfor (var key in data) {\n\t\t\t\t\tif (data[key].docstatus == 1 && index < 50) {\n\t\t\t\t\t\tindex++\n\t\t\t\t\t\tdata[key].docstatus = 0;\n\t\t\t\t\t\treturn data\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn invoices\n\t},\n\n\tremove_doc_from_localstorage: function () {\n\t\tvar me = this;\n\t\tthis.si_docs = this.get_doc_from_localstorage();\n\t\tthis.new_si_docs = [];\n\t\tif (this.removed_items) {\n\t\t\t$.each(this.si_docs, function (index, data) {\n\t\t\t\tfor (var key in data) {\n\t\t\t\t\tif (!in_list(me.removed_items, key)) {\n\t\t\t\t\t\tme.new_si_docs.push(data);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.removed_items = [];\n\t\t\tthis.si_docs = this.new_si_docs;\n\t\t\tthis.update_localstorage();\n\t\t}\n\t},\n\n\tremove_email_queue_from_localstorage: function() {\n\t\tvar me = this;\n\t\tthis.email_queue = this.get_email_queue()\n\t\tif (this.removed_email) {\n\t\t\t$.each(this.email_queue_list, function (index, data) {\n\t\t\t\tif (in_list(me.removed_email, index)) {\n\t\t\t\t\tdelete me.email_queue[index]\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.update_email_queue();\n\t\t}\n\t},\n\n\tremove_customer_from_localstorage: function() {\n\t\tvar me = this;\n\t\tthis.customer_details = this.get_customers_details()\n\t\tif (this.removed_customers) {\n\t\t\t$.each(this.customers_list, function (index, data) {\n\t\t\t\tif (in_list(me.removed_customers, index)) {\n\t\t\t\t\tdelete me.customer_details[index]\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.update_customer_in_localstorage();\n\t\t}\n\t},\n\n\tvalidate: function () {\n\t\tvar me = this;\n\t\tthis.customer_validate();\n\t\tthis.item_validate();\n\t\tthis.validate_mode_of_payments();\n\t},\n\n\titem_validate: function () {\n\t\tif (this.frm.doc.items.length == 0) {\n\t\t\tfrappe.throw(__(\"Select items to save the invoice\"))\n\t\t}\n\t},\n\n\tvalidate_mode_of_payments: function () {\n\t\tif (this.frm.doc.payments.length === 0) {\n\t\t\tfrappe.throw(__(\"Payment Mode is not configured. Please check, whether account has been set on Mode of Payments or on POS Profile.\"))\n\t\t}\n\t},\n\n\tvalidate_serial_no: function () {\n\t\tvar me = this;\n\t\tvar item_code = ''\n\t\tvar serial_no = '';\n\t\tfor (var key in this.item_serial_no) {\n\t\t\titem_code = key;\n\t\t\tserial_no = me.item_serial_no[key][0];\n\t\t}\n\n\t\tif (this.items[0].has_serial_no && serial_no == \"\") {\n\t\t\tthis.refresh();\n\t\t\tfrappe.throw(__(repl(\"Error: Serial no is mandatory for item %(item)s\", {\n\t\t\t\t'item': this.items[0].item_code\n\t\t\t})))\n\t\t}\n\n\t\tif (item_code && serial_no) {\n\t\t\t$.each(this.frm.doc.items, function (index, data) {\n\t\t\t\tif (data.item_code == item_code) {\n\t\t\t\t\tif (in_list(data.serial_no.split('\\n'), serial_no)) {\n\t\t\t\t\t\tfrappe.throw(__(repl(\"Serial no %(serial_no)s is already taken\", {\n\t\t\t\t\t\t\t'serial_no': serial_no\n\t\t\t\t\t\t})))\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t},\n\n\tvalidate_serial_no_qty: function (args, item_code, field, value) {\n\t\tvar me = this;\n\t\tif (args.item_code == item_code && args.serial_no\n\t\t\t&& field == 'qty' && cint(value) != value) {\n\t\t\targs.qty = 0.0;\n\t\t\tthis.refresh();\n\t\t\tfrappe.throw(__(\"Serial no item cannot be a fraction\"))\n\t\t}\n\n\t\tif (args.item_code == item_code && args.serial_no && args.serial_no.split('\\n').length != cint(value)) {\n\t\t\targs.qty = 0.0;\n\t\t\targs.serial_no = ''\n\t\t\tthis.refresh();\n\t\t\tfrappe.throw(__(repl(\"Total nos of serial no is not equal to quantity for item %(item)s.\", {\n\t\t\t\t'item': item_code\n\t\t\t})))\n\t\t}\n\t},\n\n\tmandatory_batch_no: function () {\n\t\tvar me = this;\n\t\tif (this.items[0].has_batch_no && !this.item_batch_no[this.items[0].item_code]) {\n\t\t\tfrappe.prompt([{\n\t\t\t\t'fieldname': 'batch',\n\t\t\t\t'fieldtype': 'Select',\n\t\t\t\t'label': __('Batch No'),\n\t\t\t\t'reqd': 1,\n\t\t\t\t'options': this.batch_no_data[this.items[0].item_code]\n\t\t\t}],\n\t\t\tfunction(values){\n\t\t\t\tme.item_batch_no[me.items[0].item_code] = values.batch;\n\t\t\t},\n\t\t\t__('Select Batch No'))\n\t\t}\n\t},\n\n\tapply_pricing_rule: function () {\n\t\tvar me = this;\n\t\t$.each(this.frm.doc[\"items\"], function (n, item) {\n\t\t\tvar pricing_rule = me.get_pricing_rule(item)\n\t\t\tme.validate_pricing_rule(pricing_rule)\n\t\t\tif (pricing_rule.length) {\n\t\t\t\titem.pricing_rule = pricing_rule[0].name;\n\t\t\t\titem.margin_type = pricing_rule[0].margin_type;\n\t\t\t\titem.price_list_rate = pricing_rule[0].price || item.price_list_rate;\n\t\t\t\titem.margin_rate_or_amount = pricing_rule[0].margin_rate_or_amount;\n\t\t\t\titem.discount_percentage = pricing_rule[0].discount_percentage || 0.0;\n\t\t\t\tme.apply_pricing_rule_on_item(item)\n\t\t\t} else if (item.pricing_rule) {\n\t\t\t\titem.price_list_rate = me.price_list_data[item.item_code]\n\t\t\t\titem.margin_rate_or_amount = 0.0;\n\t\t\t\titem.discount_percentage = 0.0;\n\t\t\t\titem.pricing_rule = null;\n\t\t\t\tme.apply_pricing_rule_on_item(item)\n\t\t\t}\n\n\t\t\tif(item.discount_percentage > 0) {\n\t\t\t\tme.apply_pricing_rule_on_item(item)\n\t\t\t}\n\t\t})\n\t},\n\n\tget_pricing_rule: function (item) {\n\t\tvar me = this;\n\t\treturn $.grep(this.pricing_rules, function (data) {\n\t\t\tif (item.qty >= data.min_qty && (item.qty <= (data.max_qty ? data.max_qty : item.qty))) {\n\t\t\t\tif (me.validate_item_condition(data, item)) {\n\t\t\t\t\tif (in_list(['Customer', 'Customer Group', 'Territory', 'Campaign'], data.applicable_for)) {\n\t\t\t\t\t\treturn me.validate_condition(data)\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t},\n\n\tvalidate_item_condition: function (data, item) {\n\t\tvar apply_on = frappe.model.scrub(data.apply_on);\n\n\t\treturn (data.apply_on == 'Item Group')\n\t\t\t? this.validate_item_group(data.item_group, item.item_group) : (data[apply_on] == item[apply_on]);\n\t},\n\n\tvalidate_item_group: function (pr_item_group, cart_item_group) {\n\t\t//pr_item_group = pricing rule's item group\n\t\t//cart_item_group = cart item's item group\n\t\t//this.item_groups has information about item group's lft and rgt\n\t\t//for example: {'Foods': [12, 19]}\n\n\t\tpr_item_group = this.item_groups[pr_item_group]\n\t\tcart_item_group = this.item_groups[cart_item_group]\n\n\t\treturn (cart_item_group[0] >= pr_item_group[0] &&\n\t\t\tcart_item_group[1] <= pr_item_group[1])\n\t},\n\n\tvalidate_condition: function (data) {\n\t\t//This method check condition based on applicable for\n\t\tvar condition = this.get_mapper_for_pricing_rule(data)[data.applicable_for]\n\t\tif (in_list(condition[1], condition[0])) {\n\t\t\treturn true\n\t\t}\n\t},\n\n\tget_mapper_for_pricing_rule: function (data) {\n\t\treturn {\n\t\t\t'Customer': [data.customer, [this.frm.doc.customer]],\n\t\t\t'Customer Group': [data.customer_group, [this.frm.doc.customer_group, 'All Customer Groups']],\n\t\t\t'Territory': [data.territory, [this.frm.doc.territory, 'All Territories']],\n\t\t\t'Campaign': [data.campaign, [this.frm.doc.campaign]],\n\t\t}\n\t},\n\n\tvalidate_pricing_rule: function (pricing_rule) {\n\t\t//This method validate duplicate pricing rule\n\t\tvar pricing_rule_name = '';\n\t\tvar priority = 0;\n\t\tvar pricing_rule_list = [];\n\t\tvar priority_list = []\n\n\t\tif (pricing_rule.length > 1) {\n\n\t\t\t$.each(pricing_rule, function (index, data) {\n\t\t\t\tpricing_rule_name += data.name + ','\n\t\t\t\tpriority_list.push(data.priority)\n\t\t\t\tif (priority <= data.priority) {\n\t\t\t\t\tpriority = data.priority\n\t\t\t\t\tpricing_rule_list.push(data)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tvar count = 0\n\t\t\t$.each(priority_list, function (index, value) {\n\t\t\t\tif (value == priority) {\n\t\t\t\t\tcount++\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (priority == 0 || count > 1) {\n\t\t\t\tfrappe.throw(__(repl(\"Multiple Price Rules exists with same criteria, please resolve conflict by assigning priority. Price Rules: %(pricing_rule)s\", {\n\t\t\t\t\t'pricing_rule': pricing_rule_name\n\t\t\t\t})))\n\t\t\t}\n\n\t\t\treturn pricing_rule_list\n\t\t}\n\t},\n\n\tvalidate_warehouse: function () {\n\t\tif (this.items[0].is_stock_item && !this.items[0].default_warehouse && !this.pos_profile_data['warehouse']) {\n\t\t\tfrappe.throw(__(\"Default warehouse is required for selected item\"))\n\t\t}\n\t},\n\n\tget_actual_qty: function (item) {\n\t\tthis.actual_qty = 0.0;\n\n\t\tvar warehouse = this.pos_profile_data['warehouse'] || item.default_warehouse;\n\t\tif (warehouse && this.bin_data[item.item_code]) {\n\t\t\tthis.actual_qty = this.bin_data[item.item_code][warehouse] || 0;\n\t\t\tthis.actual_qty_dict[item.item_code] = this.actual_qty\n\t\t}\n\n\t\treturn this.actual_qty\n\t},\n\n\tupdate_customer_in_localstorage: function() {\n\t\tvar me = this;\n\t\ttry {\n\t\t\tlocalStorage.setItem('customer_details', JSON.stringify(this.customer_details));\n\t\t} catch (e) {\n\t\t\tfrappe.throw(__(\"LocalStorage is full , did not save\"))\n\t\t}\n\t}\n})\n","title":"POS","restrict_to_domain":null,"modified":"2014-08-08 05:59:33.045012","content":null,"idx":0,"parenttype":null,"page_name":"pos","docstatus":0,"parentfield":null}]}