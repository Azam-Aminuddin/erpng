{"docs":[{"system_page":0,"parent":null,"creation":"2017-06-06 02:54:24.785360","module":"Utilities","standard":"Yes","doctype":"Page","owner":"Administrator","icon":null,"style":".list-filters {\n\toverflow-y: hidden;\n\tpadding: 5px\n}\n\n.list-filter-item {\n\tmin-width: 150px;\n\tfloat: left;\n\tmargin:5px;\n}\n\n.list-item_content{\n\tflex: 1;\n\tpadding-right: 15px;\n\talign-items: center;\n}\n\n.select-time, .select-doctype, .select-filter, .select-sort {\n\tbackground: #f0f4f7;\n}\n\n.select-time:focus, .select-doctype:focus, .select-filter:focus, .select-sort:focus {\n\tbackground: #f0f4f7;\n}\n\n.header-btn-base{\n\tborder:none;\n\toutline:0;\n\tvertical-align:middle;\n\toverflow:hidden;\n\ttext-decoration:none;\n\tcolor:inherit;\n\tbackground-color:inherit;\n\tcursor:pointer;\n\twhite-space:nowrap;\n}\n\n.header-btn-grey,.header-btn-grey:hover{\n\tcolor:#000!important;\n\tbackground-color:#bbb!important\n}\n\n.header-btn-round{\n\tborder-radius:4px\n}\n\n.item-title-bold{\n\tfont-weight: bold;\n}\n\n/*\n.header-btn-base:hover {\n\tbox-shadow:0 8px 16px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)\n}*/\n","modified_by":"Administrator","name":"leaderboard","roles":[],"script":"frappe.pages[\"leaderboard\"].on_page_load = function (wrapper) {\n\tfrappe.leaderboard = new frappe.Leaderboard(wrapper);\n}\n\nfrappe.Leaderboard = Class.extend({\n\n\tinit: function (parent) {\n\t\tfrappe.ui.make_app_page({\n\t\t\tparent: parent,\n\t\t\ttitle: \"Leaderboard\",\n\t\t\tsingle_column: false\n\t\t});\n\n\t\tthis.parent = parent;\n\t\tthis.page = this.parent.page;\n\t\tthis.page.sidebar.html(`<ul class=\"module-sidebar-nav overlay-sidebar nav nav-pills nav-stacked\"></ul>`);\n\t\tthis.$sidebar_list = this.page.sidebar.find('ul');\n\n\t\t// const list of doctypes\n\t\tthis.doctypes = [\"Customer\", \"Item\", \"Supplier\", \"Sales Partner\"];\n\t\tthis.timespans = [\"Week\", \"Month\", \"Quarter\", \"Year\"];\n\t\tthis.desc_fields = [\"total_amount\", \"total_request\", \"annual_billing\", \"commission_rate\"];\n\t\tthis.filters = {\n\t\t\t\"Customer\": [\"total_amount\", \"total_item_purchased\"],\n\t\t\t\"Item\": [\"total_request\", \"total_purchase\", \"avg_price\"],\n\t\t\t\"Supplier\": [\"annual_billing\", \"total_unpaid\"],\n\t\t\t\"Sales Partner\": [\"commission_rate\", \"target_qty\", \"target_amount\"],\n\t\t};\n\n\t\t// for saving current selected filters\n\t\t// TODO: revert to 0 index for doctype and timespan, and remove preset down\n\t\tconst _initial_doctype = this.doctypes[0];\n\t\tconst _initial_timespan = this.timespans[0];\n\t\tconst _initial_filter = this.filters[_initial_doctype];\n\n\t\tthis.options = {\n\t\t\tselected_doctype: _initial_doctype,\n\t\t\tselected_filter: _initial_filter,\n\t\t\tselected_filter_item: _initial_filter[0],\n\t\t\tselected_timespan: _initial_timespan,\n\t\t};\n\n\t\tthis.message = null;\n\t\tthis.make();\n\t},\n\n\tmake: function () {\n\t\tvar me = this;\n\n\t\tvar $container = $(`<div class=\"leaderboard page-main-content\">\n\t\t\t<div class=\"leaderboard-graph\"></div>\n\t\t\t<div class=\"leaderboard-list\"></div>\n\t\t</div>`).appendTo(this.page.main);\n\n\t\tthis.$graph_area = $container.find('.leaderboard-graph');\n\n\t\tthis.doctypes.map(doctype => {\n\t\t\tthis.get_sidebar_item(doctype).appendTo(this.$sidebar_list);\n\t\t});\n\n\t\tthis.timespan_select = this.page.add_select(__(\"Timespan\"),\n\t\t\tthis.timespans.map(d => {\n\t\t\t\treturn {\"label\": __(d), value: d }\n\t\t\t})\n\t\t);\n\n\t\t// this.timespan_select.val(this.timespans[1]);\n\n\t\tthis.type_select = this.page.add_select(__(\"Type\"),\n\t\t\tme.options.selected_filter.map(d => {\n\t\t\t\treturn {\"label\": __(frappe.model.unscrub(d)), value: d }\n\t\t\t})\n\t\t);\n\n\t\tthis.$sidebar_list.on('click', 'li', function(e) {\n\t\t\tlet $li = $(this);\n\t\t\tlet doctype = $li.find('span').html();\n\n\t\t\tme.options.selected_doctype = doctype;\n\t\t\tme.options.selected_filter = me.filters[doctype];\n\t\t\tme.options.selected_filter_item = me.filters[doctype][0];\n\n\t\t\tme.type_select.empty().add_options(\n\t\t\t\tme.options.selected_filter.map(d => {\n\t\t\t\t\treturn {\"label\": __(frappe.model.unscrub(d)), value: d }\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tme.$sidebar_list.find('li').removeClass('active');\n\t\t\t$li.addClass('active');\n\n\t\t\tme.make_request($container);\n\t\t});\n\n\t\tthis.timespan_select.on(\"change\", function() {\n\t\t\tme.options.selected_timespan = this.value;\n\t\t\tme.make_request($container);\n\t\t});\n\n\t\tthis.type_select.on(\"change\", function() {\n\t\t\tme.options.selected_filter_item = this.value\n\t\t\tme.make_request($container);\n\t\t});\n\n\t\t// now get leaderboard\n\t\tthis.$sidebar_list.find('li:first').trigger('click');\n\t},\n\n\tmake_request: function ($container) {\n\t\tvar me = this;\n\n\t\tfrappe.model.with_doctype(me.options.selected_doctype, function () {\n\t\t\tme.get_leaderboard(me.get_leaderboard_data, $container);\n\t\t});\n\t},\n\n\tget_leaderboard: function (notify, $container, start=0) {\n\t\tvar me = this;\n\n\t\tfrappe.call({\n\t\t\tmethod: \"erpnext.utilities.page.leaderboard.leaderboard.get_leaderboard\",\n\t\t\targs: {\n\t\t\t\tdoctype: me.options.selected_doctype,\n\t\t\t\ttimespan: me.options.selected_timespan,\n\t\t\t\tfield: me.options.selected_filter_item,\n\t\t\t\tstart: start\n\t\t\t},\n\t\t\tcallback: function (r) {\n\t\t\t\tlet results = r.message || [];\n\n\t\t\t\tlet graph_items = results.slice(0, 10);\n\n\t\t\t\tme.$graph_area.show().empty();\n\t\t\t\tlet args = {\n\t\t\t\t\tparent: me.$graph_area,\n\t\t\t\t\ty: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcolor: 'light-green',\n\t\t\t\t\t\t\tvalues: graph_items.map(d=>d.value),\n\t\t\t\t\t\t\tformatted: graph_items.map(d=>d[me.options.selected_filter_item])\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\tx: {\n\t\t\t\t\t\tvalues: graph_items.map(d=>d.name)\n\t\t\t\t\t},\n\t\t\t\t\tmode: 'bar',\n\t\t\t\t\theight: 140\n\t\t\t\t};\n\t\t\t\tnew frappe.ui.Graph(args);\n\n\t\t\t\tnotify(me, r, $container);\n\t\t\t}\n\t\t});\n\t},\n\n\tget_leaderboard_data: function (me, res, $container) {\n\t\tif (res && res.message) {\n\t\t\tme.message = null;\n\t\t\t$container.find(\".leaderboard-list\").html(me.render_list_view(res.message));\n\t\t} else {\n\t\t\tme.$graph_area.hide();\n\t\t\tme.message = \"No items found.\";\n\t\t\t$container.find(\".leaderboard-list\").html(me.render_list_view());\n\t\t}\n\t},\n\n\trender_list_view: function (items = []) {\n\t\tvar me = this;\n\n\t\tvar html =\n\t\t\t`${me.render_message()}\n\t\t\t <div class=\"result\" style=\"${me.message ? \"display:none;\" : \"\"}\">\n\t\t\t \t${me.render_result(items)}\n\t\t\t </div>`;\n\n\t\treturn $(html);\n\t},\n\n\trender_result: function (items) {\n\t\tvar me = this;\n\n\t\tvar html =\n\t\t\t`${me.render_list_header()}\n\t\t\t${me.render_list_result(items)}`;\n\n\t\treturn html;\n\t},\n\n\trender_list_header: function () {\n\t\tvar me = this;\n\t\tconst _selected_filter = me.options.selected_filter\n\t\t\t.map(i => frappe.model.unscrub(i));\n\t\tconst fields = ['name', me.options.selected_filter_item];\n\n\t\tconst html =\n\t\t\t`<div class=\"list-headers\">\n\t\t\t\t<div class=\"list-item list-item--head\" data-list-renderer=\"${\"List\"}\">\n\t\t\t\t\t${\n\t\t\t\t\tfields.map(filter => {\n\t\t\t\t\t\t\tconst col = frappe.model.unscrub(filter);\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t`<div class=\"leaderboard-item list-item_content ellipsis text-muted list-item__content--flex-2\n\t\t\t\t\t\t\t\t\theader-btn-base\n\t\t\t\t\t\t\t\t\t${(col && _selected_filter.indexOf(col) !== -1) ? \"text-right\" : \"\"}\">\n\t\t\t\t\t\t\t\t\t<span class=\"list-col-title ellipsis\">\n\t\t\t\t\t\t\t\t\t\t${col}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</div>`);\n\t\t\t\t\t\t}).join(\"\")\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>`;\n\t\treturn html;\n\t},\n\n\trender_list_result: function (items) {\n\t\tvar me = this;\n\n\t\tlet _html = items.map((item, index) => {\n\t\t\tconst $value = $(me.get_item_html(item));\n\n\t\t\tlet item_class = \"\";\n\t\t\tif(index == 0) {\n\t\t\t\titem_class = \"first\";\n\t\t\t} else if (index == 1) {\n\t\t\t\titem_class = \"second\";\n\t\t\t} else if(index == 2) {\n\t\t\t\titem_class = \"third\";\n\t\t\t}\n\t\t\tconst $item_container = $(`<div class=\"list-item-container  ${item_class}\">`).append($value);\n\t\t\treturn $item_container[0].outerHTML;\n\t\t}).join(\"\");\n\n\t\tlet html =\n\t\t\t`<div class=\"result-list\">\n\t\t\t\t<div class=\"list-items\">\n\t\t\t\t\t${_html}\n\t\t\t\t</div>\n\t\t\t</div>`;\n\n\t\treturn html;\n\t},\n\n\trender_message: function () {\n\t\tvar me = this;\n\n\t\tlet html =\n\t\t\t`<div class=\"no-result text-center\" style=\"${me.message ? \"\" : \"display:none;\"}\">\n\t\t\t\t<div class=\"msg-box no-border\">\n\t\t\t\t\t<p>No Item found</p>\n\t\t\t\t</div>\n\t\t\t</div>`;\n\n\t\treturn html;\n\t},\n\n\tget_item_html: function (item) {\n\t\tvar me = this;\n\t\tconst _selected_filter = me.options.selected_filter\n\t\t\t.map(i => frappe.model.unscrub(i));\n\t\tconst fields = ['name', me.options.selected_filter_item];\n\n\t\tconst html =\n\t\t\t`<div class=\"list-item\">\n\t\t\t\t${\n\t\t\tfields.map(filter => {\n\t\t\t\t\tconst col = frappe.model.unscrub(filter);\n\t\t\t\t\tlet val = item[filter];\n\t\t\t\t\tif (col === \"Modified\") {\n\t\t\t\t\t\tval = comment_when(val);\n\t\t\t\t\t}\n\t\t\t\t\treturn (\n\t\t\t\t\t\t`<div class=\"list-item_content ellipsis list-item__content--flex-2\n\t\t\t\t\t\t\t${(col !== \"Name\" && col !== \"Modified\") ? \"hidden-xs\" : \"\"}\n\t\t\t\t\t\t\t${(col && _selected_filter.indexOf(col) !== -1) ? \"text-right\" : \"\"}\">\n\t\t\t\t\t\t\t${\n\t\t\t\t\t\t\t\tcol === \"Name\"\n\t\t\t\t\t\t\t\t\t? `<a class=\"grey list-id ellipsis\" href=\"${item[\"href\"]}\"> ${val} </a>`\n\t\t\t\t\t\t\t\t\t: `<span class=\"text-muted ellipsis\"> ${val}</span>`\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>`);\n\t\t\t\t\t}).join(\"\")\n\t\t\t\t}\n\t\t\t</div>`;\n\n\t\treturn html;\n\t},\n\n\tget_sidebar_item: function(item) {\n\t\treturn $(`<li class=\"strong module-sidebar-item\">\n\t\t\t<a class=\"module-link\">\n\t\t\t<span>${ item }</span></a>\n\t\t</li>`);\n\t}\n});\n","title":"Leaderboard","restrict_to_domain":null,"modified":"2017-09-12 14:05:26.422064","content":null,"idx":0,"parenttype":null,"page_name":"leaderboard","docstatus":0,"parentfield":null}]}