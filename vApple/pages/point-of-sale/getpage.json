{"docs":[{"system_page":0,"parent":null,"creation":"2017-08-07 17:08:56.737947","module":"Selling","standard":"Yes","doctype":"Page","owner":"Administrator","icon":null,"style":null,"modified_by":"Administrator","name":"point-of-sale","roles":[{"modified_by":"Administrator","name":null,"parent":"point-of-sale","creation":"2017-08-07 17:08:56.737947","modified":"2017-09-29 01:32:37.070305","doctype":"Has Role","idx":1,"parenttype":"Page","role":"Accounts User","owner":"Administrator","docstatus":0,"parentfield":"roles"},{"modified_by":"Administrator","name":null,"parent":"point-of-sale","creation":"2017-08-07 17:08:56.737947","modified":"2017-09-29 01:32:37.070305","doctype":"Has Role","idx":2,"parenttype":"Page","role":"Accounts Manager","owner":"Administrator","docstatus":0,"parentfield":"roles"},{"modified_by":"Administrator","name":null,"parent":"point-of-sale","creation":"2017-08-07 17:08:56.737947","modified":"2017-09-29 01:32:37.070305","doctype":"Has Role","idx":3,"parenttype":"Page","role":"Sales User","owner":"Administrator","docstatus":0,"parentfield":"roles"},{"modified_by":"Administrator","name":null,"parent":"point-of-sale","creation":"2017-08-07 17:08:56.737947","modified":"2017-09-29 01:32:37.070305","doctype":"Has Role","idx":4,"parenttype":"Page","role":"Sales Manager","owner":"Administrator","docstatus":0,"parentfield":"roles"}],"script":"/* global Clusterize */\nfrappe.provide('erpnext.pos');\n\nfrappe.pages['point-of-sale'].on_page_load = function(wrapper) {\n\tfrappe.ui.make_app_page({\n\t\tparent: wrapper,\n\t\ttitle: 'Point of Sale',\n\t\tsingle_column: true\n\t});\n\n\tfrappe.db.get_value('POS Settings', {name: 'POS Settings'}, 'is_online', (r) => {\n\t\tif (r && r.use_pos_in_offline_mode && !cint(r.use_pos_in_offline_mode)) {\n\t\t\t// online\n\t\t\twrapper.pos = new erpnext.pos.PointOfSale(wrapper);\n\t\t\twindow.cur_pos = wrapper.pos;\n\t\t} else {\n\t\t\t// offline\n\t\t\tfrappe.set_route('pos');\n\t\t}\n\t});\n};\n\nfrappe.pages['point-of-sale'].refresh = function(wrapper) {\n\tif (wrapper.pos) {\n\t\tcur_frm = wrapper.pos.frm;\n\t}\n}\n\nerpnext.pos.PointOfSale = class PointOfSale {\n\tconstructor(wrapper) {\n\t\tthis.wrapper = $(wrapper).find('.layout-main-section');\n\t\tthis.page = wrapper.page;\n\n\t\tconst assets = [\n\t\t\t'assets/erpnext/js/pos/clusterize.js',\n\t\t\t'assets/erpnext/css/pos.css'\n\t\t];\n\n\t\tfrappe.require(assets, () => {\n\t\t\tthis.make();\n\t\t});\n\t}\n\n\tmake() {\n\t\treturn frappe.run_serially([\n\t\t\t() => {\n\t\t\t\tthis.prepare_dom();\n\t\t\t\tthis.prepare_menu();\n\t\t\t\tthis.set_online_status();\n\t\t\t},\n\t\t\t() => this.setup_pos_profile(),\n\t\t\t() => {\n\t\t\t\tthis.make_items();\n\t\t\t\tthis.bind_events();\n\t\t\t},\n\t\t\t() => this.make_new_invoice(),\n\t\t\t() => this.page.set_title(__('Point of Sale'))\n\t\t]);\n\t}\n\n\tset_online_status() {\n\t\tthis.connection_status = false;\n\t\tthis.page.set_indicator(__(\"Offline\"), \"grey\");\n\t\tfrappe.call({\n\t\t\tmethod: \"frappe.handler.ping\",\n\t\t\tcallback: r => {\n\t\t\t\tif (r.message) {\n\t\t\t\t\tthis.connection_status = true;\n\t\t\t\t\tthis.page.set_indicator(__(\"Online\"), \"green\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprepare_dom() {\n\t\tthis.wrapper.append(`\n\t\t\t<div class=\"pos\">\n\t\t\t\t<section class=\"cart-container\">\n\n\t\t\t\t</section>\n\t\t\t\t<section class=\"item-container\">\n\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t`);\n\t}\n\n\tmake_cart() {\n\t\tthis.cart = new POSCart({\n\t\t\tfrm: this.frm,\n\t\t\twrapper: this.wrapper.find('.cart-container'),\n\t\t\tevents: {\n\t\t\t\ton_customer_change: (customer) => this.frm.set_value('customer', customer),\n\t\t\t\ton_field_change: (item_code, field, value) => {\n\t\t\t\t\tthis.update_item_in_cart(item_code, field, value);\n\t\t\t\t},\n\t\t\t\ton_numpad: (value) => {\n\t\t\t\t\tif (value == 'Pay') {\n\t\t\t\t\t\tif (!this.payment) {\n\t\t\t\t\t\t\tthis.make_payment_modal();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.payment.open_modal();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ton_select_change: () => {\n\t\t\t\t\tthis.cart.numpad.set_inactive();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\ttoggle_editing(flag) {\n\t\tlet disabled;\n\t\tif (flag !== undefined) {\n\t\t\tdisabled = !flag;\n\t\t} else {\n\t\t\tdisabled = this.frm.doc.docstatus == 1 ? true: false;\n\t\t}\n\t\tconst pointer_events = disabled ? 'none' : 'inherit';\n\n\t\tthis.wrapper.find('input, button, select').prop(\"disabled\", disabled);\n\t\tthis.wrapper.find('.number-pad-container').toggleClass(\"hide\", disabled);\n\n\t\tthis.wrapper.find('.cart-container').css('pointer-events', pointer_events);\n\t\tthis.wrapper.find('.item-container').css('pointer-events', pointer_events);\n\n\t\tthis.page.clear_actions();\n\t}\n\n\tmake_items() {\n\t\tthis.items = new POSItems({\n\t\t\twrapper: this.wrapper.find('.item-container'),\n\t\t\tpos_profile: this.pos_profile,\n\t\t\tevents: {\n\t\t\t\tupdate_cart: (item, field, value) => {\n\t\t\t\t\tif(!this.frm.doc.customer) {\n\t\t\t\t\t\tfrappe.throw(__('Please select a customer'));\n\t\t\t\t\t}\n\t\t\t\t\tthis.update_item_in_cart(item, field, value);\n\t\t\t\t\tthis.cart && this.cart.unselect_all();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tupdate_item_in_cart(item_code, field='qty', value=1) {\n\t\tif(this.cart.exists(item_code)) {\n\t\t\tconst item = this.frm.doc.items.find(i => i.item_code === item_code);\n\t\t\tfrappe.flags.hide_serial_batch_dialog = false;\n\n\t\t\tif (typeof value === 'string' && !in_list(['serial_no', 'batch_no'], field)) {\n\t\t\t\t// value can be of type '+1' or '-1'\n\t\t\t\tvalue = item[field] + flt(value);\n\t\t\t}\n\n\t\t\tif(field === 'serial_no') {\n\t\t\t\tvalue = item.serial_no + '\\n'+ value;\n\t\t\t}\n\n\t\t\tif(field === 'qty' && (item.serial_no || item.batch_no)) {\n\t\t\t\tthis.select_batch_and_serial_no(item);\n\t\t\t} else {\n\t\t\t\tthis.update_item_in_frm(item, field, value)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t// update cart\n\t\t\t\t\t\tthis.update_cart_data(item);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tlet args = { item_code: item_code };\n\t\tif (in_list(['serial_no', 'batch_no'], field)) {\n\t\t\targs[field] = value;\n\t\t}\n\n\t\t// add to cur_frm\n\t\tconst item = this.frm.add_child('items', args);\n\t\tfrappe.flags.hide_serial_batch_dialog = true;\n\t\tthis.frm.script_manager\n\t\t\t.trigger('item_code', item.doctype, item.name)\n\t\t\t.then(() => {\n\t\t\t\tconst show_dialog = item.has_serial_no || item.has_batch_no;\n\t\t\t\tif (show_dialog && field == 'qty') {\n\t\t\t\t\t// check has serial no/batch no and update cart\n\t\t\t\t\tthis.select_batch_and_serial_no(item);\n\t\t\t\t} else {\n\t\t\t\t\t// update cart\n\t\t\t\t\tthis.update_cart_data(item);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tselect_batch_and_serial_no(item) {\n\t\terpnext.show_serial_batch_selector(this.frm, item, () => {\n\t\t\tthis.update_item_in_frm(item)\n\t\t\t\t.then(() => {\n\t\t\t\t\t// update cart\n\t\t\t\t\tthis.update_cart_data(item);\n\t\t\t\t});\n\t\t}, true);\n\t}\n\n\tupdate_cart_data(item) {\n\t\tthis.cart.add_item(item);\n\t\tthis.cart.update_taxes_and_totals();\n\t\tthis.cart.update_grand_total();\n\t}\n\n\tupdate_item_in_frm(item, field, value) {\n\t\tif (field) {\n\t\t\tfrappe.model.set_value(item.doctype, item.name, field, value);\n\t\t}\n\n\t\treturn this.frm.script_manager\n\t\t\t.trigger('qty', item.doctype, item.name)\n\t\t\t.then(() => {\n\t\t\t\tif (field === 'qty' && value === 0) {\n\t\t\t\t\tfrappe.model.clear_doc(item.doctype, item.name);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tmake_payment_modal() {\n\t\tthis.payment = new Payment({\n\t\t\tfrm: this.frm,\n\t\t\tevents: {\n\t\t\t\tsubmit_form: () => {\n\t\t\t\t\tthis.submit_sales_invoice();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tsubmit_sales_invoice() {\n\n\t\tfrappe.confirm(__(\"Permanently Submit {0}?\", [this.frm.doc.name]), () => {\n\t\t\tfrappe.call({\n\t\t\t\tmethod: 'erpnext.selling.page.point_of_sale.point_of_sale.submit_invoice',\n\t\t\t\tfreeze: true,\n\t\t\t\targs: {\n\t\t\t\t\tdoc: this.frm.doc\n\t\t\t\t}\n\t\t\t}).then(r => {\n\t\t\t\tif(r.message) {\n\t\t\t\t\tthis.frm.doc = r.message;\n\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\tindicator: 'green',\n\t\t\t\t\t\tmessage: __(`Sales invoice ${r.message.name} created succesfully`)\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.toggle_editing();\n\t\t\t\t\tthis.set_form_action();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tbind_events() {\n\n\t}\n\n\tsetup_pos_profile() {\n\t\treturn frappe.call({\n\t\t\tmethod: 'erpnext.stock.get_item_details.get_pos_profile',\n\t\t\targs: {\n\t\t\t\tcompany: frappe.sys_defaults.company\n\t\t\t}\n\t\t}).then(r => {\n\t\t\tthis.pos_profile = r.message;\n\n\t\t\tif (!this.pos_profile) {\n\t\t\t\tthis.pos_profile = {\n\t\t\t\t\tcurrency: frappe.defaults.get_default('currency'),\n\t\t\t\t\tselling_price_list: frappe.defaults.get_default('selling_price_list')\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t}\n\n\tmake_new_invoice() {\n\t\treturn frappe.run_serially([\n\t\t\t() => this.make_sales_invoice_frm(),\n\t\t\t() => {\n\t\t\t\tif (this.cart) {\n\t\t\t\t\tthis.cart.frm = this.frm;\n\t\t\t\t\tthis.cart.reset();\n\t\t\t\t} else {\n\t\t\t\t\tthis.make_cart();\n\t\t\t\t}\n\t\t\t\tthis.toggle_editing(true);\n\t\t\t}\n\t\t]);\n\t}\n\n\tmake_sales_invoice_frm() {\n\t\tconst doctype = 'Sales Invoice';\n\t\treturn new Promise(resolve => {\n\t\t\tif (this.frm) {\n\t\t\t\tthis.frm = get_frm(this.frm);\n\t\t\t\tresolve();\n\t\t\t} else {\n\t\t\t\tfrappe.model.with_doctype(doctype, () => {\n\t\t\t\t\tthis.frm = get_frm();\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tfunction get_frm(_frm) {\n\t\t\tconst page = $('<div>');\n\t\t\tconst frm = _frm || new _f.Frm(doctype, page, false);\n\t\t\tconst name = frappe.model.make_new_doc_and_get_name(doctype, true);\n\t\t\tfrm.refresh(name);\n\t\t\tfrm.doc.items = [];\n\t\t\tfrm.set_value('is_pos', 1);\n\t\t\tfrm.meta.default_print_format = 'POS Invoice';\n\t\t\treturn frm;\n\t\t}\n\t}\n\n\tprepare_menu() {\n\t\tvar me = this;\n\t\tthis.page.clear_menu();\n\n\t\t// for mobile\n\t\t// this.page.add_menu_item(__(\"Pay\"), function () {\n\t\t//\n\t\t// }).addClass('visible-xs');\n\n\t\tthis.page.add_menu_item(__(\"Form View\"), function () {\n\t\t\tfrappe.model.sync(me.frm.doc);\n\t\t\tfrappe.set_route(\"Form\", me.frm.doc.doctype, me.frm.doc.name);\n\t\t});\n\n\t\tthis.page.add_menu_item(__(\"POS Profile\"), function () {\n\t\t\tfrappe.set_route('List', 'POS Profile');\n\t\t});\n\n\t\tthis.page.add_menu_item(__('POS Settings'), function() {\n\t\t\tfrappe.set_route('Form', 'POS Settings');\n\t\t});\n\t}\n\n\tset_form_action() {\n\t\tif(this.frm.doc.docstatus !== 1) return;\n\n\t\tthis.page.set_secondary_action(__(\"Print\"), () => {\n\t\t\tif (this.pos_profile && this.pos_profile.print_format_for_online) {\n\t\t\t\tthis.frm.meta.default_print_format = this.pos_profile.print_format_for_online;\n\t\t\t}\n\t\t\tthis.frm.print_preview.printit(true);\n\t\t});\n\n\t\tthis.page.set_primary_action(__(\"New\"), () => {\n\t\t\tthis.make_new_invoice();\n\t\t});\n\n\t\tthis.page.add_menu_item(__(\"Email\"), () => {\n\t\t\tthis.frm.email_doc();\n\t\t});\n\t}\n};\n\nclass POSCart {\n\tconstructor({frm, wrapper, events}) {\n\t\tthis.frm = frm;\n\t\tthis.wrapper = wrapper;\n\t\tthis.events = events;\n\t\tthis.make();\n\t\tthis.bind_events();\n\t}\n\n\tmake() {\n\t\tthis.make_dom();\n\t\tthis.make_customer_field();\n\t\tthis.make_numpad();\n\t}\n\n\tmake_dom() {\n\t\tthis.wrapper.append(`\n\t\t\t<div class=\"pos-cart\">\n\t\t\t\t<div class=\"customer-field\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"cart-wrapper\">\n\t\t\t\t\t<div class=\"list-item-table\">\n\t\t\t\t\t\t<div class=\"list-item list-item--head\">\n\t\t\t\t\t\t\t<div class=\"list-item__content list-item__content--flex-1.5 text-muted\">${__('Item Name')}</div>\n\t\t\t\t\t\t\t<div class=\"list-item__content text-muted text-right\">${__('Quantity')}</div>\n\t\t\t\t\t\t\t<div class=\"list-item__content text-muted text-right\">${__('Discount')}</div>\n\t\t\t\t\t\t\t<div class=\"list-item__content text-muted text-right\">${__('Rate')}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"cart-items\">\n\t\t\t\t\t\t\t<div class=\"empty-state\">\n\t\t\t\t\t\t\t\t<span>No Items added to cart</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"taxes-and-totals\">\n\t\t\t\t\t\t\t${this.get_taxes_and_totals()}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"discount-amount\">\n\t\t\t\t\t\t\t${this.get_discount_amount()}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"grand-total\">\n\t\t\t\t\t\t\t${this.get_grand_total()}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"number-pad-container\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`);\n\t\tthis.$cart_items = this.wrapper.find('.cart-items');\n\t\tthis.$empty_state = this.wrapper.find('.cart-items .empty-state');\n\t\tthis.$taxes_and_totals = this.wrapper.find('.taxes-and-totals');\n\t\tthis.$discount_amount = this.wrapper.find('.discount-amount');\n\t\tthis.$grand_total = this.wrapper.find('.grand-total');\n\n\t\tthis.toggle_taxes_and_totals(false);\n\t\tthis.$grand_total.on('click', () => {\n\t\t\tthis.toggle_taxes_and_totals();\n\t\t});\n\t}\n\n\treset() {\n\t\tthis.$cart_items.find('.list-item').remove();\n\t\tthis.$empty_state.show();\n\t\tthis.$taxes_and_totals.html(this.get_taxes_and_totals());\n\t\tthis.numpad && this.numpad.reset_value();\n\t\tthis.customer_field.set_value(\"\");\n\t}\n\n\tget_grand_total() {\n\t\treturn `\n\t\t\t<div class=\"list-item\">\n\t\t\t\t<div class=\"list-item__content text-muted\">${__('Grand Total')}</div>\n\t\t\t\t<div class=\"list-item__content list-item__content--flex-2 grand-total-value\">0.00</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_discount_amount() {\n\t\tconst get_currency_symbol = window.get_currency_symbol;\n\n\t\treturn `\n\t\t\t<div class=\"list-item\">\n\t\t\t\t<div class=\"list-item__content list-item__content--flex-2 text-muted\">${__('Discount')}</div>\n\t\t\t\t<div class=\"list-item__content discount-inputs\">\n\t\t\t\t\t<input type=\"text\"\n\t\t\t\t\t\tclass=\"form-control additional_discount_percentage text-right\"\n\t\t\t\t\t\tplaceholder=\"% 0.00\"\n\t\t\t\t\t>\n\t\t\t\t\t<input type=\"text\"\n\t\t\t\t\t\tclass=\"form-control discount_amount text-right\"\n\t\t\t\t\t\tplaceholder=\"${get_currency_symbol(this.frm.doc.currency)} 0.00\"\n\t\t\t\t\t>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_taxes_and_totals() {\n\t\treturn `\n\t\t\t<div class=\"list-item\">\n\t\t\t\t<div class=\"list-item__content list-item__content--flex-2 text-muted\">${__('Net Total')}</div>\n\t\t\t\t<div class=\"list-item__content net-total\">0.00</div>\n\t\t\t</div>\n\t\t\t<div class=\"list-item\">\n\t\t\t\t<div class=\"list-item__content list-item__content--flex-2 text-muted\">${__('Taxes')}</div>\n\t\t\t\t<div class=\"list-item__content taxes\">0.00</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\ttoggle_taxes_and_totals(flag) {\n\t\tif (flag !== undefined) {\n\t\t\tthis.tax_area_is_shown = flag;\n\t\t} else {\n\t\t\tthis.tax_area_is_shown = !this.tax_area_is_shown;\n\t\t}\n\n\t\tthis.$taxes_and_totals.toggle(this.tax_area_is_shown);\n\t\tthis.$discount_amount.toggle(this.tax_area_is_shown);\n\t}\n\n\tupdate_taxes_and_totals() {\n\t\tif (!this.frm.doc.taxes) { return; }\n\n\t\tconst currency = this.frm.doc.currency;\n\t\tthis.frm.refresh_field('taxes');\n\n\t\t// Update totals\n\t\tthis.$taxes_and_totals.find('.net-total')\n\t\t\t.html(format_currency(this.frm.doc.net_total, currency));\n\n\t\t// Update taxes\n\t\tconst taxes_html = this.frm.doc.taxes.map(tax => {\n\t\t\treturn `\n\t\t\t\t<div>\n\t\t\t\t\t<span>${tax.description}</span>\n\t\t\t\t\t<span class=\"text-right bold\">\n\t\t\t\t\t\t${format_currency(tax.tax_amount, currency)}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}).join(\"\");\n\t\tthis.$taxes_and_totals.find('.taxes').html(taxes_html);\n\t}\n\n\tupdate_grand_total() {\n\t\tthis.$grand_total.find('.grand-total-value').text(\n\t\t\tformat_currency(this.frm.doc.grand_total, this.frm.currency)\n\t\t);\n\t}\n\n\tmake_customer_field() {\n\t\tthis.customer_field = frappe.ui.form.make_control({\n\t\t\tdf: {\n\t\t\t\tfieldtype: 'Link',\n\t\t\t\tlabel: 'Customer',\n\t\t\t\tfieldname: 'customer',\n\t\t\t\toptions: 'Customer',\n\t\t\t\treqd: 1,\n\t\t\t\tdefault: this.frm.doc.customer,\n\t\t\t\tonchange: () => {\n\t\t\t\t\tthis.events.on_customer_change(this.customer_field.get_value());\n\t\t\t\t}\n\t\t\t},\n\t\t\tparent: this.wrapper.find('.customer-field'),\n\t\t\trender_input: true\n\t\t});\n\t}\n\n\tmake_numpad() {\n\t\tthis.numpad = new NumberPad({\n\t\t\tbutton_array: [\n\t\t\t\t[1, 2, 3, 'Qty'],\n\t\t\t\t[4, 5, 6, 'Disc'],\n\t\t\t\t[7, 8, 9, 'Rate'],\n\t\t\t\t['Del', 0, '.', 'Pay']\n\t\t\t],\n\t\t\tadd_class: {\n\t\t\t\t'Pay': 'brand-primary'\n\t\t\t},\n\t\t\tdisable_highlight: ['Qty', 'Disc', 'Rate', 'Pay'],\n\t\t\treset_btns: ['Qty', 'Disc', 'Rate', 'Pay'],\n\t\t\tdel_btn: 'Del',\n\t\t\twrapper: this.wrapper.find('.number-pad-container'),\n\t\t\tonclick: (btn_value) => {\n\t\t\t\t// on click\n\t\t\t\tif (!this.selected_item && btn_value !== 'Pay') {\n\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\tindicator: 'red',\n\t\t\t\t\t\tmessage: __('Please select an item in the cart')\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (['Qty', 'Disc', 'Rate'].includes(btn_value)) {\n\t\t\t\t\tthis.set_input_active(btn_value);\n\t\t\t\t} else if (btn_value !== 'Pay') {\n\t\t\t\t\tif (!this.selected_item.active_field) {\n\t\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\t\tindicator: 'red',\n\t\t\t\t\t\t\tmessage: __('Please select a field to edit from numpad')\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst item_code = this.selected_item.attr('data-item-code');\n\t\t\t\t\tconst field = this.selected_item.active_field;\n\t\t\t\t\tconst value = this.numpad.get_value();\n\n\t\t\t\t\tthis.events.on_field_change(item_code, field, value);\n\t\t\t\t}\n\n\t\t\t\tthis.events.on_numpad(btn_value);\n\t\t\t}\n\t\t});\n\t}\n\n\tset_input_active(btn_value) {\n\t\tthis.selected_item.removeClass('qty disc rate');\n\n\t\tthis.numpad.set_active(btn_value);\n\t\tif (btn_value === 'Qty') {\n\t\t\tthis.selected_item.addClass('qty');\n\t\t\tthis.selected_item.active_field = 'qty';\n\t\t} else if (btn_value == 'Disc') {\n\t\t\tthis.selected_item.addClass('disc');\n\t\t\tthis.selected_item.active_field = 'discount_percentage';\n\t\t} else if (btn_value == 'Rate') {\n\t\t\tthis.selected_item.addClass('rate');\n\t\t\tthis.selected_item.active_field = 'rate';\n\t\t}\n\t}\n\n\tadd_item(item) {\n\t\tthis.$empty_state.hide();\n\n\t\tif (this.exists(item.item_code)) {\n\t\t\t// update quantity\n\t\t\tthis.update_item(item);\n\t\t} else {\n\t\t\t// add to cart\n\t\t\tconst $item = $(this.get_item_html(item));\n\t\t\t$item.appendTo(this.$cart_items);\n\t\t}\n\t\tthis.highlight_item(item.item_code);\n\t\tthis.scroll_to_item(item.item_code);\n\t}\n\n\tupdate_item(item) {\n\t\tconst $item = this.$cart_items.find(`[data-item-code=\"${item.item_code}\"]`);\n\n\t\tif(item.qty > 0) {\n\t\t\tconst indicator_class = item.actual_qty >= item.qty ? 'green' : 'red';\n\t\t\tconst remove_class = indicator_class == 'green' ? 'red' : 'green';\n\n\t\t\t$item.find('.quantity input').val(item.qty);\n\t\t\t$item.find('.discount').text(item.discount_percentage + '%');\n\t\t\t$item.find('.rate').text(format_currency(item.rate, this.frm.doc.currency));\n\t\t\t$item.addClass(indicator_class);\n\t\t\t$item.removeClass(remove_class);\n\t\t} else {\n\t\t\t$item.remove();\n\t\t}\n\t}\n\n\tget_item_html(item) {\n\t\tconst rate = format_currency(item.rate, this.frm.doc.currency);\n\t\tconst indicator_class = item.actual_qty >= item.qty ? 'green' : 'red';\n\t\treturn `\n\t\t\t<div class=\"list-item indicator ${indicator_class}\" data-item-code=\"${item.item_code}\" title=\"Item: ${item.item_name}  Available Qty: ${item.actual_qty}\">\n\t\t\t\t<div class=\"item-name list-item__content list-item__content--flex-1.5 ellipsis\">\n\t\t\t\t\t${item.item_name}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"quantity list-item__content text-right\">\n\t\t\t\t\t${get_quantity_html(item.qty)}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"discount list-item__content text-right\">\n\t\t\t\t\t${item.discount_percentage}%\n\t\t\t\t</div>\n\t\t\t\t<div class=\"rate list-item__content text-right\">\n\t\t\t\t\t${rate}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\tfunction get_quantity_html(value) {\n\t\t\treturn `\n\t\t\t\t<div class=\"input-group input-group-xs\">\n\t\t\t\t\t<span class=\"input-group-btn\">\n\t\t\t\t\t\t<button class=\"btn btn-default btn-xs\" data-action=\"increment\">+</button>\n\t\t\t\t\t</span>\n\n\t\t\t\t\t<input class=\"form-control\" type=\"number\" value=\"${value}\">\n\n\t\t\t\t\t<span class=\"input-group-btn\">\n\t\t\t\t\t\t<button class=\"btn btn-default btn-xs\" data-action=\"decrement\">-</button>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\t}\n\n\texists(item_code) {\n\t\tlet $item = this.$cart_items.find(`[data-item-code=\"${item_code}\"]`);\n\t\treturn $item.length > 0;\n\t}\n\n\thighlight_item(item_code) {\n\t\tconst $item = this.$cart_items.find(`[data-item-code=\"${item_code}\"]`);\n\t\t$item.addClass('highlight');\n\t\tsetTimeout(() => $item.removeClass('highlight'), 1000);\n\t}\n\n\tscroll_to_item(item_code) {\n\t\tconst $item = this.$cart_items.find(`[data-item-code=\"${item_code}\"]`);\n\t\tif ($item.length === 0) return;\n\t\tconst scrollTop = $item.offset().top - this.$cart_items.offset().top + this.$cart_items.scrollTop();\n\t\tthis.$cart_items.animate({ scrollTop });\n\t}\n\n\tbind_events() {\n\t\tconst me = this;\n\t\tconst events = this.events;\n\n\t\t// quantity change\n\t\tthis.$cart_items.on('click',\n\t\t\t'[data-action=\"increment\"], [data-action=\"decrement\"]', function() {\n\t\t\t\tconst $btn = $(this);\n\t\t\t\tconst $item = $btn.closest('.list-item[data-item-code]');\n\t\t\t\tconst item_code = $item.attr('data-item-code');\n\t\t\t\tconst action = $btn.attr('data-action');\n\n\t\t\t\tif(action === 'increment') {\n\t\t\t\t\tevents.on_field_change(item_code, 'qty', '+1');\n\t\t\t\t} else if(action === 'decrement') {\n\t\t\t\t\tevents.on_field_change(item_code, 'qty', '-1');\n\t\t\t\t}\n\t\t\t});\n\n\t\t// this.$cart_items.on('focus', '.quantity input', function(e) {\n\t\t// \tconst $input = $(this);\n\t\t// \tconst $item = $input.closest('.list-item[data-item-code]');\n\t\t// \tme.set_selected_item($item);\n\t\t// \tme.set_input_active('Qty');\n\t\t// \te.preventDefault();\n\t\t// \te.stopPropagation();\n\t\t// \treturn false;\n\t\t// });\n\n\t\tthis.$cart_items.on('change', '.quantity input', function() {\n\t\t\tconst $input = $(this);\n\t\t\tconst $item = $input.closest('.list-item[data-item-code]');\n\t\t\tconst item_code = $item.attr('data-item-code');\n\t\t\tevents.on_field_change(item_code, 'qty', flt($input.val()));\n\t\t});\n\n\t\t// current item\n\t\tthis.$cart_items.on('click', '.list-item', function() {\n\t\t\tme.set_selected_item($(this));\n\t\t});\n\n\t\t// disable current item\n\t\t// $('body').on('click', function(e) {\n\t\t// \tconsole.log(e);\n\t\t// \tif($(e.target).is('.list-item')) {\n\t\t// \t\treturn;\n\t\t// \t}\n\t\t// \tme.$cart_items.find('.list-item').removeClass('current-item qty disc rate');\n\t\t// \tme.selected_item = null;\n\t\t// });\n\n\t\tthis.wrapper.find('.additional_discount_percentage').on('change', (e) => {\n\t\t\tfrappe.model.set_value(this.frm.doctype, this.frm.docname,\n\t\t\t\t'additional_discount_percentage', e.target.value)\n\t\t\t\t.then(() => {\n\t\t\t\t\tlet discount_wrapper = this.wrapper.find('.discount_amount');\n\t\t\t\t\tdiscount_wrapper.val(this.frm.doc.discount_amount);\n\t\t\t\t\tdiscount_wrapper.trigger('change');\n\t\t\t\t});\n\t\t});\n\n\t\tthis.wrapper.find('.discount_amount').on('change', (e) => {\n\t\t\tfrappe.model.set_value(this.frm.doctype, this.frm.docname,\n\t\t\t\t'discount_amount', flt(e.target.value));\n\t\t\tthis.frm.trigger('discount_amount')\n\t\t\t\t.then(() => {\n\t\t\t\t\tlet discount_wrapper = this.wrapper.find('.additional_discount_percentage');\n\t\t\t\t\tdiscount_wrapper.val(this.frm.doc.additional_discount_percentage);\n\t\t\t\t\tthis.update_taxes_and_totals();\n\t\t\t\t\tthis.update_grand_total();\n\t\t\t\t});\n\t\t});\n\t}\n\n\tset_selected_item($item) {\n\t\tthis.selected_item = $item;\n\t\tthis.$cart_items.find('.list-item').removeClass('current-item qty disc rate');\n\t\tthis.selected_item.addClass('current-item');\n\t\tthis.events.on_select_change();\n\t}\n\n\tunselect_all() {\n\t\tthis.$cart_items.find('.list-item').removeClass('current-item qty disc rate');\n\t\tthis.selected_item = null;\n\t\tthis.events.on_select_change();\n\t}\n}\n\nclass POSItems {\n\tconstructor({wrapper, pos_profile, events}) {\n\t\tthis.wrapper = wrapper;\n\t\tthis.pos_profile = pos_profile;\n\t\tthis.items = {};\n\t\tthis.events = events;\n\t\tthis.currency = this.pos_profile.currency;\n\n\t\tthis.make_dom();\n\t\tthis.make_fields();\n\n\t\tthis.init_clusterize();\n\t\tthis.bind_events();\n\n\t\t// bootstrap with 20 items\n\t\tthis.get_items()\n\t\t\t.then(({ items }) => {\n\t\t\t\tthis.all_items = items;\n\t\t\t\tthis.items = items;\n\t\t\t\tthis.render_items(items);\n\t\t\t});\n\t}\n\n\tmake_dom() {\n\t\tthis.wrapper.html(`\n\t\t\t<div class=\"fields\">\n\t\t\t\t<div class=\"search-field\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"item-group-field\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"items-wrapper\">\n\t\t\t</div>\n\t\t`);\n\n\t\tthis.items_wrapper = this.wrapper.find('.items-wrapper');\n\t\tthis.items_wrapper.append(`\n\t\t\t<div class=\"list-item-table pos-items-wrapper\">\n\t\t\t\t<div class=\"pos-items image-view-container\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`);\n\t}\n\n\tmake_fields() {\n\t\t// Search field\n\t\tthis.search_field = frappe.ui.form.make_control({\n\t\t\tdf: {\n\t\t\t\tfieldtype: 'Data',\n\t\t\t\tlabel: 'Search Item (Ctrl + I)',\n\t\t\t\tplaceholder: 'Search by item code, serial number, batch no or barcode'\n\t\t\t},\n\t\t\tparent: this.wrapper.find('.search-field'),\n\t\t\trender_input: true,\n\t\t});\n\n\t\tfrappe.ui.keys.on('ctrl+i', () => {\n\t\t\tthis.search_field.set_focus();\n\t\t});\n\n\t\tthis.search_field.$input.on('input', (e) => {\n\t\t\tclearTimeout(this.last_search);\n\t\t\tthis.last_search = setTimeout(() => {\n\t\t\t\tconst search_term = e.target.value;\n\t\t\t\tthis.filter_items({ search_term });\n\t\t\t}, 300);\n\t\t});\n\n\t\tthis.item_group_field = frappe.ui.form.make_control({\n\t\t\tdf: {\n\t\t\t\tfieldtype: 'Link',\n\t\t\t\tlabel: 'Item Group',\n\t\t\t\toptions: 'Item Group',\n\t\t\t\tdefault: 'All Item Groups',\n\t\t\t\tonchange: () => {\n\t\t\t\t\tconst item_group = this.item_group_field.get_value();\n\t\t\t\t\tif (item_group) {\n\t\t\t\t\t\tthis.filter_items({ item_group: item_group });\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t\tparent: this.wrapper.find('.item-group-field'),\n\t\t\trender_input: true\n\t\t});\n\t}\n\n\tinit_clusterize() {\n\t\tthis.clusterize = new Clusterize({\n\t\t\tscrollElem: this.wrapper.find('.pos-items-wrapper')[0],\n\t\t\tcontentElem: this.wrapper.find('.pos-items')[0],\n\t\t\trows_in_block: 6\n\t\t});\n\t}\n\n\trender_items(items) {\n\t\tlet _items = items || this.items;\n\n\t\tconst all_items = Object.values(_items).map(item => this.get_item_html(item));\n\t\tlet row_items = [];\n\n\t\tconst row_container = '<div style=\"display: flex; border-bottom: 1px solid #ebeff2\">';\n\t\tlet curr_row = row_container;\n\n\t\tfor (let i=0; i < all_items.length; i++) {\n\t\t\t// wrap 4 items in a div to emulate\n\t\t\t// a row for clusterize\n\t\t\tif(i % 4 === 0 && i !== 0) {\n\t\t\t\tcurr_row += '</div>';\n\t\t\t\trow_items.push(curr_row);\n\t\t\t\tcurr_row = row_container;\n\t\t\t}\n\t\t\tcurr_row += all_items[i];\n\n\t\t\tif(i == all_items.length - 1 && all_items.length % 4 !== 0) {\n\t\t\t\trow_items.push(curr_row);\n\t\t\t}\n\t\t}\n\n\t\tthis.clusterize.update(row_items);\n\t}\n\n\tfilter_items({ search_term='', item_group='All Item Groups' }={}) {\n\t\tif (search_term) {\n\t\t\tsearch_term = search_term.toLowerCase();\n\n\t\t\t// memoize\n\t\t\tthis.search_index = this.search_index || {};\n\t\t\tif (this.search_index[search_term]) {\n\t\t\t\tconst items = this.search_index[search_term];\n\t\t\t\tthis.render_items(items);\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (item_group == \"All Item Groups\") {\n\t\t\treturn this.render_items(this.all_items);\n\t\t}\n\n\t\tthis.get_items({search_value: search_term, item_group })\n\t\t\t.then(({ items, serial_no, batch_no }) => {\n\t\t\t\tif (search_term) {\n\t\t\t\t\tthis.search_index[search_term] = items;\n\t\t\t\t}\n\n\t\t\t\tthis.render_items(items);\n\t\t\t\tif(serial_no) {\n\t\t\t\t\tthis.events.update_cart(items[0].item_code,\n\t\t\t\t\t\t'serial_no', serial_no);\n\t\t\t\t\tthis.search_field.set_value('');\n\t\t\t\t}\n\t\t\t\tif(batch_no) {\n\t\t\t\t\tthis.events.update_cart(items[0].item_code,\n\t\t\t\t\t\t'batch_no', serial_no);\n\t\t\t\t\tthis.search_field.set_value('');\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tbind_events() {\n\t\tvar me = this;\n\t\tthis.wrapper.on('click', '.pos-item-wrapper', function() {\n\t\t\tconst $item = $(this);\n\t\t\tconst item_code = $item.attr('data-item-code');\n\t\t\tme.events.update_cart(item_code, 'qty', '+1');\n\t\t});\n\t}\n\n\tget(item_code) {\n\t\treturn this.items[item_code];\n\t}\n\n\tget_all() {\n\t\treturn this.items;\n\t}\n\n\tget_item_html(item) {\n\t\tconst price_list_rate = format_currency(item.price_list_rate, this.currency);\n\t\tconst { item_code, item_name, item_image} = item;\n\t\tconst item_title = item_name || item_code;\n\n\t\tconst template = `\n\t\t\t<div class=\"pos-item-wrapper image-view-item\" data-item-code=\"${item_code}\">\n\t\t\t\t<div class=\"image-view-header\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<a class=\"grey list-id\" data-name=\"${item_code}\" title=\"${item_title}\">\n\t\t\t\t\t\t\t${item_title}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"image-view-body\">\n\t\t\t\t\t<a\tdata-item-code=\"${item_code}\"\n\t\t\t\t\t\ttitle=\"${item_title}\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div class=\"image-field\"\n\t\t\t\t\t\t\tstyle=\"${!item_image ? 'background-color: #fafbfc;' : ''} border: 0px;\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t${!item_image ? `<span class=\"placeholder-text\">\n\t\t\t\t\t\t\t\t\t${frappe.get_abbr(item_title)}\n\t\t\t\t\t\t\t\t</span>` : '' }\n\t\t\t\t\t\t\t${item_image ? `<img src=\"${item_image}\" alt=\"${item_title}\">` : '' }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<span class=\"price-info\">\n\t\t\t\t\t\t\t${price_list_rate}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\n\t\treturn template;\n\t}\n\n\tget_items({start = 0, page_length = 40, search_value='', item_group=\"All Item Groups\"}={}) {\n\t\treturn new Promise(res => {\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"erpnext.selling.page.point_of_sale.point_of_sale.get_items\",\n\t\t\t\targs: {\n\t\t\t\t\tstart,\n\t\t\t\t\tpage_length,\n\t\t\t\t\t'price_list': this.pos_profile.selling_price_list,\n\t\t\t\t\titem_group,\n\t\t\t\t\tsearch_value\n\t\t\t\t}\n\t\t\t}).then(r => {\n\t\t\t\t// const { items, serial_no, batch_no } = r.message;\n\n\t\t\t\t// this.serial_no = serial_no || \"\";\n\t\t\t\tres(r.message);\n\t\t\t});\n\t\t});\n\t}\n}\n\nclass NumberPad {\n\tconstructor({\n\t\twrapper, onclick, button_array,\n\t\tadd_class={}, disable_highlight=[],\n\t\treset_btns=[], del_btn='',\n\t}) {\n\t\tthis.wrapper = wrapper;\n\t\tthis.onclick = onclick;\n\t\tthis.button_array = button_array;\n\t\tthis.add_class = add_class;\n\t\tthis.disable_highlight = disable_highlight;\n\t\tthis.reset_btns = reset_btns;\n\t\tthis.del_btn = del_btn;\n\t\tthis.make_dom();\n\t\tthis.bind_events();\n\t\tthis.value = '';\n\t}\n\n\tmake_dom() {\n\t\tif (!this.button_array) {\n\t\t\tthis.button_array = [\n\t\t\t\t[1, 2, 3],\n\t\t\t\t[4, 5, 6],\n\t\t\t\t[7, 8, 9],\n\t\t\t\t['', 0, '']\n\t\t\t];\n\t\t}\n\n\t\tthis.wrapper.html(`\n\t\t\t<div class=\"number-pad\">\n\t\t\t\t${this.button_array.map(get_row).join(\"\")}\n\t\t\t</div>\n\t\t`);\n\n\t\tfunction get_row(row) {\n\t\t\treturn '<div class=\"num-row\">' + row.map(get_col).join(\"\") + '</div>';\n\t\t}\n\n\t\tfunction get_col(col) {\n\t\t\treturn `<div class=\"num-col\" data-value=\"${col}\"><div>${col}</div></div>`;\n\t\t}\n\n\t\tthis.set_class();\n\t}\n\n\tset_class() {\n\t\tfor (const btn in this.add_class) {\n\t\t\tconst class_name = this.add_class[btn];\n\t\t\tthis.get_btn(btn).addClass(class_name);\n\t\t}\n\t}\n\n\tbind_events() {\n\t\t// bind click event\n\t\tconst me = this;\n\t\tthis.wrapper.on('click', '.num-col', function() {\n\t\t\tconst $btn = $(this);\n\t\t\tconst btn_value = $btn.attr('data-value');\n\t\t\tif (!me.disable_highlight.includes(btn_value)) {\n\t\t\t\tme.highlight_button($btn);\n\t\t\t}\n\t\t\tif (me.reset_btns.includes(btn_value)) {\n\t\t\t\tme.reset_value();\n\t\t\t} else {\n\t\t\t\tif (btn_value === me.del_btn) {\n\t\t\t\t\tme.value = me.value.substr(0, me.value.length - 1);\n\t\t\t\t} else {\n\t\t\t\t\tme.value += btn_value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tme.onclick(btn_value);\n\t\t});\n\t}\n\n\treset_value() {\n\t\tthis.value = '';\n\t}\n\n\tget_value() {\n\t\treturn flt(this.value);\n\t}\n\n\tget_btn(btn_value) {\n\t\treturn this.wrapper.find(`.num-col[data-value=\"${btn_value}\"]`);\n\t}\n\n\thighlight_button($btn) {\n\t\t$btn.addClass('highlight');\n\t\tsetTimeout(() => $btn.removeClass('highlight'), 1000);\n\t}\n\n\tset_active(btn_value) {\n\t\tconst $btn = this.get_btn(btn_value);\n\t\tthis.wrapper.find('.num-col').removeClass('active');\n\t\t$btn.addClass('active');\n\t}\n\n\tset_inactive() {\n\t\tthis.wrapper.find('.num-col').removeClass('active');\n\t}\n}\n\nclass Payment {\n\tconstructor({frm, events}) {\n\t\tthis.frm = frm;\n\t\tthis.events = events;\n\t\tthis.make();\n\t\tthis.bind_events();\n\t\tthis.set_primary_action();\n\t}\n\n\topen_modal() {\n\t\tthis.dialog.show();\n\t}\n\n\tmake() {\n\t\tthis.set_flag();\n\n\t\tlet title = __('Total Amount {0}',\n\t\t\t[format_currency(this.frm.doc.grand_total, this.frm.doc.currency)]);\n\n\t\tthis.dialog = new frappe.ui.Dialog({\n\t\t\ttitle: title,\n\t\t\tfields: this.get_fields(),\n\t\t\twidth: 800\n\t\t});\n\n\t\tthis.$body = this.dialog.body;\n\n\t\tthis.numpad = new NumberPad({\n\t\t\twrapper: $(this.$body).find('[data-fieldname=\"numpad\"]'),\n\t\t\tbutton_array: [\n\t\t\t\t[1, 2, 3],\n\t\t\t\t[4, 5, 6],\n\t\t\t\t[7, 8, 9],\n\t\t\t\t['Del', 0, '.'],\n\t\t\t],\n\t\t\tonclick: () => {\n\t\t\t\tif(this.fieldname) {\n\t\t\t\t\tthis.dialog.set_value(this.fieldname, this.numpad.get_value());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tbind_events() {\n\t\tvar me = this;\n\t\t$(this.dialog.body).find('.input-with-feedback').focusin(function() {\n\t\t\tme.numpad.reset_value();\n\t\t\tme.fieldname = $(this).prop('dataset').fieldname;\n\t\t});\n\t}\n\n\tset_primary_action() {\n\t\tvar me = this;\n\n\t\tthis.dialog.set_primary_action(__(\"Submit\"), function() {\n\t\t\tme.dialog.hide();\n\t\t\tme.events.submit_form();\n\t\t});\n\t}\n\n\tget_fields() {\n\t\tconst me = this;\n\n\t\tlet fields = this.frm.doc.payments.map(p => {\n\t\t\treturn {\n\t\t\t\tfieldtype: 'Currency',\n\t\t\t\tlabel: __(p.mode_of_payment),\n\t\t\t\toptions: me.frm.doc.currency,\n\t\t\t\tfieldname: p.mode_of_payment,\n\t\t\t\tdefault: p.amount,\n\t\t\t\tonchange: () => {\n\t\t\t\t\tconst value = this.dialog.get_value(this.fieldname);\n\t\t\t\t\tme.update_payment_value(this.fieldname, value);\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\n\t\tfields = fields.concat([\n\t\t\t{\n\t\t\t\tfieldtype: 'Column Break',\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'HTML',\n\t\t\t\tfieldname: 'numpad'\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Section Break',\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Currency',\n\t\t\t\tlabel: __(\"Write off Amount\"),\n\t\t\t\toptions: me.frm.doc.currency,\n\t\t\t\tfieldname: \"write_off_amount\",\n\t\t\t\tdefault: me.frm.doc.write_off_amount,\n\t\t\t\tonchange: () => {\n\t\t\t\t\tme.update_cur_frm_value('write_off_amount', () => {\n\t\t\t\t\t\tfrappe.flags.change_amount = false;\n\t\t\t\t\t\tme.update_change_amount();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Column Break',\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Currency',\n\t\t\t\tlabel: __(\"Change Amount\"),\n\t\t\t\toptions: me.frm.doc.currency,\n\t\t\t\tfieldname: \"change_amount\",\n\t\t\t\tdefault: me.frm.doc.change_amount,\n\t\t\t\tonchange: () => {\n\t\t\t\t\tme.update_cur_frm_value('change_amount', () => {\n\t\t\t\t\t\tfrappe.flags.write_off_amount = false;\n\t\t\t\t\t\tme.update_write_off_amount();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Section Break',\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Currency',\n\t\t\t\tlabel: __(\"Paid Amount\"),\n\t\t\t\toptions: me.frm.doc.currency,\n\t\t\t\tfieldname: \"paid_amount\",\n\t\t\t\tdefault: me.frm.doc.paid_amount,\n\t\t\t\tread_only: 1\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Column Break',\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Currency',\n\t\t\t\tlabel: __(\"Outstanding Amount\"),\n\t\t\t\toptions: me.frm.doc.currency,\n\t\t\t\tfieldname: \"outstanding_amount\",\n\t\t\t\tdefault: me.frm.doc.outstanding_amount,\n\t\t\t\tread_only: 1\n\t\t\t},\n\t\t]);\n\n\t\treturn fields;\n\t}\n\n\tset_flag() {\n\t\tfrappe.flags.write_off_amount = true;\n\t\tfrappe.flags.change_amount = true;\n\t}\n\n\tupdate_cur_frm_value(fieldname, callback) {\n\t\tif (frappe.flags[fieldname]) {\n\t\t\tconst value = this.dialog.get_value(fieldname);\n\t\t\tthis.frm.set_value(fieldname, value)\n\t\t\t\t.then(() => {\n\t\t\t\t\tcallback();\n\t\t\t\t});\n\t\t}\n\n\t\tfrappe.flags[fieldname] = true;\n\t}\n\n\tupdate_payment_value(fieldname, value) {\n\t\tvar me = this;\n\t\t$.each(this.frm.doc.payments, function(i, data) {\n\t\t\tif (__(data.mode_of_payment) == __(fieldname)) {\n\t\t\t\tfrappe.model.set_value('Sales Invoice Payment', data.name, 'amount', value)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tme.update_change_amount();\n\t\t\t\t\t\tme.update_write_off_amount();\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tupdate_change_amount() {\n\t\tthis.dialog.set_value(\"change_amount\", this.frm.doc.change_amount);\n\t\tthis.show_paid_amount();\n\t}\n\n\tupdate_write_off_amount() {\n\t\tthis.dialog.set_value(\"write_off_amount\", this.frm.doc.write_off_amount);\n\t}\n\n\tshow_paid_amount() {\n\t\tthis.dialog.set_value(\"paid_amount\", this.frm.doc.paid_amount);\n\t\tthis.dialog.set_value(\"outstanding_amount\", this.frm.doc.outstanding_amount);\n\t}\n}\n","title":"Point of Sale","restrict_to_domain":"Retail","modified":"2017-09-11 13:49:05.415211","content":null,"idx":0,"parenttype":null,"page_name":"Point of Sale","docstatus":0,"parentfield":null}]}